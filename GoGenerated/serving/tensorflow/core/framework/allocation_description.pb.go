// Code generated by protoc-gen-go.
// source: serving/tensorflow/core/framework/allocation_description.proto
// DO NOT EDIT!

/*
Package tensorflow is a generated protocol buffer package.

It is generated from these files:
	serving/tensorflow/core/framework/allocation_description.proto

It has these top-level messages:
	AllocationDescription
*/
package tensorflow

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AllocationDescription struct {
	// Total number of bytes requested
	RequestedBytes int64 `protobuf:"varint,1,opt,name=requested_bytes,json=requestedBytes" json:"requested_bytes,omitempty"`
	// Total number of bytes allocated if known
	AllocatedBytes int64 `protobuf:"varint,2,opt,name=allocated_bytes,json=allocatedBytes" json:"allocated_bytes,omitempty"`
	// Name of the allocator used
	AllocatorName string `protobuf:"bytes,3,opt,name=allocator_name,json=allocatorName" json:"allocator_name,omitempty"`
	// Identifier of the allocated buffer if known
	AllocationId int64 `protobuf:"varint,4,opt,name=allocation_id,json=allocationId" json:"allocation_id,omitempty"`
	// Set if this tensor only has one remaining reference
	HasSingleReference bool `protobuf:"varint,5,opt,name=has_single_reference,json=hasSingleReference" json:"has_single_reference,omitempty"`
	// Address of the allocation.
	Ptr uint64 `protobuf:"varint,6,opt,name=ptr" json:"ptr,omitempty"`
}

func (m *AllocationDescription) Reset()                    { *m = AllocationDescription{} }
func (m *AllocationDescription) String() string            { return proto.CompactTextString(m) }
func (*AllocationDescription) ProtoMessage()               {}
func (*AllocationDescription) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AllocationDescription) GetRequestedBytes() int64 {
	if m != nil {
		return m.RequestedBytes
	}
	return 0
}

func (m *AllocationDescription) GetAllocatedBytes() int64 {
	if m != nil {
		return m.AllocatedBytes
	}
	return 0
}

func (m *AllocationDescription) GetAllocatorName() string {
	if m != nil {
		return m.AllocatorName
	}
	return ""
}

func (m *AllocationDescription) GetAllocationId() int64 {
	if m != nil {
		return m.AllocationId
	}
	return 0
}

func (m *AllocationDescription) GetHasSingleReference() bool {
	if m != nil {
		return m.HasSingleReference
	}
	return false
}

func (m *AllocationDescription) GetPtr() uint64 {
	if m != nil {
		return m.Ptr
	}
	return 0
}

func init() {
	proto.RegisterType((*AllocationDescription)(nil), "tensorflow.AllocationDescription")
}

func init() {
	proto.RegisterFile("serving/tensorflow/core/framework/allocation_description.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x4f, 0x4b, 0xfc, 0x30,
	0x10, 0x40, 0xc9, 0xaf, 0xfb, 0x5b, 0x34, 0xb8, 0x2a, 0x41, 0x21, 0xe0, 0xa5, 0x28, 0x62, 0x4f,
	0xad, 0xe0, 0x55, 0x04, 0x8b, 0x17, 0x2f, 0xb2, 0xd4, 0x0f, 0x50, 0xb2, 0xed, 0xb4, 0x1b, 0x6c,
	0x33, 0x75, 0x12, 0x5d, 0xfc, 0xe6, 0x7a, 0x93, 0x74, 0xdd, 0xd4, 0x83, 0xb7, 0xe1, 0xcd, 0xcb,
	0x1f, 0x1e, 0xbf, 0xb3, 0x40, 0xef, 0xda, 0xb4, 0x99, 0x03, 0x63, 0x91, 0x9a, 0x0e, 0x37, 0x59,
	0x85, 0x04, 0x59, 0x43, 0xaa, 0x87, 0x0d, 0xd2, 0x4b, 0xa6, 0xba, 0x0e, 0x2b, 0xe5, 0x34, 0x9a,
	0xb2, 0x06, 0x5b, 0x91, 0x1e, 0xfc, 0x9c, 0x0e, 0x84, 0x0e, 0x05, 0x9f, 0xce, 0x9d, 0x7f, 0x31,
	0x7e, 0x7a, 0x1f, 0xe4, 0x87, 0xc9, 0x15, 0x57, 0xfc, 0x88, 0xe0, 0xf5, 0x0d, 0xac, 0x83, 0xba,
	0x5c, 0x7d, 0x38, 0xb0, 0x92, 0xc5, 0x2c, 0x89, 0x8a, 0xc3, 0x80, 0x73, 0x4f, 0xbd, 0xf8, 0xf3,
	0x5c, 0x10, 0xff, 0x6d, 0xc5, 0x80, 0xb7, 0xe2, 0x25, 0xdf, 0x11, 0xa4, 0xd2, 0xa8, 0x1e, 0x64,
	0x14, 0xb3, 0x64, 0xbf, 0x58, 0x04, 0xfa, 0xa4, 0x7a, 0x10, 0x17, 0x7c, 0xf1, 0xeb, 0xfb, 0xba,
	0x96, 0xb3, 0xf1, 0xb6, 0x83, 0x09, 0x3e, 0xd6, 0xe2, 0x9a, 0x9f, 0xac, 0x95, 0x2d, 0xad, 0x36,
	0x6d, 0x07, 0x25, 0x41, 0x03, 0x04, 0xa6, 0x02, 0xf9, 0x3f, 0x66, 0xc9, 0x5e, 0x21, 0xd6, 0xca,
	0x3e, 0x8f, 0xab, 0x62, 0xb7, 0x11, 0xc7, 0x3c, 0x1a, 0x1c, 0xc9, 0x79, 0xcc, 0x92, 0x59, 0xe1,
	0xc7, 0xfc, 0x96, 0x4b, 0xa4, 0x36, 0x9d, 0x6a, 0xa4, 0x21, 0x60, 0x7e, 0xf6, 0x67, 0x94, 0xa5,
	0xef, 0x67, 0x97, 0xec, 0x93, 0xb1, 0xd5, 0x7c, 0x8c, 0x79, 0xf3, 0x1d, 0x00, 0x00, 0xff, 0xff,
	0x50, 0x99, 0xa5, 0x2a, 0x8e, 0x01, 0x00, 0x00,
}
