// Code generated by protoc-gen-go.
// source: serving/tensorflow/core/protobuf/cluster.proto
// DO NOT EDIT!

/*
Package tensorflow is a generated protocol buffer package.

It is generated from these files:
	serving/tensorflow/core/protobuf/cluster.proto

It has these top-level messages:
	JobDef
	ClusterDef
*/
package tensorflow

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Defines a single job in a TensorFlow cluster.
type JobDef struct {
	// The name of this job.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Mapping from task ID to "hostname:port" string.
	//
	// If the `name` field contains "worker", and the `tasks` map contains a
	// mapping from 7 to "example.org:2222", then the device prefix
	// "/job:worker/task:7" will be assigned to "example.org:2222".
	Tasks map[int32]string `protobuf:"bytes,2,rep,name=tasks" json:"tasks,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *JobDef) Reset()                    { *m = JobDef{} }
func (m *JobDef) String() string            { return proto.CompactTextString(m) }
func (*JobDef) ProtoMessage()               {}
func (*JobDef) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *JobDef) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobDef) GetTasks() map[int32]string {
	if m != nil {
		return m.Tasks
	}
	return nil
}

// Defines a TensorFlow cluster as a set of jobs.
type ClusterDef struct {
	// The jobs that comprise the cluster.
	Job []*JobDef `protobuf:"bytes,1,rep,name=job" json:"job,omitempty"`
}

func (m *ClusterDef) Reset()                    { *m = ClusterDef{} }
func (m *ClusterDef) String() string            { return proto.CompactTextString(m) }
func (*ClusterDef) ProtoMessage()               {}
func (*ClusterDef) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ClusterDef) GetJob() []*JobDef {
	if m != nil {
		return m.Job
	}
	return nil
}

func init() {
	proto.RegisterType((*JobDef)(nil), "tensorflow.JobDef")
	proto.RegisterType((*ClusterDef)(nil), "tensorflow.ClusterDef")
}

func init() { proto.RegisterFile("serving/tensorflow/core/protobuf/cluster.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x50, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0x66, 0x12, 0x53, 0x70, 0x44, 0x90, 0xc5, 0x43, 0x28, 0x08, 0xa5, 0x78, 0xe8, 0x69, 0x23,
	0xed, 0xa5, 0x78, 0xac, 0x7a, 0xf1, 0x54, 0x82, 0x2f, 0x90, 0xd4, 0x49, 0x89, 0x4d, 0x77, 0x64,
	0x76, 0x53, 0xc9, 0x33, 0xf8, 0xc2, 0x1e, 0x65, 0x77, 0x85, 0x08, 0xbd, 0xcd, 0xce, 0xf7, 0xbb,
	0x83, 0xda, 0x92, 0x9c, 0x5a, 0xb3, 0x2f, 0x1c, 0x19, 0xcb, 0xd2, 0x74, 0xfc, 0x55, 0xec, 0x58,
	0xa8, 0xf8, 0x14, 0x76, 0x5c, 0xf7, 0x4d, 0xb1, 0xeb, 0x7a, 0xeb, 0x48, 0x74, 0x58, 0x28, 0x1c,
	0x79, 0xf3, 0x6f, 0xc0, 0xc9, 0x2b, 0xd7, 0xcf, 0xd4, 0x28, 0x85, 0x17, 0xa6, 0x3a, 0x52, 0x0e,
	0x33, 0x58, 0x5c, 0x96, 0x61, 0x56, 0x2b, 0xcc, 0x5c, 0x65, 0x0f, 0x36, 0x4f, 0x66, 0xe9, 0xe2,
	0x6a, 0x79, 0xa7, 0x47, 0xa9, 0x8e, 0x32, 0xfd, 0xe6, 0xf1, 0x17, 0xe3, 0x64, 0x28, 0x23, 0x77,
	0xba, 0x46, 0x1c, 0x97, 0xea, 0x06, 0xd3, 0x03, 0x0d, 0xc1, 0x35, 0x2b, 0xfd, 0xa8, 0x6e, 0x31,
	0x3b, 0x55, 0x5d, 0x4f, 0x79, 0x12, 0x92, 0xe2, 0xe3, 0x31, 0x59, 0xc3, 0x7c, 0x89, 0xf8, 0x14,
	0xab, 0xfa, 0x42, 0xf7, 0x98, 0x7e, 0x70, 0x9d, 0x43, 0x88, 0x56, 0xe7, 0xd1, 0xa5, 0x87, 0x37,
	0x0f, 0x38, 0x65, 0xd9, 0xff, 0x47, 0xdf, 0x5b, 0xeb, 0xa4, 0x37, 0xae, 0x3d, 0xd2, 0xe6, 0xfa,
	0xcf, 0x6f, 0xeb, 0x7f, 0x6e, 0xb7, 0xf0, 0x03, 0x50, 0x4f, 0xc2, 0x19, 0x56, 0xbf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x5f, 0xa2, 0x78, 0x3f, 0x38, 0x01, 0x00, 0x00,
}
