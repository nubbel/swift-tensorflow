// Code generated by protoc-gen-go.
// source: serving/tensorflow_serving/resources/resources.proto
// DO NOT EDIT!

/*
Package tensorflow_serving is a generated protocol buffer package.

It is generated from these files:
	serving/tensorflow_serving/resources/resources.proto

It has these top-level messages:
	Resource
	ResourceAllocation
*/
package tensorflow_serving

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// One kind of resource on one device (or type of device).
type Resource struct {
	// The type of device on which the resource resides, e.g. CPU or GPU.
	Device string `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
	// A specific instance of the device of type 'device' to which the resources
	// are bound (instances are assumed to be numbered 0, 1, ...).
	//
	// When representing the resources required by a servable that has yet to be
	// loaded, this field is optional. If not set, it denotes that the servable's
	// resources are not (yet) bound to a specific instance.
	DeviceInstance *google_protobuf.UInt32Value `protobuf:"bytes,2,opt,name=device_instance,json=deviceInstance" json:"device_instance,omitempty"`
	// The kind of resource on the device (instance), e.g. RAM or compute share.
	//
	// A given type of resource should have a standard unit that represents the
	// smallest useful quantization. We strongly recommend including the unit
	// (e.g. bytes or millicores) in this string, as in "ram_bytes".
	Kind string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
}

func (m *Resource) Reset()                    { *m = Resource{} }
func (m *Resource) String() string            { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()               {}
func (*Resource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Resource) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *Resource) GetDeviceInstance() *google_protobuf.UInt32Value {
	if m != nil {
		return m.DeviceInstance
	}
	return nil
}

func (m *Resource) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

// An allocation of one or more kinds of resources, along with the quantity of
// each. Used to denote the resources that a servable (or collection of
// servables) will use or is currently using. Also used to denote resources
// available to the serving system for loading more servables.
type ResourceAllocation struct {
	ResourceQuantities []*ResourceAllocation_Entry `protobuf:"bytes,1,rep,name=resource_quantities,json=resourceQuantities" json:"resource_quantities,omitempty"`
}

func (m *ResourceAllocation) Reset()                    { *m = ResourceAllocation{} }
func (m *ResourceAllocation) String() string            { return proto.CompactTextString(m) }
func (*ResourceAllocation) ProtoMessage()               {}
func (*ResourceAllocation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ResourceAllocation) GetResourceQuantities() []*ResourceAllocation_Entry {
	if m != nil {
		return m.ResourceQuantities
	}
	return nil
}

// A collection of resources, each with a quantity. Treated as a resource->
// quantity map, i.e. no resource can repeat and the order is immaterial.
type ResourceAllocation_Entry struct {
	Resource *Resource `protobuf:"bytes,1,opt,name=resource" json:"resource,omitempty"`
	Quantity uint64    `protobuf:"varint,2,opt,name=quantity" json:"quantity,omitempty"`
}

func (m *ResourceAllocation_Entry) Reset()                    { *m = ResourceAllocation_Entry{} }
func (m *ResourceAllocation_Entry) String() string            { return proto.CompactTextString(m) }
func (*ResourceAllocation_Entry) ProtoMessage()               {}
func (*ResourceAllocation_Entry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *ResourceAllocation_Entry) GetResource() *Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *ResourceAllocation_Entry) GetQuantity() uint64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func init() {
	proto.RegisterType((*Resource)(nil), "tensorflow.serving.Resource")
	proto.RegisterType((*ResourceAllocation)(nil), "tensorflow.serving.ResourceAllocation")
	proto.RegisterType((*ResourceAllocation_Entry)(nil), "tensorflow.serving.ResourceAllocation.Entry")
}

func init() {
	proto.RegisterFile("serving/tensorflow_serving/resources/resources.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x31, 0x6b, 0xfb, 0x30,
	0x10, 0xc5, 0xf1, 0x3f, 0xf9, 0x07, 0x57, 0x81, 0x16, 0xae, 0x50, 0x8c, 0x29, 0xc5, 0x64, 0xf2,
	0x50, 0x64, 0x70, 0x3a, 0x74, 0xed, 0x90, 0x21, 0x63, 0x05, 0xed, 0x16, 0x8c, 0xe3, 0x5c, 0x8c,
	0xa8, 0x90, 0x5c, 0x49, 0x4e, 0xc8, 0xd0, 0x2f, 0xd9, 0x4f, 0x54, 0x2a, 0x4b, 0xce, 0x10, 0xe8,
	0xf6, 0xce, 0xf7, 0xde, 0xcf, 0x7a, 0x47, 0x9e, 0x0c, 0xea, 0x03, 0x97, 0x6d, 0x61, 0x51, 0x1a,
	0xa5, 0xf7, 0x42, 0x1d, 0xab, 0xf0, 0x49, 0xa3, 0x51, 0xbd, 0x6e, 0xd0, 0x9c, 0x15, 0xed, 0xb4,
	0xb2, 0x0a, 0xe0, 0xec, 0xa6, 0xde, 0x9d, 0x3e, 0xb4, 0x4a, 0xb5, 0x02, 0x0b, 0xe7, 0xd8, 0xf6,
	0xfb, 0xe2, 0xa8, 0xeb, 0xae, 0x43, 0xed, 0x33, 0x8b, 0x2f, 0x12, 0x33, 0x8f, 0x81, 0x3b, 0x32,
	0xdb, 0xe1, 0x81, 0x37, 0x98, 0x44, 0x59, 0x94, 0x5f, 0x31, 0x3f, 0xc1, 0x8a, 0xdc, 0x0c, 0xaa,
	0xe2, 0xd2, 0xd8, 0x5a, 0x36, 0x98, 0xfc, 0xcb, 0xa2, 0x7c, 0x5e, 0xde, 0xd3, 0x81, 0x4e, 0x03,
	0x9d, 0xbe, 0xad, 0xa5, 0x5d, 0x96, 0xef, 0xb5, 0xe8, 0x91, 0x5d, 0x0f, 0xa1, 0xb5, 0xcf, 0x00,
	0x90, 0xe9, 0x07, 0x97, 0xbb, 0x64, 0xe2, 0xe0, 0x4e, 0x2f, 0xbe, 0x23, 0x02, 0xe1, 0xff, 0x2f,
	0x42, 0xa8, 0xa6, 0xb6, 0x5c, 0x49, 0xd8, 0x90, 0xdb, 0x50, 0xae, 0xfa, 0xec, 0x6b, 0x69, 0xb9,
	0xe5, 0x68, 0x92, 0x28, 0x9b, 0xe4, 0xf3, 0xf2, 0x91, 0x5e, 0xf6, 0xa4, 0x97, 0x10, 0xba, 0x92,
	0x56, 0x9f, 0x18, 0x04, 0xd0, 0xeb, 0xc8, 0x49, 0x37, 0xe4, 0xbf, 0x5b, 0xc2, 0x33, 0x89, 0xc3,
	0xda, 0x75, 0xfe, 0xad, 0xf4, 0x07, 0x9c, 0x8d, 0x6e, 0x48, 0x49, 0xec, 0x1f, 0x76, 0x72, 0xc7,
	0x98, 0xb2, 0x71, 0xde, 0xce, 0xdc, 0x39, 0x96, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x84, 0x7e,
	0x0a, 0x93, 0xc6, 0x01, 0x00, 0x00,
}
