// Code generated by protoc-gen-go.
// source: serving/tensorflow_serving/apis/regression.proto
// DO NOT EDIT!

/*
Package tensorflow_serving is a generated protocol buffer package.

It is generated from these files:
	serving/tensorflow_serving/apis/regression.proto

It has these top-level messages:
	Regression
	RegressionResult
	RegressionRequest
	RegressionResponse
*/
package tensorflow_serving

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import tensorflow_serving1 "tensorflow_serving/apis"
import tensorflow_serving2 "tensorflow_serving/apis"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Regression result for a single item (tensorflow.Example).
type Regression struct {
	Value float32 `protobuf:"fixed32,1,opt,name=value" json:"value,omitempty"`
}

func (m *Regression) Reset()                    { *m = Regression{} }
func (m *Regression) String() string            { return proto.CompactTextString(m) }
func (*Regression) ProtoMessage()               {}
func (*Regression) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Regression) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Contains one result per input example, in the same order as the input in
// RegressionRequest.
type RegressionResult struct {
	Regressions []*Regression `protobuf:"bytes,1,rep,name=regressions" json:"regressions,omitempty"`
}

func (m *RegressionResult) Reset()                    { *m = RegressionResult{} }
func (m *RegressionResult) String() string            { return proto.CompactTextString(m) }
func (*RegressionResult) ProtoMessage()               {}
func (*RegressionResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RegressionResult) GetRegressions() []*Regression {
	if m != nil {
		return m.Regressions
	}
	return nil
}

type RegressionRequest struct {
	// Model Specification.
	ModelSpec *tensorflow_serving2.ModelSpec `protobuf:"bytes,1,opt,name=model_spec,json=modelSpec" json:"model_spec,omitempty"`
	// Input data.
	Input *tensorflow_serving1.Input `protobuf:"bytes,2,opt,name=input" json:"input,omitempty"`
}

func (m *RegressionRequest) Reset()                    { *m = RegressionRequest{} }
func (m *RegressionRequest) String() string            { return proto.CompactTextString(m) }
func (*RegressionRequest) ProtoMessage()               {}
func (*RegressionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RegressionRequest) GetModelSpec() *tensorflow_serving2.ModelSpec {
	if m != nil {
		return m.ModelSpec
	}
	return nil
}

func (m *RegressionRequest) GetInput() *tensorflow_serving1.Input {
	if m != nil {
		return m.Input
	}
	return nil
}

type RegressionResponse struct {
	Result *RegressionResult `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *RegressionResponse) Reset()                    { *m = RegressionResponse{} }
func (m *RegressionResponse) String() string            { return proto.CompactTextString(m) }
func (*RegressionResponse) ProtoMessage()               {}
func (*RegressionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RegressionResponse) GetResult() *RegressionResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*Regression)(nil), "tensorflow.serving.Regression")
	proto.RegisterType((*RegressionResult)(nil), "tensorflow.serving.RegressionResult")
	proto.RegisterType((*RegressionRequest)(nil), "tensorflow.serving.RegressionRequest")
	proto.RegisterType((*RegressionResponse)(nil), "tensorflow.serving.RegressionResponse")
}

func init() { proto.RegisterFile("serving/tensorflow_serving/apis/regression.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 253 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0xe5, 0x56, 0xad, 0xc4, 0x65, 0x81, 0x13, 0x43, 0x40, 0x02, 0x55, 0x86, 0xa1, 0x53,
	0x82, 0xca, 0xda, 0x01, 0xb1, 0x31, 0xb0, 0x18, 0xf6, 0xaa, 0x94, 0xa3, 0x8a, 0x94, 0xda, 0xc6,
	0x67, 0x97, 0x9d, 0x5f, 0xcd, 0x88, 0x6a, 0xa7, 0x24, 0x88, 0x46, 0x6c, 0xb6, 0xf5, 0x7d, 0xe7,
	0xf7, 0x0e, 0x6e, 0x98, 0xdc, 0xb6, 0xd2, 0xeb, 0xd2, 0x93, 0x66, 0xe3, 0xde, 0x6a, 0xf3, 0xb1,
	0xd8, 0x3f, 0x2d, 0x6d, 0xc5, 0xa5, 0xa3, 0xb5, 0x23, 0xe6, 0xca, 0xe8, 0xc2, 0x3a, 0xe3, 0x0d,
	0x62, 0x4b, 0x16, 0x0d, 0x79, 0x7e, 0xd5, 0x67, 0x57, 0xda, 0x06, 0x9f, 0xc4, 0x7e, 0x68, 0x63,
	0x5e, 0xa9, 0x4e, 0x90, 0x94, 0x00, 0xea, 0xe7, 0x47, 0x3c, 0x85, 0xd1, 0x76, 0x59, 0x07, 0xca,
	0xc5, 0x44, 0x4c, 0x07, 0x2a, 0x5d, 0xe4, 0x33, 0x1c, 0xb7, 0x8c, 0x22, 0x0e, 0xb5, 0xc7, 0x3b,
	0xc8, 0xda, 0xa4, 0x9c, 0x8b, 0xc9, 0x70, 0x9a, 0xcd, 0x2e, 0x8b, 0xbf, 0x59, 0x8b, 0x8e, 0xda,
	0x55, 0xe4, 0xa7, 0x80, 0x93, 0xee, 0xd8, 0xf7, 0x40, 0xec, 0x71, 0x0e, 0x10, 0xe3, 0x2d, 0xd8,
	0xd2, 0x2a, 0xc6, 0xc8, 0x66, 0x17, 0x87, 0xc6, 0x3e, 0xee, 0xa8, 0x27, 0x4b, 0x2b, 0x75, 0xb4,
	0xd9, 0x1f, 0xb1, 0x84, 0x51, 0xdc, 0x40, 0x3e, 0x88, 0xe2, 0xd9, 0x21, 0xf1, 0x61, 0x07, 0xa8,
	0xc4, 0x49, 0x05, 0xf8, 0xab, 0x9a, 0x35, 0x9a, 0x09, 0xe7, 0x30, 0x76, 0xb1, 0x66, 0x13, 0xe0,
	0xfa, 0x9f, 0x5e, 0x91, 0x55, 0x8d, 0x73, 0x3f, 0xfc, 0x12, 0xe2, 0x65, 0x1c, 0xd7, 0x7b, 0xfb,
	0x1d, 0x00, 0x00, 0xff, 0xff, 0xbd, 0x9a, 0xf3, 0x17, 0xf0, 0x01, 0x00, 0x00,
}
