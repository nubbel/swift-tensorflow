// Code generated by protoc-gen-go.
// source: serving/tensorflow_serving/config/platform_config.proto
// DO NOT EDIT!

/*
Package tensorflow_serving is a generated protocol buffer package.

It is generated from these files:
	serving/tensorflow_serving/config/platform_config.proto

It has these top-level messages:
	PlatformConfig
	PlatformConfigMap
*/
package tensorflow_serving

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Configuration for a servable platform e.g. tensorflow or other ML systems.
type PlatformConfig struct {
	// The config proto for a SourceAdapter in the StoragePathSourceAdapter
	// registry.
	SourceAdapterConfig *google_protobuf.Any `protobuf:"bytes,1,opt,name=source_adapter_config,json=sourceAdapterConfig" json:"source_adapter_config,omitempty"`
}

func (m *PlatformConfig) Reset()                    { *m = PlatformConfig{} }
func (m *PlatformConfig) String() string            { return proto.CompactTextString(m) }
func (*PlatformConfig) ProtoMessage()               {}
func (*PlatformConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PlatformConfig) GetSourceAdapterConfig() *google_protobuf.Any {
	if m != nil {
		return m.SourceAdapterConfig
	}
	return nil
}

type PlatformConfigMap struct {
	// A map from a platform name to a platform config. The platform name is used
	// in ModelConfig.model_platform.
	PlatformConfigs map[string]*PlatformConfig `protobuf:"bytes,1,rep,name=platform_configs,json=platformConfigs" json:"platform_configs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *PlatformConfigMap) Reset()                    { *m = PlatformConfigMap{} }
func (m *PlatformConfigMap) String() string            { return proto.CompactTextString(m) }
func (*PlatformConfigMap) ProtoMessage()               {}
func (*PlatformConfigMap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PlatformConfigMap) GetPlatformConfigs() map[string]*PlatformConfig {
	if m != nil {
		return m.PlatformConfigs
	}
	return nil
}

func init() {
	proto.RegisterType((*PlatformConfig)(nil), "tensorflow.serving.PlatformConfig")
	proto.RegisterType((*PlatformConfigMap)(nil), "tensorflow.serving.PlatformConfigMap")
}

func init() {
	proto.RegisterFile("serving/tensorflow_serving/config/platform_config.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x2f, 0x4e, 0x2d, 0x2a,
	0xcb, 0xcc, 0x4b, 0xd7, 0x2f, 0x49, 0xcd, 0x2b, 0xce, 0x2f, 0x4a, 0xcb, 0xc9, 0x2f, 0x8f, 0x87,
	0x09, 0x25, 0xe7, 0xe7, 0xa5, 0x65, 0xa6, 0xeb, 0x17, 0xe4, 0x24, 0x96, 0xa4, 0xe5, 0x17, 0xe5,
	0xc6, 0x43, 0xf8, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x42, 0x08, 0x0d, 0x7a, 0x50, 0x0d,
	0x52, 0x92, 0xe9, 0xf9, 0xf9, 0xe9, 0x39, 0xa9, 0xfa, 0x60, 0x15, 0x49, 0xa5, 0x69, 0xfa, 0x89,
	0x79, 0x95, 0x10, 0xe5, 0x4a, 0x51, 0x5c, 0x7c, 0x01, 0x50, 0x73, 0x9c, 0xc1, 0xc6, 0x08, 0x79,
	0x70, 0x89, 0x16, 0xe7, 0x97, 0x16, 0x25, 0xa7, 0xc6, 0x27, 0xa6, 0x24, 0x16, 0x94, 0xa4, 0x16,
	0x41, 0xcd, 0x97, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x36, 0x12, 0xd1, 0x83, 0x18, 0xa6, 0x07, 0x33,
	0x4c, 0xcf, 0x31, 0xaf, 0x32, 0x48, 0x18, 0xa2, 0xc5, 0x11, 0xa2, 0x03, 0x62, 0x92, 0xd2, 0x23,
	0x46, 0x2e, 0x41, 0x54, 0xc3, 0x7d, 0x13, 0x0b, 0x84, 0x52, 0xb9, 0x04, 0xd0, 0x5c, 0x5e, 0x2c,
	0xc1, 0xa8, 0xc0, 0xac, 0xc1, 0x6d, 0x64, 0xa5, 0x87, 0xe9, 0x76, 0x3d, 0x0c, 0x03, 0xd0, 0x44,
	0x8a, 0x5d, 0xf3, 0x4a, 0x8a, 0x2a, 0x83, 0xf8, 0x0b, 0x50, 0x45, 0xa5, 0xd2, 0xb8, 0x44, 0xb0,
	0x29, 0x14, 0x12, 0xe0, 0x62, 0xce, 0x4e, 0xad, 0x04, 0x7b, 0x86, 0x33, 0x08, 0xc4, 0x14, 0xb2,
	0xe0, 0x62, 0x2d, 0x4b, 0xcc, 0x29, 0x4d, 0x95, 0x60, 0x02, 0x7b, 0x50, 0x89, 0xb0, 0x2b, 0x82,
	0x20, 0x1a, 0xac, 0x98, 0x2c, 0x18, 0x9d, 0x98, 0x7f, 0x30, 0x32, 0x26, 0xb1, 0x81, 0x03, 0xc3,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x35, 0xbd, 0x8a, 0xe2, 0xb6, 0x01, 0x00, 0x00,
}
