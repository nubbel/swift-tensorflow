# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tensorflow/compiler/xla/xla_data.proto

require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "xla.PaddingConfig" do
    repeated :dimensions, :message, 1, "xla.PaddingConfig.PaddingConfigDimension"
  end
  add_message "xla.PaddingConfig.PaddingConfigDimension" do
    optional :edge_padding_low, :int64, 1
    optional :edge_padding_high, :int64, 2
    optional :interior_padding, :int64, 3
  end
  add_message "xla.Layout" do
    repeated :minor_to_major, :int64, 1
    repeated :padded_dimensions, :int64, 2
    optional :padding_value, :enum, 3, "xla.PaddingValue"
  end
  add_message "xla.Shape" do
    optional :element_type, :enum, 2, "xla.PrimitiveType"
    repeated :dimensions, :int64, 3
    repeated :tuple_shapes, :message, 4, "xla.Shape"
    optional :layout, :message, 5, "xla.Layout"
  end
  add_message "xla.ProgramShape" do
    repeated :parameters, :message, 1, "xla.Shape"
    optional :result, :message, 2, "xla.Shape"
    repeated :parameter_names, :string, 3
  end
  add_message "xla.ComputationStats" do
    optional :flop_count, :double, 1
    optional :transcendental_count, :double, 2
  end
  add_message "xla.OpMetadata" do
    optional :op_type, :string, 1
    optional :op_name, :string, 2
    optional :source_file, :string, 3
    optional :source_line, :int32, 4
  end
  add_message "xla.ExecutionProfile" do
    optional :compilation_cache_hit, :bool, 1
    optional :compile_time_ms, :int64, 2
    optional :compute_cycle_count, :int64, 3
    optional :compute_time_ns, :int64, 4
    optional :compute_and_transfer_time_ns, :int64, 5
  end
  add_message "xla.ComputationHandle" do
    optional :handle, :int64, 1
  end
  add_message "xla.ExecutionHandle" do
    optional :handle, :int64, 1
  end
  add_message "xla.GlobalDataHandle" do
    optional :handle, :int64, 1
  end
  add_message "xla.ComputationDataHandle" do
    optional :handle, :int64, 1
  end
  add_message "xla.DeviceHandle" do
    optional :handle, :int64, 1
  end
  add_message "xla.ChannelHandle" do
    optional :handle, :int64, 1
  end
  add_message "xla.Literal" do
    optional :shape, :message, 1, "xla.Shape"
    repeated :preds, :bool, 2
    optional :u8s, :bytes, 3
    repeated :s32s, :int32, 4
    repeated :s64s, :int64, 5
    repeated :u32s, :uint32, 6
    repeated :u64s, :uint64, 7
    repeated :f32s, :float, 8
    repeated :f64s, :double, 9
    repeated :tuple_literals, :message, 10, "xla.Literal"
  end
  add_message "xla.WindowDimension" do
    optional :size, :int64, 1
    optional :stride, :int64, 2
    optional :padding_low, :int64, 3
    optional :padding_high, :int64, 4
    optional :window_dilation, :int64, 5
    optional :base_dilation, :int64, 6
  end
  add_message "xla.Window" do
    repeated :dimensions, :message, 1, "xla.WindowDimension"
  end
  add_message "xla.ConstantRequest" do
    optional :literal, :message, 2, "xla.Literal"
  end
  add_message "xla.GetTupleElementRequest" do
    optional :operand, :message, 2, "xla.ComputationDataHandle"
    optional :index, :int64, 3
  end
  add_message "xla.SliceRequest" do
    optional :operand, :message, 2, "xla.ComputationDataHandle"
    repeated :start_indices, :int64, 3
    repeated :limit_indices, :int64, 4
  end
  add_message "xla.DynamicSliceRequest" do
    optional :operand, :message, 2, "xla.ComputationDataHandle"
    optional :start_indices, :message, 3, "xla.ComputationDataHandle"
    repeated :slice_sizes, :int64, 4
  end
  add_message "xla.DynamicUpdateSliceRequest" do
    optional :operand, :message, 2, "xla.ComputationDataHandle"
    optional :update, :message, 3, "xla.ComputationDataHandle"
    optional :start_indices, :message, 4, "xla.ComputationDataHandle"
  end
  add_message "xla.ConvolutionDimensionNumbers" do
    optional :batch_dimension, :int64, 1
    optional :feature_dimension, :int64, 2
    repeated :spatial_dimensions, :int64, 5
    optional :kernel_input_feature_dimension, :int64, 3
    optional :kernel_output_feature_dimension, :int64, 4
    repeated :kernel_spatial_dimensions, :int64, 6
  end
  add_message "xla.ConvolveRequest" do
    optional :lhs, :message, 2, "xla.ComputationDataHandle"
    optional :rhs, :message, 3, "xla.ComputationDataHandle"
    optional :window, :message, 4, "xla.Window"
    optional :dimension_numbers, :message, 5, "xla.ConvolutionDimensionNumbers"
  end
  add_message "xla.InfeedRequest" do
    optional :shape, :message, 2, "xla.Shape"
    optional :config, :bytes, 3
  end
  add_message "xla.OutfeedRequest" do
    optional :shape, :message, 1, "xla.Shape"
    optional :operand, :message, 2, "xla.ComputationDataHandle"
    optional :outfeed_config, :bytes, 3
  end
  add_message "xla.CallRequest" do
    optional :to_apply, :message, 2, "xla.ComputationHandle"
    repeated :operands, :message, 3, "xla.ComputationDataHandle"
  end
  add_message "xla.CustomCallRequest" do
    optional :call_target_name, :string, 2
    repeated :operands, :message, 3, "xla.ComputationDataHandle"
    optional :shape, :message, 4, "xla.Shape"
  end
  add_message "xla.MapRequest" do
    repeated :operands, :message, 2, "xla.ComputationDataHandle"
    optional :to_apply, :message, 3, "xla.ComputationHandle"
    repeated :static_operands, :message, 4, "xla.ComputationDataHandle"
  end
  add_message "xla.ReduceRequest" do
    optional :operand, :message, 2, "xla.ComputationDataHandle"
    optional :init_value, :message, 3, "xla.ComputationDataHandle"
    repeated :dimensions, :int64, 4
    optional :to_apply, :message, 5, "xla.ComputationHandle"
  end
  add_message "xla.ReduceWindowRequest" do
    optional :operand, :message, 2, "xla.ComputationDataHandle"
    optional :init_value, :message, 3, "xla.ComputationDataHandle"
    optional :window, :message, 4, "xla.Window"
    optional :to_apply, :message, 5, "xla.ComputationHandle"
  end
  add_message "xla.CrossReplicaSumRequest" do
    optional :operand, :message, 2, "xla.ComputationDataHandle"
  end
  add_message "xla.SelectAndScatterRequest" do
    optional :operand, :message, 2, "xla.ComputationDataHandle"
    optional :source, :message, 3, "xla.ComputationDataHandle"
    optional :init_value, :message, 4, "xla.ComputationDataHandle"
    optional :window, :message, 5, "xla.Window"
    optional :select, :message, 6, "xla.ComputationHandle"
    optional :scatter, :message, 7, "xla.ComputationHandle"
  end
  add_message "xla.ReverseRequest" do
    optional :operand, :message, 2, "xla.ComputationDataHandle"
    repeated :dimensions, :int64, 3
  end
  add_message "xla.BroadcastRequest" do
    optional :operand, :message, 2, "xla.ComputationDataHandle"
    repeated :broadcast_sizes, :int64, 3
  end
  add_message "xla.PadRequest" do
    optional :operand, :message, 2, "xla.ComputationDataHandle"
    optional :padding_value, :message, 3, "xla.ComputationDataHandle"
    optional :padding_config, :message, 4, "xla.PaddingConfig"
  end
  add_message "xla.ReshapeRequest" do
    optional :operand, :message, 2, "xla.ComputationDataHandle"
    repeated :dimensions, :int64, 3
    repeated :new_sizes, :int64, 4
  end
  add_message "xla.TransposeRequest" do
    optional :operand, :message, 2, "xla.ComputationDataHandle"
    repeated :dimensions, :int64, 3
  end
  add_message "xla.ParameterRequest" do
    optional :shape, :message, 2, "xla.Shape"
    optional :parameter, :int64, 3
    optional :name, :string, 4
  end
  add_message "xla.GetLocalShapeRequest" do
    optional :computation, :message, 1, "xla.ComputationHandle"
    optional :operand, :message, 2, "xla.ComputationDataHandle"
  end
  add_message "xla.GetLocalShapeResponse" do
    optional :shape, :message, 1, "xla.Shape"
  end
  add_message "xla.TraceRequest" do
    optional :tag, :string, 2
    optional :operand, :message, 3, "xla.ComputationDataHandle"
  end
  add_message "xla.ConvertRequest" do
    optional :operand, :message, 2, "xla.ComputationDataHandle"
    optional :new_element_type, :enum, 3, "xla.PrimitiveType"
  end
  add_message "xla.ConcatenateRequest" do
    repeated :operands, :message, 2, "xla.ComputationDataHandle"
    optional :dimension, :int64, 3
  end
  add_message "xla.WhileRequest" do
    optional :condition, :message, 2, "xla.ComputationHandle"
    optional :body, :message, 3, "xla.ComputationHandle"
    optional :init, :message, 4, "xla.ComputationDataHandle"
  end
  add_message "xla.UnaryOpRequest" do
    optional :unop, :enum, 2, "xla.UnaryOperation"
    optional :operand, :message, 3, "xla.ComputationDataHandle"
  end
  add_message "xla.BinaryOpRequest" do
    optional :binop, :enum, 2, "xla.BinaryOperation"
    optional :lhs, :message, 3, "xla.ComputationDataHandle"
    optional :rhs, :message, 4, "xla.ComputationDataHandle"
    repeated :broadcast_dimensions, :int64, 5
  end
  add_message "xla.RngRequest" do
    optional :distribution, :enum, 2, "xla.RandomDistribution"
    repeated :parameter, :message, 3, "xla.ComputationDataHandle"
    optional :shape, :message, 4, "xla.Shape"
  end
  add_message "xla.TernaryOpRequest" do
    optional :triop, :enum, 2, "xla.TernaryOperation"
    optional :lhs, :message, 3, "xla.ComputationDataHandle"
    optional :rhs, :message, 4, "xla.ComputationDataHandle"
    optional :ehs, :message, 5, "xla.ComputationDataHandle"
  end
  add_message "xla.VariadicOpRequest" do
    optional :varop, :enum, 2, "xla.VariadicOperation"
    repeated :operands, :message, 3, "xla.ComputationDataHandle"
  end
  add_message "xla.SendRequest" do
    optional :operand, :message, 1, "xla.ComputationDataHandle"
    optional :channel_handle, :message, 2, "xla.ChannelHandle"
  end
  add_message "xla.RecvRequest" do
    optional :shape, :message, 1, "xla.Shape"
    optional :channel_handle, :message, 2, "xla.ChannelHandle"
  end
  add_message "xla.OpRequest" do
    optional :computation, :message, 1, "xla.ComputationHandle"
    optional :metadata, :message, 33, "xla.OpMetadata"
    oneof :op do
      optional :binary_op_request, :message, 2, "xla.BinaryOpRequest"
      optional :broadcast_request, :message, 3, "xla.BroadcastRequest"
      optional :call_request, :message, 4, "xla.CallRequest"
      optional :concatenate_request, :message, 5, "xla.ConcatenateRequest"
      optional :constant_request, :message, 6, "xla.ConstantRequest"
      optional :convert_request, :message, 7, "xla.ConvertRequest"
      optional :convolve_request, :message, 8, "xla.ConvolveRequest"
      optional :cross_replica_sum_request, :message, 9, "xla.CrossReplicaSumRequest"
      optional :custom_call_request, :message, 10, "xla.CustomCallRequest"
      optional :dynamic_slice_request, :message, 11, "xla.DynamicSliceRequest"
      optional :dynamic_update_slice_request, :message, 12, "xla.DynamicUpdateSliceRequest"
      optional :get_tuple_element_request, :message, 13, "xla.GetTupleElementRequest"
      optional :infeed_request, :message, 14, "xla.InfeedRequest"
      optional :map_request, :message, 15, "xla.MapRequest"
      optional :pad_request, :message, 16, "xla.PadRequest"
      optional :parameter_request, :message, 17, "xla.ParameterRequest"
      optional :reduce_request, :message, 18, "xla.ReduceRequest"
      optional :reduce_window_request, :message, 19, "xla.ReduceWindowRequest"
      optional :reshape_request, :message, 20, "xla.ReshapeRequest"
      optional :reverse_request, :message, 21, "xla.ReverseRequest"
      optional :rng_request, :message, 22, "xla.RngRequest"
      optional :select_and_scatter_request, :message, 23, "xla.SelectAndScatterRequest"
      optional :slice_request, :message, 24, "xla.SliceRequest"
      optional :ternary_op_request, :message, 25, "xla.TernaryOpRequest"
      optional :trace_request, :message, 26, "xla.TraceRequest"
      optional :transpose_request, :message, 34, "xla.TransposeRequest"
      optional :unary_op_request, :message, 27, "xla.UnaryOpRequest"
      optional :variadic_op_request, :message, 28, "xla.VariadicOpRequest"
      optional :while_request, :message, 29, "xla.WhileRequest"
      optional :send_request, :message, 30, "xla.SendRequest"
      optional :recv_request, :message, 31, "xla.RecvRequest"
      optional :outfeed_request, :message, 32, "xla.OutfeedRequest"
    end
  end
  add_message "xla.OpResponse" do
    optional :output, :message, 1, "xla.ComputationDataHandle"
  end
  add_enum "xla.PrimitiveType" do
    value :PRIMITIVE_TYPE_INVALID, 0
    value :PRED, 1
    value :S8, 2
    value :S16, 3
    value :S32, 4
    value :S64, 5
    value :U8, 6
    value :U16, 7
    value :U32, 8
    value :U64, 9
    value :F16, 10
    value :F32, 11
    value :F64, 12
    value :TUPLE, 13
    value :OPAQUE, 14
  end
  add_enum "xla.PaddingValue" do
    value :INVALID_PAD, 0
    value :ZERO_PAD, 1
    value :ONE_PAD, 2
    value :LOWEST_PAD, 3
    value :HIGHEST_PAD, 4
    value :UNKNOWN_PAD, 5
  end
  add_enum "xla.UnaryOperation" do
    value :UNOP_INVALID, 0
    value :UNOP_LOGICAL_NOT, 1
    value :UNOP_EXP, 2
    value :UNOP_NEGATE, 3
    value :UNOP_SORT, 4
    value :UNOP_TANH, 5
    value :UNOP_LOG, 6
    value :UNOP_FLOOR, 7
    value :UNOP_CEIL, 8
    value :UNOP_ABS, 9
    value :UNOP_SIGN, 10
    value :UNOP_IS_FINITE, 11
  end
  add_enum "xla.BinaryOperation" do
    value :BINOP_INVALID, 0
    value :BINOP_ADD, 1
    value :BINOP_DIV, 2
    value :BINOP_MUL, 3
    value :BINOP_SUB, 4
    value :BINOP_EQ, 5
    value :BINOP_GE, 6
    value :BINOP_GT, 7
    value :BINOP_LE, 8
    value :BINOP_LT, 9
    value :BINOP_NE, 10
    value :BINOP_DOT, 12
    value :BINOP_INDEX, 13
    value :BINOP_MAX, 14
    value :BINOP_MIN, 15
    value :BINOP_POW, 16
    value :BINOP_REM, 17
    value :BINOP_LOGICAL_AND, 18
    value :BINOP_LOGICAL_OR, 19
  end
  add_enum "xla.RandomDistribution" do
    value :RNG_INVALID, 0
    value :RNG_UNIFORM, 1
    value :RNG_NORMAL, 2
    value :RNG_BERNOULLI, 3
  end
  add_enum "xla.TernaryOperation" do
    value :TRIOP_INVALID, 0
    value :TRIOP_SELECT, 1
    value :TRIOP_UPDATE, 2
    value :TRIOP_CLAMP, 3
  end
  add_enum "xla.VariadicOperation" do
    value :VAROP_INVALID, 0
    value :VAROP_TUPLE, 1
  end
end

module Xla
  PaddingConfig = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.PaddingConfig").msgclass
  PaddingConfig::PaddingConfigDimension = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.PaddingConfig.PaddingConfigDimension").msgclass
  Layout = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.Layout").msgclass
  Shape = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.Shape").msgclass
  ProgramShape = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.ProgramShape").msgclass
  ComputationStats = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.ComputationStats").msgclass
  OpMetadata = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.OpMetadata").msgclass
  ExecutionProfile = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.ExecutionProfile").msgclass
  ComputationHandle = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.ComputationHandle").msgclass
  ExecutionHandle = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.ExecutionHandle").msgclass
  GlobalDataHandle = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.GlobalDataHandle").msgclass
  ComputationDataHandle = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.ComputationDataHandle").msgclass
  DeviceHandle = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.DeviceHandle").msgclass
  ChannelHandle = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.ChannelHandle").msgclass
  Literal = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.Literal").msgclass
  WindowDimension = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.WindowDimension").msgclass
  Window = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.Window").msgclass
  ConstantRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.ConstantRequest").msgclass
  GetTupleElementRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.GetTupleElementRequest").msgclass
  SliceRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.SliceRequest").msgclass
  DynamicSliceRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.DynamicSliceRequest").msgclass
  DynamicUpdateSliceRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.DynamicUpdateSliceRequest").msgclass
  ConvolutionDimensionNumbers = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.ConvolutionDimensionNumbers").msgclass
  ConvolveRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.ConvolveRequest").msgclass
  InfeedRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.InfeedRequest").msgclass
  OutfeedRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.OutfeedRequest").msgclass
  CallRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.CallRequest").msgclass
  CustomCallRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.CustomCallRequest").msgclass
  MapRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.MapRequest").msgclass
  ReduceRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.ReduceRequest").msgclass
  ReduceWindowRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.ReduceWindowRequest").msgclass
  CrossReplicaSumRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.CrossReplicaSumRequest").msgclass
  SelectAndScatterRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.SelectAndScatterRequest").msgclass
  ReverseRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.ReverseRequest").msgclass
  BroadcastRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.BroadcastRequest").msgclass
  PadRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.PadRequest").msgclass
  ReshapeRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.ReshapeRequest").msgclass
  TransposeRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.TransposeRequest").msgclass
  ParameterRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.ParameterRequest").msgclass
  GetLocalShapeRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.GetLocalShapeRequest").msgclass
  GetLocalShapeResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.GetLocalShapeResponse").msgclass
  TraceRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.TraceRequest").msgclass
  ConvertRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.ConvertRequest").msgclass
  ConcatenateRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.ConcatenateRequest").msgclass
  WhileRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.WhileRequest").msgclass
  UnaryOpRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.UnaryOpRequest").msgclass
  BinaryOpRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.BinaryOpRequest").msgclass
  RngRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.RngRequest").msgclass
  TernaryOpRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.TernaryOpRequest").msgclass
  VariadicOpRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.VariadicOpRequest").msgclass
  SendRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.SendRequest").msgclass
  RecvRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.RecvRequest").msgclass
  OpRequest = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.OpRequest").msgclass
  OpResponse = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.OpResponse").msgclass
  PrimitiveType = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.PrimitiveType").enummodule
  PaddingValue = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.PaddingValue").enummodule
  UnaryOperation = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.UnaryOperation").enummodule
  BinaryOperation = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.BinaryOperation").enummodule
  RandomDistribution = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.RandomDistribution").enummodule
  TernaryOperation = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.TernaryOperation").enummodule
  VariadicOperation = Google::Protobuf::DescriptorPool.generated_pool.lookup("xla.VariadicOperation").enummodule
end
