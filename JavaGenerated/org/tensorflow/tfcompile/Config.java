// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/compiler/aot/tfcompile.proto

package org.tensorflow.tfcompile;

/**
 * <pre>
 * Config represents configuration information for tfcompile.
 * </pre>
 *
 * Protobuf type {@code tensorflow.tfcompile.Config}
 */
public  final class Config extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tensorflow.tfcompile.Config)
    ConfigOrBuilder {
  // Use Config.newBuilder() to construct.
  private Config(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Config() {
    feed_ = java.util.Collections.emptyList();
    fetch_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Config(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              feed_ = new java.util.ArrayList<org.tensorflow.tfcompile.Feed>();
              mutable_bitField0_ |= 0x00000001;
            }
            feed_.add(
                input.readMessage(org.tensorflow.tfcompile.Feed.parser(), extensionRegistry));
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              fetch_ = new java.util.ArrayList<org.tensorflow.tfcompile.Fetch>();
              mutable_bitField0_ |= 0x00000002;
            }
            fetch_.add(
                input.readMessage(org.tensorflow.tfcompile.Fetch.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        feed_ = java.util.Collections.unmodifiableList(feed_);
      }
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        fetch_ = java.util.Collections.unmodifiableList(fetch_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tensorflow.tfcompile.CompileProtos.internal_static_tensorflow_tfcompile_Config_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tensorflow.tfcompile.CompileProtos.internal_static_tensorflow_tfcompile_Config_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tensorflow.tfcompile.Config.class, org.tensorflow.tfcompile.Config.Builder.class);
  }

  public static final int FEED_FIELD_NUMBER = 1;
  private java.util.List<org.tensorflow.tfcompile.Feed> feed_;
  /**
   * <pre>
   * Each feed is a positional input argument for the generated function.  The
   * order of each entry matches the order of each input argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
   */
  public java.util.List<org.tensorflow.tfcompile.Feed> getFeedList() {
    return feed_;
  }
  /**
   * <pre>
   * Each feed is a positional input argument for the generated function.  The
   * order of each entry matches the order of each input argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
   */
  public java.util.List<? extends org.tensorflow.tfcompile.FeedOrBuilder> 
      getFeedOrBuilderList() {
    return feed_;
  }
  /**
   * <pre>
   * Each feed is a positional input argument for the generated function.  The
   * order of each entry matches the order of each input argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
   */
  public int getFeedCount() {
    return feed_.size();
  }
  /**
   * <pre>
   * Each feed is a positional input argument for the generated function.  The
   * order of each entry matches the order of each input argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
   */
  public org.tensorflow.tfcompile.Feed getFeed(int index) {
    return feed_.get(index);
  }
  /**
   * <pre>
   * Each feed is a positional input argument for the generated function.  The
   * order of each entry matches the order of each input argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
   */
  public org.tensorflow.tfcompile.FeedOrBuilder getFeedOrBuilder(
      int index) {
    return feed_.get(index);
  }

  public static final int FETCH_FIELD_NUMBER = 2;
  private java.util.List<org.tensorflow.tfcompile.Fetch> fetch_;
  /**
   * <pre>
   * Each fetch is a positional output argument for the generated function.  The
   * order of each entry matches the order of each output argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
   */
  public java.util.List<org.tensorflow.tfcompile.Fetch> getFetchList() {
    return fetch_;
  }
  /**
   * <pre>
   * Each fetch is a positional output argument for the generated function.  The
   * order of each entry matches the order of each output argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
   */
  public java.util.List<? extends org.tensorflow.tfcompile.FetchOrBuilder> 
      getFetchOrBuilderList() {
    return fetch_;
  }
  /**
   * <pre>
   * Each fetch is a positional output argument for the generated function.  The
   * order of each entry matches the order of each output argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
   */
  public int getFetchCount() {
    return fetch_.size();
  }
  /**
   * <pre>
   * Each fetch is a positional output argument for the generated function.  The
   * order of each entry matches the order of each output argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
   */
  public org.tensorflow.tfcompile.Fetch getFetch(int index) {
    return fetch_.get(index);
  }
  /**
   * <pre>
   * Each fetch is a positional output argument for the generated function.  The
   * order of each entry matches the order of each output argument.
   * </pre>
   *
   * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
   */
  public org.tensorflow.tfcompile.FetchOrBuilder getFetchOrBuilder(
      int index) {
    return fetch_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < feed_.size(); i++) {
      output.writeMessage(1, feed_.get(i));
    }
    for (int i = 0; i < fetch_.size(); i++) {
      output.writeMessage(2, fetch_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < feed_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, feed_.get(i));
    }
    for (int i = 0; i < fetch_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, fetch_.get(i));
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.tensorflow.tfcompile.Config)) {
      return super.equals(obj);
    }
    org.tensorflow.tfcompile.Config other = (org.tensorflow.tfcompile.Config) obj;

    boolean result = true;
    result = result && getFeedList()
        .equals(other.getFeedList());
    result = result && getFetchList()
        .equals(other.getFetchList());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getFeedCount() > 0) {
      hash = (37 * hash) + FEED_FIELD_NUMBER;
      hash = (53 * hash) + getFeedList().hashCode();
    }
    if (getFetchCount() > 0) {
      hash = (37 * hash) + FETCH_FIELD_NUMBER;
      hash = (53 * hash) + getFetchList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.tensorflow.tfcompile.Config parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.tfcompile.Config parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.tfcompile.Config parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.tfcompile.Config parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.tfcompile.Config parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.tfcompile.Config parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.tfcompile.Config parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.tensorflow.tfcompile.Config parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.tfcompile.Config parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.tfcompile.Config parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tensorflow.tfcompile.Config prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Config represents configuration information for tfcompile.
   * </pre>
   *
   * Protobuf type {@code tensorflow.tfcompile.Config}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tensorflow.tfcompile.Config)
      org.tensorflow.tfcompile.ConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.tfcompile.CompileProtos.internal_static_tensorflow_tfcompile_Config_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.tfcompile.CompileProtos.internal_static_tensorflow_tfcompile_Config_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.tfcompile.Config.class, org.tensorflow.tfcompile.Config.Builder.class);
    }

    // Construct using org.tensorflow.tfcompile.Config.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFeedFieldBuilder();
        getFetchFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (feedBuilder_ == null) {
        feed_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        feedBuilder_.clear();
      }
      if (fetchBuilder_ == null) {
        fetch_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        fetchBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tensorflow.tfcompile.CompileProtos.internal_static_tensorflow_tfcompile_Config_descriptor;
    }

    public org.tensorflow.tfcompile.Config getDefaultInstanceForType() {
      return org.tensorflow.tfcompile.Config.getDefaultInstance();
    }

    public org.tensorflow.tfcompile.Config build() {
      org.tensorflow.tfcompile.Config result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.tensorflow.tfcompile.Config buildPartial() {
      org.tensorflow.tfcompile.Config result = new org.tensorflow.tfcompile.Config(this);
      int from_bitField0_ = bitField0_;
      if (feedBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          feed_ = java.util.Collections.unmodifiableList(feed_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.feed_ = feed_;
      } else {
        result.feed_ = feedBuilder_.build();
      }
      if (fetchBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          fetch_ = java.util.Collections.unmodifiableList(fetch_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.fetch_ = fetch_;
      } else {
        result.fetch_ = fetchBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tensorflow.tfcompile.Config) {
        return mergeFrom((org.tensorflow.tfcompile.Config)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tensorflow.tfcompile.Config other) {
      if (other == org.tensorflow.tfcompile.Config.getDefaultInstance()) return this;
      if (feedBuilder_ == null) {
        if (!other.feed_.isEmpty()) {
          if (feed_.isEmpty()) {
            feed_ = other.feed_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFeedIsMutable();
            feed_.addAll(other.feed_);
          }
          onChanged();
        }
      } else {
        if (!other.feed_.isEmpty()) {
          if (feedBuilder_.isEmpty()) {
            feedBuilder_.dispose();
            feedBuilder_ = null;
            feed_ = other.feed_;
            bitField0_ = (bitField0_ & ~0x00000001);
            feedBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFeedFieldBuilder() : null;
          } else {
            feedBuilder_.addAllMessages(other.feed_);
          }
        }
      }
      if (fetchBuilder_ == null) {
        if (!other.fetch_.isEmpty()) {
          if (fetch_.isEmpty()) {
            fetch_ = other.fetch_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFetchIsMutable();
            fetch_.addAll(other.fetch_);
          }
          onChanged();
        }
      } else {
        if (!other.fetch_.isEmpty()) {
          if (fetchBuilder_.isEmpty()) {
            fetchBuilder_.dispose();
            fetchBuilder_ = null;
            fetch_ = other.fetch_;
            bitField0_ = (bitField0_ & ~0x00000002);
            fetchBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFetchFieldBuilder() : null;
          } else {
            fetchBuilder_.addAllMessages(other.fetch_);
          }
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.tensorflow.tfcompile.Config parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.tensorflow.tfcompile.Config) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<org.tensorflow.tfcompile.Feed> feed_ =
      java.util.Collections.emptyList();
    private void ensureFeedIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        feed_ = new java.util.ArrayList<org.tensorflow.tfcompile.Feed>(feed_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.tfcompile.Feed, org.tensorflow.tfcompile.Feed.Builder, org.tensorflow.tfcompile.FeedOrBuilder> feedBuilder_;

    /**
     * <pre>
     * Each feed is a positional input argument for the generated function.  The
     * order of each entry matches the order of each input argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
     */
    public java.util.List<org.tensorflow.tfcompile.Feed> getFeedList() {
      if (feedBuilder_ == null) {
        return java.util.Collections.unmodifiableList(feed_);
      } else {
        return feedBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Each feed is a positional input argument for the generated function.  The
     * order of each entry matches the order of each input argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
     */
    public int getFeedCount() {
      if (feedBuilder_ == null) {
        return feed_.size();
      } else {
        return feedBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Each feed is a positional input argument for the generated function.  The
     * order of each entry matches the order of each input argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
     */
    public org.tensorflow.tfcompile.Feed getFeed(int index) {
      if (feedBuilder_ == null) {
        return feed_.get(index);
      } else {
        return feedBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Each feed is a positional input argument for the generated function.  The
     * order of each entry matches the order of each input argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
     */
    public Builder setFeed(
        int index, org.tensorflow.tfcompile.Feed value) {
      if (feedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeedIsMutable();
        feed_.set(index, value);
        onChanged();
      } else {
        feedBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Each feed is a positional input argument for the generated function.  The
     * order of each entry matches the order of each input argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
     */
    public Builder setFeed(
        int index, org.tensorflow.tfcompile.Feed.Builder builderForValue) {
      if (feedBuilder_ == null) {
        ensureFeedIsMutable();
        feed_.set(index, builderForValue.build());
        onChanged();
      } else {
        feedBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Each feed is a positional input argument for the generated function.  The
     * order of each entry matches the order of each input argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
     */
    public Builder addFeed(org.tensorflow.tfcompile.Feed value) {
      if (feedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeedIsMutable();
        feed_.add(value);
        onChanged();
      } else {
        feedBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Each feed is a positional input argument for the generated function.  The
     * order of each entry matches the order of each input argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
     */
    public Builder addFeed(
        int index, org.tensorflow.tfcompile.Feed value) {
      if (feedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeedIsMutable();
        feed_.add(index, value);
        onChanged();
      } else {
        feedBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Each feed is a positional input argument for the generated function.  The
     * order of each entry matches the order of each input argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
     */
    public Builder addFeed(
        org.tensorflow.tfcompile.Feed.Builder builderForValue) {
      if (feedBuilder_ == null) {
        ensureFeedIsMutable();
        feed_.add(builderForValue.build());
        onChanged();
      } else {
        feedBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Each feed is a positional input argument for the generated function.  The
     * order of each entry matches the order of each input argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
     */
    public Builder addFeed(
        int index, org.tensorflow.tfcompile.Feed.Builder builderForValue) {
      if (feedBuilder_ == null) {
        ensureFeedIsMutable();
        feed_.add(index, builderForValue.build());
        onChanged();
      } else {
        feedBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Each feed is a positional input argument for the generated function.  The
     * order of each entry matches the order of each input argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
     */
    public Builder addAllFeed(
        java.lang.Iterable<? extends org.tensorflow.tfcompile.Feed> values) {
      if (feedBuilder_ == null) {
        ensureFeedIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, feed_);
        onChanged();
      } else {
        feedBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Each feed is a positional input argument for the generated function.  The
     * order of each entry matches the order of each input argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
     */
    public Builder clearFeed() {
      if (feedBuilder_ == null) {
        feed_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        feedBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Each feed is a positional input argument for the generated function.  The
     * order of each entry matches the order of each input argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
     */
    public Builder removeFeed(int index) {
      if (feedBuilder_ == null) {
        ensureFeedIsMutable();
        feed_.remove(index);
        onChanged();
      } else {
        feedBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Each feed is a positional input argument for the generated function.  The
     * order of each entry matches the order of each input argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
     */
    public org.tensorflow.tfcompile.Feed.Builder getFeedBuilder(
        int index) {
      return getFeedFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Each feed is a positional input argument for the generated function.  The
     * order of each entry matches the order of each input argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
     */
    public org.tensorflow.tfcompile.FeedOrBuilder getFeedOrBuilder(
        int index) {
      if (feedBuilder_ == null) {
        return feed_.get(index);  } else {
        return feedBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Each feed is a positional input argument for the generated function.  The
     * order of each entry matches the order of each input argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
     */
    public java.util.List<? extends org.tensorflow.tfcompile.FeedOrBuilder> 
         getFeedOrBuilderList() {
      if (feedBuilder_ != null) {
        return feedBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(feed_);
      }
    }
    /**
     * <pre>
     * Each feed is a positional input argument for the generated function.  The
     * order of each entry matches the order of each input argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
     */
    public org.tensorflow.tfcompile.Feed.Builder addFeedBuilder() {
      return getFeedFieldBuilder().addBuilder(
          org.tensorflow.tfcompile.Feed.getDefaultInstance());
    }
    /**
     * <pre>
     * Each feed is a positional input argument for the generated function.  The
     * order of each entry matches the order of each input argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
     */
    public org.tensorflow.tfcompile.Feed.Builder addFeedBuilder(
        int index) {
      return getFeedFieldBuilder().addBuilder(
          index, org.tensorflow.tfcompile.Feed.getDefaultInstance());
    }
    /**
     * <pre>
     * Each feed is a positional input argument for the generated function.  The
     * order of each entry matches the order of each input argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Feed feed = 1;</code>
     */
    public java.util.List<org.tensorflow.tfcompile.Feed.Builder> 
         getFeedBuilderList() {
      return getFeedFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.tfcompile.Feed, org.tensorflow.tfcompile.Feed.Builder, org.tensorflow.tfcompile.FeedOrBuilder> 
        getFeedFieldBuilder() {
      if (feedBuilder_ == null) {
        feedBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.tfcompile.Feed, org.tensorflow.tfcompile.Feed.Builder, org.tensorflow.tfcompile.FeedOrBuilder>(
                feed_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        feed_ = null;
      }
      return feedBuilder_;
    }

    private java.util.List<org.tensorflow.tfcompile.Fetch> fetch_ =
      java.util.Collections.emptyList();
    private void ensureFetchIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        fetch_ = new java.util.ArrayList<org.tensorflow.tfcompile.Fetch>(fetch_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.tfcompile.Fetch, org.tensorflow.tfcompile.Fetch.Builder, org.tensorflow.tfcompile.FetchOrBuilder> fetchBuilder_;

    /**
     * <pre>
     * Each fetch is a positional output argument for the generated function.  The
     * order of each entry matches the order of each output argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
     */
    public java.util.List<org.tensorflow.tfcompile.Fetch> getFetchList() {
      if (fetchBuilder_ == null) {
        return java.util.Collections.unmodifiableList(fetch_);
      } else {
        return fetchBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Each fetch is a positional output argument for the generated function.  The
     * order of each entry matches the order of each output argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
     */
    public int getFetchCount() {
      if (fetchBuilder_ == null) {
        return fetch_.size();
      } else {
        return fetchBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Each fetch is a positional output argument for the generated function.  The
     * order of each entry matches the order of each output argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
     */
    public org.tensorflow.tfcompile.Fetch getFetch(int index) {
      if (fetchBuilder_ == null) {
        return fetch_.get(index);
      } else {
        return fetchBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Each fetch is a positional output argument for the generated function.  The
     * order of each entry matches the order of each output argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
     */
    public Builder setFetch(
        int index, org.tensorflow.tfcompile.Fetch value) {
      if (fetchBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFetchIsMutable();
        fetch_.set(index, value);
        onChanged();
      } else {
        fetchBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Each fetch is a positional output argument for the generated function.  The
     * order of each entry matches the order of each output argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
     */
    public Builder setFetch(
        int index, org.tensorflow.tfcompile.Fetch.Builder builderForValue) {
      if (fetchBuilder_ == null) {
        ensureFetchIsMutable();
        fetch_.set(index, builderForValue.build());
        onChanged();
      } else {
        fetchBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Each fetch is a positional output argument for the generated function.  The
     * order of each entry matches the order of each output argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
     */
    public Builder addFetch(org.tensorflow.tfcompile.Fetch value) {
      if (fetchBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFetchIsMutable();
        fetch_.add(value);
        onChanged();
      } else {
        fetchBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Each fetch is a positional output argument for the generated function.  The
     * order of each entry matches the order of each output argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
     */
    public Builder addFetch(
        int index, org.tensorflow.tfcompile.Fetch value) {
      if (fetchBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFetchIsMutable();
        fetch_.add(index, value);
        onChanged();
      } else {
        fetchBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Each fetch is a positional output argument for the generated function.  The
     * order of each entry matches the order of each output argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
     */
    public Builder addFetch(
        org.tensorflow.tfcompile.Fetch.Builder builderForValue) {
      if (fetchBuilder_ == null) {
        ensureFetchIsMutable();
        fetch_.add(builderForValue.build());
        onChanged();
      } else {
        fetchBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Each fetch is a positional output argument for the generated function.  The
     * order of each entry matches the order of each output argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
     */
    public Builder addFetch(
        int index, org.tensorflow.tfcompile.Fetch.Builder builderForValue) {
      if (fetchBuilder_ == null) {
        ensureFetchIsMutable();
        fetch_.add(index, builderForValue.build());
        onChanged();
      } else {
        fetchBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Each fetch is a positional output argument for the generated function.  The
     * order of each entry matches the order of each output argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
     */
    public Builder addAllFetch(
        java.lang.Iterable<? extends org.tensorflow.tfcompile.Fetch> values) {
      if (fetchBuilder_ == null) {
        ensureFetchIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fetch_);
        onChanged();
      } else {
        fetchBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Each fetch is a positional output argument for the generated function.  The
     * order of each entry matches the order of each output argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
     */
    public Builder clearFetch() {
      if (fetchBuilder_ == null) {
        fetch_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        fetchBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Each fetch is a positional output argument for the generated function.  The
     * order of each entry matches the order of each output argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
     */
    public Builder removeFetch(int index) {
      if (fetchBuilder_ == null) {
        ensureFetchIsMutable();
        fetch_.remove(index);
        onChanged();
      } else {
        fetchBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Each fetch is a positional output argument for the generated function.  The
     * order of each entry matches the order of each output argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
     */
    public org.tensorflow.tfcompile.Fetch.Builder getFetchBuilder(
        int index) {
      return getFetchFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Each fetch is a positional output argument for the generated function.  The
     * order of each entry matches the order of each output argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
     */
    public org.tensorflow.tfcompile.FetchOrBuilder getFetchOrBuilder(
        int index) {
      if (fetchBuilder_ == null) {
        return fetch_.get(index);  } else {
        return fetchBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Each fetch is a positional output argument for the generated function.  The
     * order of each entry matches the order of each output argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
     */
    public java.util.List<? extends org.tensorflow.tfcompile.FetchOrBuilder> 
         getFetchOrBuilderList() {
      if (fetchBuilder_ != null) {
        return fetchBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(fetch_);
      }
    }
    /**
     * <pre>
     * Each fetch is a positional output argument for the generated function.  The
     * order of each entry matches the order of each output argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
     */
    public org.tensorflow.tfcompile.Fetch.Builder addFetchBuilder() {
      return getFetchFieldBuilder().addBuilder(
          org.tensorflow.tfcompile.Fetch.getDefaultInstance());
    }
    /**
     * <pre>
     * Each fetch is a positional output argument for the generated function.  The
     * order of each entry matches the order of each output argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
     */
    public org.tensorflow.tfcompile.Fetch.Builder addFetchBuilder(
        int index) {
      return getFetchFieldBuilder().addBuilder(
          index, org.tensorflow.tfcompile.Fetch.getDefaultInstance());
    }
    /**
     * <pre>
     * Each fetch is a positional output argument for the generated function.  The
     * order of each entry matches the order of each output argument.
     * </pre>
     *
     * <code>repeated .tensorflow.tfcompile.Fetch fetch = 2;</code>
     */
    public java.util.List<org.tensorflow.tfcompile.Fetch.Builder> 
         getFetchBuilderList() {
      return getFetchFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.tfcompile.Fetch, org.tensorflow.tfcompile.Fetch.Builder, org.tensorflow.tfcompile.FetchOrBuilder> 
        getFetchFieldBuilder() {
      if (fetchBuilder_ == null) {
        fetchBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.tfcompile.Fetch, org.tensorflow.tfcompile.Fetch.Builder, org.tensorflow.tfcompile.FetchOrBuilder>(
                fetch_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        fetch_ = null;
      }
      return fetchBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:tensorflow.tfcompile.Config)
  }

  // @@protoc_insertion_point(class_scope:tensorflow.tfcompile.Config)
  private static final org.tensorflow.tfcompile.Config DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tensorflow.tfcompile.Config();
  }

  public static org.tensorflow.tfcompile.Config getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Config>
      PARSER = new com.google.protobuf.AbstractParser<Config>() {
    public Config parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Config(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Config> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Config> getParserForType() {
    return PARSER;
  }

  public org.tensorflow.tfcompile.Config getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

