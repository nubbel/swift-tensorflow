// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/python/framework/cpp_shape_inference.proto

package tensorflow;

public final class CppShapeInference {
  private CppShapeInference() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CppShapeInferenceResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.CppShapeInferenceResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.tensorflow.TensorShapeProto shape = 1;</code>
     */
    boolean hasShape();
    /**
     * <code>.tensorflow.TensorShapeProto shape = 1;</code>
     */
    org.tensorflow.framework.TensorShapeProto getShape();
    /**
     * <code>.tensorflow.TensorShapeProto shape = 1;</code>
     */
    org.tensorflow.framework.TensorShapeProtoOrBuilder getShapeOrBuilder();

    /**
     * <code>.tensorflow.TensorShapeProto handle_shape = 2;</code>
     */
    boolean hasHandleShape();
    /**
     * <code>.tensorflow.TensorShapeProto handle_shape = 2;</code>
     */
    org.tensorflow.framework.TensorShapeProto getHandleShape();
    /**
     * <code>.tensorflow.TensorShapeProto handle_shape = 2;</code>
     */
    org.tensorflow.framework.TensorShapeProtoOrBuilder getHandleShapeOrBuilder();

    /**
     * <code>.tensorflow.DataType handle_dtype = 3;</code>
     */
    int getHandleDtypeValue();
    /**
     * <code>.tensorflow.DataType handle_dtype = 3;</code>
     */
    org.tensorflow.framework.DataType getHandleDtype();
  }
  /**
   * Protobuf type {@code tensorflow.CppShapeInferenceResult}
   */
  public  static final class CppShapeInferenceResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.CppShapeInferenceResult)
      CppShapeInferenceResultOrBuilder {
    // Use CppShapeInferenceResult.newBuilder() to construct.
    private CppShapeInferenceResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CppShapeInferenceResult() {
      handleDtype_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CppShapeInferenceResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.tensorflow.framework.TensorShapeProto.Builder subBuilder = null;
              if (shape_ != null) {
                subBuilder = shape_.toBuilder();
              }
              shape_ = input.readMessage(org.tensorflow.framework.TensorShapeProto.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shape_);
                shape_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.tensorflow.framework.TensorShapeProto.Builder subBuilder = null;
              if (handleShape_ != null) {
                subBuilder = handleShape_.toBuilder();
              }
              handleShape_ = input.readMessage(org.tensorflow.framework.TensorShapeProto.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(handleShape_);
                handleShape_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              handleDtype_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.CppShapeInference.CppShapeInferenceResult.class, tensorflow.CppShapeInference.CppShapeInferenceResult.Builder.class);
    }

    public static final int SHAPE_FIELD_NUMBER = 1;
    private org.tensorflow.framework.TensorShapeProto shape_;
    /**
     * <code>.tensorflow.TensorShapeProto shape = 1;</code>
     */
    public boolean hasShape() {
      return shape_ != null;
    }
    /**
     * <code>.tensorflow.TensorShapeProto shape = 1;</code>
     */
    public org.tensorflow.framework.TensorShapeProto getShape() {
      return shape_ == null ? org.tensorflow.framework.TensorShapeProto.getDefaultInstance() : shape_;
    }
    /**
     * <code>.tensorflow.TensorShapeProto shape = 1;</code>
     */
    public org.tensorflow.framework.TensorShapeProtoOrBuilder getShapeOrBuilder() {
      return getShape();
    }

    public static final int HANDLE_SHAPE_FIELD_NUMBER = 2;
    private org.tensorflow.framework.TensorShapeProto handleShape_;
    /**
     * <code>.tensorflow.TensorShapeProto handle_shape = 2;</code>
     */
    public boolean hasHandleShape() {
      return handleShape_ != null;
    }
    /**
     * <code>.tensorflow.TensorShapeProto handle_shape = 2;</code>
     */
    public org.tensorflow.framework.TensorShapeProto getHandleShape() {
      return handleShape_ == null ? org.tensorflow.framework.TensorShapeProto.getDefaultInstance() : handleShape_;
    }
    /**
     * <code>.tensorflow.TensorShapeProto handle_shape = 2;</code>
     */
    public org.tensorflow.framework.TensorShapeProtoOrBuilder getHandleShapeOrBuilder() {
      return getHandleShape();
    }

    public static final int HANDLE_DTYPE_FIELD_NUMBER = 3;
    private int handleDtype_;
    /**
     * <code>.tensorflow.DataType handle_dtype = 3;</code>
     */
    public int getHandleDtypeValue() {
      return handleDtype_;
    }
    /**
     * <code>.tensorflow.DataType handle_dtype = 3;</code>
     */
    public org.tensorflow.framework.DataType getHandleDtype() {
      org.tensorflow.framework.DataType result = org.tensorflow.framework.DataType.valueOf(handleDtype_);
      return result == null ? org.tensorflow.framework.DataType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (shape_ != null) {
        output.writeMessage(1, getShape());
      }
      if (handleShape_ != null) {
        output.writeMessage(2, getHandleShape());
      }
      if (handleDtype_ != org.tensorflow.framework.DataType.DT_INVALID.getNumber()) {
        output.writeEnum(3, handleDtype_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (shape_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getShape());
      }
      if (handleShape_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getHandleShape());
      }
      if (handleDtype_ != org.tensorflow.framework.DataType.DT_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, handleDtype_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.CppShapeInference.CppShapeInferenceResult)) {
        return super.equals(obj);
      }
      tensorflow.CppShapeInference.CppShapeInferenceResult other = (tensorflow.CppShapeInference.CppShapeInferenceResult) obj;

      boolean result = true;
      result = result && (hasShape() == other.hasShape());
      if (hasShape()) {
        result = result && getShape()
            .equals(other.getShape());
      }
      result = result && (hasHandleShape() == other.hasHandleShape());
      if (hasHandleShape()) {
        result = result && getHandleShape()
            .equals(other.getHandleShape());
      }
      result = result && handleDtype_ == other.handleDtype_;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasShape()) {
        hash = (37 * hash) + SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getShape().hashCode();
      }
      if (hasHandleShape()) {
        hash = (37 * hash) + HANDLE_SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getHandleShape().hashCode();
      }
      hash = (37 * hash) + HANDLE_DTYPE_FIELD_NUMBER;
      hash = (53 * hash) + handleDtype_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.CppShapeInference.CppShapeInferenceResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.CppShapeInferenceResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.CppShapeInferenceResult)
        tensorflow.CppShapeInference.CppShapeInferenceResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.CppShapeInference.CppShapeInferenceResult.class, tensorflow.CppShapeInference.CppShapeInferenceResult.Builder.class);
      }

      // Construct using tensorflow.CppShapeInference.CppShapeInferenceResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (shapeBuilder_ == null) {
          shape_ = null;
        } else {
          shape_ = null;
          shapeBuilder_ = null;
        }
        if (handleShapeBuilder_ == null) {
          handleShape_ = null;
        } else {
          handleShape_ = null;
          handleShapeBuilder_ = null;
        }
        handleDtype_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_descriptor;
      }

      public tensorflow.CppShapeInference.CppShapeInferenceResult getDefaultInstanceForType() {
        return tensorflow.CppShapeInference.CppShapeInferenceResult.getDefaultInstance();
      }

      public tensorflow.CppShapeInference.CppShapeInferenceResult build() {
        tensorflow.CppShapeInference.CppShapeInferenceResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.CppShapeInference.CppShapeInferenceResult buildPartial() {
        tensorflow.CppShapeInference.CppShapeInferenceResult result = new tensorflow.CppShapeInference.CppShapeInferenceResult(this);
        if (shapeBuilder_ == null) {
          result.shape_ = shape_;
        } else {
          result.shape_ = shapeBuilder_.build();
        }
        if (handleShapeBuilder_ == null) {
          result.handleShape_ = handleShape_;
        } else {
          result.handleShape_ = handleShapeBuilder_.build();
        }
        result.handleDtype_ = handleDtype_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.CppShapeInference.CppShapeInferenceResult) {
          return mergeFrom((tensorflow.CppShapeInference.CppShapeInferenceResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.CppShapeInference.CppShapeInferenceResult other) {
        if (other == tensorflow.CppShapeInference.CppShapeInferenceResult.getDefaultInstance()) return this;
        if (other.hasShape()) {
          mergeShape(other.getShape());
        }
        if (other.hasHandleShape()) {
          mergeHandleShape(other.getHandleShape());
        }
        if (other.handleDtype_ != 0) {
          setHandleDtypeValue(other.getHandleDtypeValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.CppShapeInference.CppShapeInferenceResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.CppShapeInference.CppShapeInferenceResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.tensorflow.framework.TensorShapeProto shape_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder> shapeBuilder_;
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public boolean hasShape() {
        return shapeBuilder_ != null || shape_ != null;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public org.tensorflow.framework.TensorShapeProto getShape() {
        if (shapeBuilder_ == null) {
          return shape_ == null ? org.tensorflow.framework.TensorShapeProto.getDefaultInstance() : shape_;
        } else {
          return shapeBuilder_.getMessage();
        }
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public Builder setShape(org.tensorflow.framework.TensorShapeProto value) {
        if (shapeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shape_ = value;
          onChanged();
        } else {
          shapeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public Builder setShape(
          org.tensorflow.framework.TensorShapeProto.Builder builderForValue) {
        if (shapeBuilder_ == null) {
          shape_ = builderForValue.build();
          onChanged();
        } else {
          shapeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public Builder mergeShape(org.tensorflow.framework.TensorShapeProto value) {
        if (shapeBuilder_ == null) {
          if (shape_ != null) {
            shape_ =
              org.tensorflow.framework.TensorShapeProto.newBuilder(shape_).mergeFrom(value).buildPartial();
          } else {
            shape_ = value;
          }
          onChanged();
        } else {
          shapeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public Builder clearShape() {
        if (shapeBuilder_ == null) {
          shape_ = null;
          onChanged();
        } else {
          shape_ = null;
          shapeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public org.tensorflow.framework.TensorShapeProto.Builder getShapeBuilder() {
        
        onChanged();
        return getShapeFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public org.tensorflow.framework.TensorShapeProtoOrBuilder getShapeOrBuilder() {
        if (shapeBuilder_ != null) {
          return shapeBuilder_.getMessageOrBuilder();
        } else {
          return shape_ == null ?
              org.tensorflow.framework.TensorShapeProto.getDefaultInstance() : shape_;
        }
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder> 
          getShapeFieldBuilder() {
        if (shapeBuilder_ == null) {
          shapeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder>(
                  getShape(),
                  getParentForChildren(),
                  isClean());
          shape_ = null;
        }
        return shapeBuilder_;
      }

      private org.tensorflow.framework.TensorShapeProto handleShape_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder> handleShapeBuilder_;
      /**
       * <code>.tensorflow.TensorShapeProto handle_shape = 2;</code>
       */
      public boolean hasHandleShape() {
        return handleShapeBuilder_ != null || handleShape_ != null;
      }
      /**
       * <code>.tensorflow.TensorShapeProto handle_shape = 2;</code>
       */
      public org.tensorflow.framework.TensorShapeProto getHandleShape() {
        if (handleShapeBuilder_ == null) {
          return handleShape_ == null ? org.tensorflow.framework.TensorShapeProto.getDefaultInstance() : handleShape_;
        } else {
          return handleShapeBuilder_.getMessage();
        }
      }
      /**
       * <code>.tensorflow.TensorShapeProto handle_shape = 2;</code>
       */
      public Builder setHandleShape(org.tensorflow.framework.TensorShapeProto value) {
        if (handleShapeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          handleShape_ = value;
          onChanged();
        } else {
          handleShapeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.TensorShapeProto handle_shape = 2;</code>
       */
      public Builder setHandleShape(
          org.tensorflow.framework.TensorShapeProto.Builder builderForValue) {
        if (handleShapeBuilder_ == null) {
          handleShape_ = builderForValue.build();
          onChanged();
        } else {
          handleShapeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.tensorflow.TensorShapeProto handle_shape = 2;</code>
       */
      public Builder mergeHandleShape(org.tensorflow.framework.TensorShapeProto value) {
        if (handleShapeBuilder_ == null) {
          if (handleShape_ != null) {
            handleShape_ =
              org.tensorflow.framework.TensorShapeProto.newBuilder(handleShape_).mergeFrom(value).buildPartial();
          } else {
            handleShape_ = value;
          }
          onChanged();
        } else {
          handleShapeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.TensorShapeProto handle_shape = 2;</code>
       */
      public Builder clearHandleShape() {
        if (handleShapeBuilder_ == null) {
          handleShape_ = null;
          onChanged();
        } else {
          handleShape_ = null;
          handleShapeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.tensorflow.TensorShapeProto handle_shape = 2;</code>
       */
      public org.tensorflow.framework.TensorShapeProto.Builder getHandleShapeBuilder() {
        
        onChanged();
        return getHandleShapeFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.TensorShapeProto handle_shape = 2;</code>
       */
      public org.tensorflow.framework.TensorShapeProtoOrBuilder getHandleShapeOrBuilder() {
        if (handleShapeBuilder_ != null) {
          return handleShapeBuilder_.getMessageOrBuilder();
        } else {
          return handleShape_ == null ?
              org.tensorflow.framework.TensorShapeProto.getDefaultInstance() : handleShape_;
        }
      }
      /**
       * <code>.tensorflow.TensorShapeProto handle_shape = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder> 
          getHandleShapeFieldBuilder() {
        if (handleShapeBuilder_ == null) {
          handleShapeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder>(
                  getHandleShape(),
                  getParentForChildren(),
                  isClean());
          handleShape_ = null;
        }
        return handleShapeBuilder_;
      }

      private int handleDtype_ = 0;
      /**
       * <code>.tensorflow.DataType handle_dtype = 3;</code>
       */
      public int getHandleDtypeValue() {
        return handleDtype_;
      }
      /**
       * <code>.tensorflow.DataType handle_dtype = 3;</code>
       */
      public Builder setHandleDtypeValue(int value) {
        handleDtype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.DataType handle_dtype = 3;</code>
       */
      public org.tensorflow.framework.DataType getHandleDtype() {
        org.tensorflow.framework.DataType result = org.tensorflow.framework.DataType.valueOf(handleDtype_);
        return result == null ? org.tensorflow.framework.DataType.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.DataType handle_dtype = 3;</code>
       */
      public Builder setHandleDtype(org.tensorflow.framework.DataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        handleDtype_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.DataType handle_dtype = 3;</code>
       */
      public Builder clearHandleDtype() {
        
        handleDtype_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.CppShapeInferenceResult)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.CppShapeInferenceResult)
    private static final tensorflow.CppShapeInference.CppShapeInferenceResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.CppShapeInference.CppShapeInferenceResult();
    }

    public static tensorflow.CppShapeInference.CppShapeInferenceResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CppShapeInferenceResult>
        PARSER = new com.google.protobuf.AbstractParser<CppShapeInferenceResult>() {
      public CppShapeInferenceResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CppShapeInferenceResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CppShapeInferenceResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CppShapeInferenceResult> getParserForType() {
      return PARSER;
    }

    public tensorflow.CppShapeInference.CppShapeInferenceResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CppShapeInferenceInputsNeededOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.CppShapeInferenceInputsNeeded)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int32 input_tensors_needed = 1;</code>
     */
    java.util.List<java.lang.Integer> getInputTensorsNeededList();
    /**
     * <code>repeated int32 input_tensors_needed = 1;</code>
     */
    int getInputTensorsNeededCount();
    /**
     * <code>repeated int32 input_tensors_needed = 1;</code>
     */
    int getInputTensorsNeeded(int index);

    /**
     * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
     */
    java.util.List<java.lang.Integer> getInputTensorsAsShapesNeededList();
    /**
     * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
     */
    int getInputTensorsAsShapesNeededCount();
    /**
     * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
     */
    int getInputTensorsAsShapesNeeded(int index);
  }
  /**
   * Protobuf type {@code tensorflow.CppShapeInferenceInputsNeeded}
   */
  public  static final class CppShapeInferenceInputsNeeded extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.CppShapeInferenceInputsNeeded)
      CppShapeInferenceInputsNeededOrBuilder {
    // Use CppShapeInferenceInputsNeeded.newBuilder() to construct.
    private CppShapeInferenceInputsNeeded(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CppShapeInferenceInputsNeeded() {
      inputTensorsNeeded_ = java.util.Collections.emptyList();
      inputTensorsAsShapesNeeded_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CppShapeInferenceInputsNeeded(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                inputTensorsNeeded_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              inputTensorsNeeded_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                inputTensorsNeeded_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                inputTensorsNeeded_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                inputTensorsAsShapesNeeded_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              inputTensorsAsShapesNeeded_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                inputTensorsAsShapesNeeded_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                inputTensorsAsShapesNeeded_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          inputTensorsNeeded_ = java.util.Collections.unmodifiableList(inputTensorsNeeded_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          inputTensorsAsShapesNeeded_ = java.util.Collections.unmodifiableList(inputTensorsAsShapesNeeded_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceInputsNeeded_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceInputsNeeded_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded.class, tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded.Builder.class);
    }

    public static final int INPUT_TENSORS_NEEDED_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> inputTensorsNeeded_;
    /**
     * <code>repeated int32 input_tensors_needed = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getInputTensorsNeededList() {
      return inputTensorsNeeded_;
    }
    /**
     * <code>repeated int32 input_tensors_needed = 1;</code>
     */
    public int getInputTensorsNeededCount() {
      return inputTensorsNeeded_.size();
    }
    /**
     * <code>repeated int32 input_tensors_needed = 1;</code>
     */
    public int getInputTensorsNeeded(int index) {
      return inputTensorsNeeded_.get(index);
    }
    private int inputTensorsNeededMemoizedSerializedSize = -1;

    public static final int INPUT_TENSORS_AS_SHAPES_NEEDED_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> inputTensorsAsShapesNeeded_;
    /**
     * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getInputTensorsAsShapesNeededList() {
      return inputTensorsAsShapesNeeded_;
    }
    /**
     * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
     */
    public int getInputTensorsAsShapesNeededCount() {
      return inputTensorsAsShapesNeeded_.size();
    }
    /**
     * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
     */
    public int getInputTensorsAsShapesNeeded(int index) {
      return inputTensorsAsShapesNeeded_.get(index);
    }
    private int inputTensorsAsShapesNeededMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getInputTensorsNeededList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(inputTensorsNeededMemoizedSerializedSize);
      }
      for (int i = 0; i < inputTensorsNeeded_.size(); i++) {
        output.writeInt32NoTag(inputTensorsNeeded_.get(i));
      }
      if (getInputTensorsAsShapesNeededList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(inputTensorsAsShapesNeededMemoizedSerializedSize);
      }
      for (int i = 0; i < inputTensorsAsShapesNeeded_.size(); i++) {
        output.writeInt32NoTag(inputTensorsAsShapesNeeded_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < inputTensorsNeeded_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(inputTensorsNeeded_.get(i));
        }
        size += dataSize;
        if (!getInputTensorsNeededList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        inputTensorsNeededMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < inputTensorsAsShapesNeeded_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(inputTensorsAsShapesNeeded_.get(i));
        }
        size += dataSize;
        if (!getInputTensorsAsShapesNeededList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        inputTensorsAsShapesNeededMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded)) {
        return super.equals(obj);
      }
      tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded other = (tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded) obj;

      boolean result = true;
      result = result && getInputTensorsNeededList()
          .equals(other.getInputTensorsNeededList());
      result = result && getInputTensorsAsShapesNeededList()
          .equals(other.getInputTensorsAsShapesNeededList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getInputTensorsNeededCount() > 0) {
        hash = (37 * hash) + INPUT_TENSORS_NEEDED_FIELD_NUMBER;
        hash = (53 * hash) + getInputTensorsNeededList().hashCode();
      }
      if (getInputTensorsAsShapesNeededCount() > 0) {
        hash = (37 * hash) + INPUT_TENSORS_AS_SHAPES_NEEDED_FIELD_NUMBER;
        hash = (53 * hash) + getInputTensorsAsShapesNeededList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.CppShapeInferenceInputsNeeded}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.CppShapeInferenceInputsNeeded)
        tensorflow.CppShapeInference.CppShapeInferenceInputsNeededOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceInputsNeeded_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceInputsNeeded_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded.class, tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded.Builder.class);
      }

      // Construct using tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        inputTensorsNeeded_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        inputTensorsAsShapesNeeded_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceInputsNeeded_descriptor;
      }

      public tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded getDefaultInstanceForType() {
        return tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded.getDefaultInstance();
      }

      public tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded build() {
        tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded buildPartial() {
        tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded result = new tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          inputTensorsNeeded_ = java.util.Collections.unmodifiableList(inputTensorsNeeded_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.inputTensorsNeeded_ = inputTensorsNeeded_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          inputTensorsAsShapesNeeded_ = java.util.Collections.unmodifiableList(inputTensorsAsShapesNeeded_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.inputTensorsAsShapesNeeded_ = inputTensorsAsShapesNeeded_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded) {
          return mergeFrom((tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded other) {
        if (other == tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded.getDefaultInstance()) return this;
        if (!other.inputTensorsNeeded_.isEmpty()) {
          if (inputTensorsNeeded_.isEmpty()) {
            inputTensorsNeeded_ = other.inputTensorsNeeded_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureInputTensorsNeededIsMutable();
            inputTensorsNeeded_.addAll(other.inputTensorsNeeded_);
          }
          onChanged();
        }
        if (!other.inputTensorsAsShapesNeeded_.isEmpty()) {
          if (inputTensorsAsShapesNeeded_.isEmpty()) {
            inputTensorsAsShapesNeeded_ = other.inputTensorsAsShapesNeeded_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureInputTensorsAsShapesNeededIsMutable();
            inputTensorsAsShapesNeeded_.addAll(other.inputTensorsAsShapesNeeded_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> inputTensorsNeeded_ = java.util.Collections.emptyList();
      private void ensureInputTensorsNeededIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          inputTensorsNeeded_ = new java.util.ArrayList<java.lang.Integer>(inputTensorsNeeded_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getInputTensorsNeededList() {
        return java.util.Collections.unmodifiableList(inputTensorsNeeded_);
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       */
      public int getInputTensorsNeededCount() {
        return inputTensorsNeeded_.size();
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       */
      public int getInputTensorsNeeded(int index) {
        return inputTensorsNeeded_.get(index);
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       */
      public Builder setInputTensorsNeeded(
          int index, int value) {
        ensureInputTensorsNeededIsMutable();
        inputTensorsNeeded_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       */
      public Builder addInputTensorsNeeded(int value) {
        ensureInputTensorsNeededIsMutable();
        inputTensorsNeeded_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       */
      public Builder addAllInputTensorsNeeded(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInputTensorsNeededIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, inputTensorsNeeded_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       */
      public Builder clearInputTensorsNeeded() {
        inputTensorsNeeded_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> inputTensorsAsShapesNeeded_ = java.util.Collections.emptyList();
      private void ensureInputTensorsAsShapesNeededIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          inputTensorsAsShapesNeeded_ = new java.util.ArrayList<java.lang.Integer>(inputTensorsAsShapesNeeded_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getInputTensorsAsShapesNeededList() {
        return java.util.Collections.unmodifiableList(inputTensorsAsShapesNeeded_);
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       */
      public int getInputTensorsAsShapesNeededCount() {
        return inputTensorsAsShapesNeeded_.size();
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       */
      public int getInputTensorsAsShapesNeeded(int index) {
        return inputTensorsAsShapesNeeded_.get(index);
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       */
      public Builder setInputTensorsAsShapesNeeded(
          int index, int value) {
        ensureInputTensorsAsShapesNeededIsMutable();
        inputTensorsAsShapesNeeded_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       */
      public Builder addInputTensorsAsShapesNeeded(int value) {
        ensureInputTensorsAsShapesNeededIsMutable();
        inputTensorsAsShapesNeeded_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       */
      public Builder addAllInputTensorsAsShapesNeeded(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInputTensorsAsShapesNeededIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, inputTensorsAsShapesNeeded_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       */
      public Builder clearInputTensorsAsShapesNeeded() {
        inputTensorsAsShapesNeeded_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.CppShapeInferenceInputsNeeded)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.CppShapeInferenceInputsNeeded)
    private static final tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded();
    }

    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CppShapeInferenceInputsNeeded>
        PARSER = new com.google.protobuf.AbstractParser<CppShapeInferenceInputsNeeded>() {
      public CppShapeInferenceInputsNeeded parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CppShapeInferenceInputsNeeded(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CppShapeInferenceInputsNeeded> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CppShapeInferenceInputsNeeded> getParserForType() {
      return PARSER;
    }

    public tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_CppShapeInferenceResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_CppShapeInferenceResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_CppShapeInferenceInputsNeeded_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_CppShapeInferenceInputsNeeded_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n5tensorflow/python/framework/cpp_shape_" +
      "inference.proto\022\ntensorflow\032%tensorflow/" +
      "core/framework/types.proto\032,tensorflow/c" +
      "ore/framework/tensor_shape.proto\"\246\001\n\027Cpp" +
      "ShapeInferenceResult\022+\n\005shape\030\001 \001(\0132\034.te" +
      "nsorflow.TensorShapeProto\0222\n\014handle_shap" +
      "e\030\002 \001(\0132\034.tensorflow.TensorShapeProto\022*\n" +
      "\014handle_dtype\030\003 \001(\0162\024.tensorflow.DataTyp" +
      "e\"e\n\035CppShapeInferenceInputsNeeded\022\034\n\024in" +
      "put_tensors_needed\030\001 \003(\005\022&\n\036input_tensor",
      "s_as_shapes_needed\030\002 \003(\005B\003\370\001\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.tensorflow.framework.TypesProtos.getDescriptor(),
          org.tensorflow.framework.TensorShapeProtos.getDescriptor(),
        }, assigner);
    internal_static_tensorflow_CppShapeInferenceResult_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_CppShapeInferenceResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_CppShapeInferenceResult_descriptor,
        new java.lang.String[] { "Shape", "HandleShape", "HandleDtype", });
    internal_static_tensorflow_CppShapeInferenceInputsNeeded_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_CppShapeInferenceInputsNeeded_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_CppShapeInferenceInputsNeeded_descriptor,
        new java.lang.String[] { "InputTensorsNeeded", "InputTensorsAsShapesNeeded", });
    org.tensorflow.framework.TypesProtos.getDescriptor();
    org.tensorflow.framework.TensorShapeProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
