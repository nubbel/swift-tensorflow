// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/tools/tfprof/tfprof_output.proto

package tensorflow.tfprof;

public final class TfprofOutput {
  private TfprofOutput() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TFProfTensorProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tfprof.TFProfTensorProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .tensorflow.DataType dtype = 1;</code>
     */
    boolean hasDtype();
    /**
     * <code>optional .tensorflow.DataType dtype = 1;</code>
     */
    org.tensorflow.framework.DataType getDtype();

    /**
     * <pre>
     * Flatten tensor in row-major.
     * Only one of the following array is set.
     * </pre>
     *
     * <code>repeated double value_double = 2;</code>
     */
    java.util.List<java.lang.Double> getValueDoubleList();
    /**
     * <pre>
     * Flatten tensor in row-major.
     * Only one of the following array is set.
     * </pre>
     *
     * <code>repeated double value_double = 2;</code>
     */
    int getValueDoubleCount();
    /**
     * <pre>
     * Flatten tensor in row-major.
     * Only one of the following array is set.
     * </pre>
     *
     * <code>repeated double value_double = 2;</code>
     */
    double getValueDouble(int index);

    /**
     * <code>repeated int64 value_int64 = 3;</code>
     */
    java.util.List<java.lang.Long> getValueInt64List();
    /**
     * <code>repeated int64 value_int64 = 3;</code>
     */
    int getValueInt64Count();
    /**
     * <code>repeated int64 value_int64 = 3;</code>
     */
    long getValueInt64(int index);

    /**
     * <code>repeated string value_str = 4;</code>
     */
    java.util.List<java.lang.String>
        getValueStrList();
    /**
     * <code>repeated string value_str = 4;</code>
     */
    int getValueStrCount();
    /**
     * <code>repeated string value_str = 4;</code>
     */
    java.lang.String getValueStr(int index);
    /**
     * <code>repeated string value_str = 4;</code>
     */
    com.google.protobuf.ByteString
        getValueStrBytes(int index);
  }
  /**
   * Protobuf type {@code tensorflow.tfprof.TFProfTensorProto}
   */
  public  static final class TFProfTensorProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tfprof.TFProfTensorProto)
      TFProfTensorProtoOrBuilder {
    // Use TFProfTensorProto.newBuilder() to construct.
    private TFProfTensorProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TFProfTensorProto() {
      dtype_ = 0;
      valueDouble_ = java.util.Collections.emptyList();
      valueInt64_ = java.util.Collections.emptyList();
      valueStr_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TFProfTensorProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.tensorflow.framework.DataType value = org.tensorflow.framework.DataType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                dtype_ = rawValue;
              }
              break;
            }
            case 17: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                valueDouble_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000002;
              }
              valueDouble_.add(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                valueDouble_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                valueDouble_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                valueInt64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              valueInt64_.add(input.readInt64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                valueInt64_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                valueInt64_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                valueStr_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              valueStr_.add(bs);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          valueDouble_ = java.util.Collections.unmodifiableList(valueDouble_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          valueInt64_ = java.util.Collections.unmodifiableList(valueInt64_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          valueStr_ = valueStr_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_TFProfTensorProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_TFProfTensorProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tfprof.TfprofOutput.TFProfTensorProto.class, tensorflow.tfprof.TfprofOutput.TFProfTensorProto.Builder.class);
    }

    private int bitField0_;
    public static final int DTYPE_FIELD_NUMBER = 1;
    private int dtype_;
    /**
     * <code>optional .tensorflow.DataType dtype = 1;</code>
     */
    public boolean hasDtype() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .tensorflow.DataType dtype = 1;</code>
     */
    public org.tensorflow.framework.DataType getDtype() {
      org.tensorflow.framework.DataType result = org.tensorflow.framework.DataType.valueOf(dtype_);
      return result == null ? org.tensorflow.framework.DataType.DT_INVALID : result;
    }

    public static final int VALUE_DOUBLE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> valueDouble_;
    /**
     * <pre>
     * Flatten tensor in row-major.
     * Only one of the following array is set.
     * </pre>
     *
     * <code>repeated double value_double = 2;</code>
     */
    public java.util.List<java.lang.Double>
        getValueDoubleList() {
      return valueDouble_;
    }
    /**
     * <pre>
     * Flatten tensor in row-major.
     * Only one of the following array is set.
     * </pre>
     *
     * <code>repeated double value_double = 2;</code>
     */
    public int getValueDoubleCount() {
      return valueDouble_.size();
    }
    /**
     * <pre>
     * Flatten tensor in row-major.
     * Only one of the following array is set.
     * </pre>
     *
     * <code>repeated double value_double = 2;</code>
     */
    public double getValueDouble(int index) {
      return valueDouble_.get(index);
    }

    public static final int VALUE_INT64_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Long> valueInt64_;
    /**
     * <code>repeated int64 value_int64 = 3;</code>
     */
    public java.util.List<java.lang.Long>
        getValueInt64List() {
      return valueInt64_;
    }
    /**
     * <code>repeated int64 value_int64 = 3;</code>
     */
    public int getValueInt64Count() {
      return valueInt64_.size();
    }
    /**
     * <code>repeated int64 value_int64 = 3;</code>
     */
    public long getValueInt64(int index) {
      return valueInt64_.get(index);
    }

    public static final int VALUE_STR_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList valueStr_;
    /**
     * <code>repeated string value_str = 4;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getValueStrList() {
      return valueStr_;
    }
    /**
     * <code>repeated string value_str = 4;</code>
     */
    public int getValueStrCount() {
      return valueStr_.size();
    }
    /**
     * <code>repeated string value_str = 4;</code>
     */
    public java.lang.String getValueStr(int index) {
      return valueStr_.get(index);
    }
    /**
     * <code>repeated string value_str = 4;</code>
     */
    public com.google.protobuf.ByteString
        getValueStrBytes(int index) {
      return valueStr_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, dtype_);
      }
      for (int i = 0; i < valueDouble_.size(); i++) {
        output.writeDouble(2, valueDouble_.get(i));
      }
      for (int i = 0; i < valueInt64_.size(); i++) {
        output.writeInt64(3, valueInt64_.get(i));
      }
      for (int i = 0; i < valueStr_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, valueStr_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, dtype_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getValueDoubleList().size();
        size += dataSize;
        size += 1 * getValueDoubleList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < valueInt64_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(valueInt64_.get(i));
        }
        size += dataSize;
        size += 1 * getValueInt64List().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < valueStr_.size(); i++) {
          dataSize += computeStringSizeNoTag(valueStr_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getValueStrList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tfprof.TfprofOutput.TFProfTensorProto)) {
        return super.equals(obj);
      }
      tensorflow.tfprof.TfprofOutput.TFProfTensorProto other = (tensorflow.tfprof.TfprofOutput.TFProfTensorProto) obj;

      boolean result = true;
      result = result && (hasDtype() == other.hasDtype());
      if (hasDtype()) {
        result = result && dtype_ == other.dtype_;
      }
      result = result && getValueDoubleList()
          .equals(other.getValueDoubleList());
      result = result && getValueInt64List()
          .equals(other.getValueInt64List());
      result = result && getValueStrList()
          .equals(other.getValueStrList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDtype()) {
        hash = (37 * hash) + DTYPE_FIELD_NUMBER;
        hash = (53 * hash) + dtype_;
      }
      if (getValueDoubleCount() > 0) {
        hash = (37 * hash) + VALUE_DOUBLE_FIELD_NUMBER;
        hash = (53 * hash) + getValueDoubleList().hashCode();
      }
      if (getValueInt64Count() > 0) {
        hash = (37 * hash) + VALUE_INT64_FIELD_NUMBER;
        hash = (53 * hash) + getValueInt64List().hashCode();
      }
      if (getValueStrCount() > 0) {
        hash = (37 * hash) + VALUE_STR_FIELD_NUMBER;
        hash = (53 * hash) + getValueStrList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tfprof.TfprofOutput.TFProfTensorProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.tfprof.TFProfTensorProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tfprof.TFProfTensorProto)
        tensorflow.tfprof.TfprofOutput.TFProfTensorProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_TFProfTensorProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_TFProfTensorProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tfprof.TfprofOutput.TFProfTensorProto.class, tensorflow.tfprof.TfprofOutput.TFProfTensorProto.Builder.class);
      }

      // Construct using tensorflow.tfprof.TfprofOutput.TFProfTensorProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        dtype_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        valueDouble_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        valueInt64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        valueStr_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_TFProfTensorProto_descriptor;
      }

      public tensorflow.tfprof.TfprofOutput.TFProfTensorProto getDefaultInstanceForType() {
        return tensorflow.tfprof.TfprofOutput.TFProfTensorProto.getDefaultInstance();
      }

      public tensorflow.tfprof.TfprofOutput.TFProfTensorProto build() {
        tensorflow.tfprof.TfprofOutput.TFProfTensorProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.tfprof.TfprofOutput.TFProfTensorProto buildPartial() {
        tensorflow.tfprof.TfprofOutput.TFProfTensorProto result = new tensorflow.tfprof.TfprofOutput.TFProfTensorProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dtype_ = dtype_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          valueDouble_ = java.util.Collections.unmodifiableList(valueDouble_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.valueDouble_ = valueDouble_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          valueInt64_ = java.util.Collections.unmodifiableList(valueInt64_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.valueInt64_ = valueInt64_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          valueStr_ = valueStr_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.valueStr_ = valueStr_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tfprof.TfprofOutput.TFProfTensorProto) {
          return mergeFrom((tensorflow.tfprof.TfprofOutput.TFProfTensorProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tfprof.TfprofOutput.TFProfTensorProto other) {
        if (other == tensorflow.tfprof.TfprofOutput.TFProfTensorProto.getDefaultInstance()) return this;
        if (other.hasDtype()) {
          setDtype(other.getDtype());
        }
        if (!other.valueDouble_.isEmpty()) {
          if (valueDouble_.isEmpty()) {
            valueDouble_ = other.valueDouble_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureValueDoubleIsMutable();
            valueDouble_.addAll(other.valueDouble_);
          }
          onChanged();
        }
        if (!other.valueInt64_.isEmpty()) {
          if (valueInt64_.isEmpty()) {
            valueInt64_ = other.valueInt64_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureValueInt64IsMutable();
            valueInt64_.addAll(other.valueInt64_);
          }
          onChanged();
        }
        if (!other.valueStr_.isEmpty()) {
          if (valueStr_.isEmpty()) {
            valueStr_ = other.valueStr_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureValueStrIsMutable();
            valueStr_.addAll(other.valueStr_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.tfprof.TfprofOutput.TFProfTensorProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.tfprof.TfprofOutput.TFProfTensorProto) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int dtype_ = 0;
      /**
       * <code>optional .tensorflow.DataType dtype = 1;</code>
       */
      public boolean hasDtype() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .tensorflow.DataType dtype = 1;</code>
       */
      public org.tensorflow.framework.DataType getDtype() {
        org.tensorflow.framework.DataType result = org.tensorflow.framework.DataType.valueOf(dtype_);
        return result == null ? org.tensorflow.framework.DataType.DT_INVALID : result;
      }
      /**
       * <code>optional .tensorflow.DataType dtype = 1;</code>
       */
      public Builder setDtype(org.tensorflow.framework.DataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        dtype_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .tensorflow.DataType dtype = 1;</code>
       */
      public Builder clearDtype() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dtype_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> valueDouble_ = java.util.Collections.emptyList();
      private void ensureValueDoubleIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          valueDouble_ = new java.util.ArrayList<java.lang.Double>(valueDouble_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * Flatten tensor in row-major.
       * Only one of the following array is set.
       * </pre>
       *
       * <code>repeated double value_double = 2;</code>
       */
      public java.util.List<java.lang.Double>
          getValueDoubleList() {
        return java.util.Collections.unmodifiableList(valueDouble_);
      }
      /**
       * <pre>
       * Flatten tensor in row-major.
       * Only one of the following array is set.
       * </pre>
       *
       * <code>repeated double value_double = 2;</code>
       */
      public int getValueDoubleCount() {
        return valueDouble_.size();
      }
      /**
       * <pre>
       * Flatten tensor in row-major.
       * Only one of the following array is set.
       * </pre>
       *
       * <code>repeated double value_double = 2;</code>
       */
      public double getValueDouble(int index) {
        return valueDouble_.get(index);
      }
      /**
       * <pre>
       * Flatten tensor in row-major.
       * Only one of the following array is set.
       * </pre>
       *
       * <code>repeated double value_double = 2;</code>
       */
      public Builder setValueDouble(
          int index, double value) {
        ensureValueDoubleIsMutable();
        valueDouble_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flatten tensor in row-major.
       * Only one of the following array is set.
       * </pre>
       *
       * <code>repeated double value_double = 2;</code>
       */
      public Builder addValueDouble(double value) {
        ensureValueDoubleIsMutable();
        valueDouble_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flatten tensor in row-major.
       * Only one of the following array is set.
       * </pre>
       *
       * <code>repeated double value_double = 2;</code>
       */
      public Builder addAllValueDouble(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureValueDoubleIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, valueDouble_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flatten tensor in row-major.
       * Only one of the following array is set.
       * </pre>
       *
       * <code>repeated double value_double = 2;</code>
       */
      public Builder clearValueDouble() {
        valueDouble_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> valueInt64_ = java.util.Collections.emptyList();
      private void ensureValueInt64IsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          valueInt64_ = new java.util.ArrayList<java.lang.Long>(valueInt64_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int64 value_int64 = 3;</code>
       */
      public java.util.List<java.lang.Long>
          getValueInt64List() {
        return java.util.Collections.unmodifiableList(valueInt64_);
      }
      /**
       * <code>repeated int64 value_int64 = 3;</code>
       */
      public int getValueInt64Count() {
        return valueInt64_.size();
      }
      /**
       * <code>repeated int64 value_int64 = 3;</code>
       */
      public long getValueInt64(int index) {
        return valueInt64_.get(index);
      }
      /**
       * <code>repeated int64 value_int64 = 3;</code>
       */
      public Builder setValueInt64(
          int index, long value) {
        ensureValueInt64IsMutable();
        valueInt64_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value_int64 = 3;</code>
       */
      public Builder addValueInt64(long value) {
        ensureValueInt64IsMutable();
        valueInt64_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value_int64 = 3;</code>
       */
      public Builder addAllValueInt64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureValueInt64IsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, valueInt64_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value_int64 = 3;</code>
       */
      public Builder clearValueInt64() {
        valueInt64_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList valueStr_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureValueStrIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          valueStr_ = new com.google.protobuf.LazyStringArrayList(valueStr_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string value_str = 4;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getValueStrList() {
        return valueStr_.getUnmodifiableView();
      }
      /**
       * <code>repeated string value_str = 4;</code>
       */
      public int getValueStrCount() {
        return valueStr_.size();
      }
      /**
       * <code>repeated string value_str = 4;</code>
       */
      public java.lang.String getValueStr(int index) {
        return valueStr_.get(index);
      }
      /**
       * <code>repeated string value_str = 4;</code>
       */
      public com.google.protobuf.ByteString
          getValueStrBytes(int index) {
        return valueStr_.getByteString(index);
      }
      /**
       * <code>repeated string value_str = 4;</code>
       */
      public Builder setValueStr(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueStrIsMutable();
        valueStr_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value_str = 4;</code>
       */
      public Builder addValueStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueStrIsMutable();
        valueStr_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value_str = 4;</code>
       */
      public Builder addAllValueStr(
          java.lang.Iterable<java.lang.String> values) {
        ensureValueStrIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, valueStr_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value_str = 4;</code>
       */
      public Builder clearValueStr() {
        valueStr_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value_str = 4;</code>
       */
      public Builder addValueStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueStrIsMutable();
        valueStr_.add(value);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tfprof.TFProfTensorProto)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tfprof.TFProfTensorProto)
    private static final tensorflow.tfprof.TfprofOutput.TFProfTensorProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tfprof.TfprofOutput.TFProfTensorProto();
    }

    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TFProfTensorProto>
        PARSER = new com.google.protobuf.AbstractParser<TFProfTensorProto>() {
      public TFProfTensorProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TFProfTensorProto(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TFProfTensorProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TFProfTensorProto> getParserForType() {
      return PARSER;
    }

    public tensorflow.tfprof.TfprofOutput.TFProfTensorProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TFProfNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tfprof.TFProfNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * op name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <pre>
     * op name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * op name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * tensor value restored from checkpoint.
     * </pre>
     *
     * <code>optional .tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
     */
    boolean hasTensorValue();
    /**
     * <pre>
     * tensor value restored from checkpoint.
     * </pre>
     *
     * <code>optional .tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
     */
    tensorflow.tfprof.TfprofOutput.TFProfTensorProto getTensorValue();
    /**
     * <pre>
     * tensor value restored from checkpoint.
     * </pre>
     *
     * <code>optional .tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
     */
    tensorflow.tfprof.TfprofOutput.TFProfTensorProtoOrBuilder getTensorValueOrBuilder();

    /**
     * <pre>
     * op execution time.
     * </pre>
     *
     * <code>optional int64 exec_micros = 2;</code>
     */
    boolean hasExecMicros();
    /**
     * <pre>
     * op execution time.
     * </pre>
     *
     * <code>optional int64 exec_micros = 2;</code>
     */
    long getExecMicros();

    /**
     * <pre>
     * Total requested bytes by the op.
     * </pre>
     *
     * <code>optional int64 requested_bytes = 3;</code>
     */
    boolean hasRequestedBytes();
    /**
     * <pre>
     * Total requested bytes by the op.
     * </pre>
     *
     * <code>optional int64 requested_bytes = 3;</code>
     */
    long getRequestedBytes();

    /**
     * <pre>
     * Number of parameters if available.
     * </pre>
     *
     * <code>optional int64 parameters = 4;</code>
     */
    boolean hasParameters();
    /**
     * <pre>
     * Number of parameters if available.
     * </pre>
     *
     * <code>optional int64 parameters = 4;</code>
     */
    long getParameters();

    /**
     * <pre>
     * Number of float operations.
     * </pre>
     *
     * <code>optional int64 float_ops = 13;</code>
     */
    boolean hasFloatOps();
    /**
     * <pre>
     * Number of float operations.
     * </pre>
     *
     * <code>optional int64 float_ops = 13;</code>
     */
    long getFloatOps();

    /**
     * <pre>
     * Number of inputs to the op.
     * </pre>
     *
     * <code>optional int64 inputs = 5;</code>
     */
    boolean hasInputs();
    /**
     * <pre>
     * Number of inputs to the op.
     * </pre>
     *
     * <code>optional int64 inputs = 5;</code>
     */
    long getInputs();

    /**
     * <pre>
     * Device the op is assigned to.
     * </pre>
     *
     * <code>optional string device = 10;</code>
     */
    boolean hasDevice();
    /**
     * <pre>
     * Device the op is assigned to.
     * </pre>
     *
     * <code>optional string device = 10;</code>
     */
    java.lang.String getDevice();
    /**
     * <pre>
     * Device the op is assigned to.
     * </pre>
     *
     * <code>optional string device = 10;</code>
     */
    com.google.protobuf.ByteString
        getDeviceBytes();

    /**
     * <pre>
     * The following are the aggregated stats from all accounted descendants and
     * the op itself. The actual descendants depend on the data structure used
     * (scope, graph).
     * </pre>
     *
     * <code>optional int64 total_exec_micros = 6;</code>
     */
    boolean hasTotalExecMicros();
    /**
     * <pre>
     * The following are the aggregated stats from all accounted descendants and
     * the op itself. The actual descendants depend on the data structure used
     * (scope, graph).
     * </pre>
     *
     * <code>optional int64 total_exec_micros = 6;</code>
     */
    long getTotalExecMicros();

    /**
     * <code>optional int64 total_requested_bytes = 7;</code>
     */
    boolean hasTotalRequestedBytes();
    /**
     * <code>optional int64 total_requested_bytes = 7;</code>
     */
    long getTotalRequestedBytes();

    /**
     * <code>optional int64 total_parameters = 8;</code>
     */
    boolean hasTotalParameters();
    /**
     * <code>optional int64 total_parameters = 8;</code>
     */
    long getTotalParameters();

    /**
     * <code>optional int64 total_float_ops = 14;</code>
     */
    boolean hasTotalFloatOps();
    /**
     * <code>optional int64 total_float_ops = 14;</code>
     */
    long getTotalFloatOps();

    /**
     * <code>optional int64 total_inputs = 9;</code>
     */
    boolean hasTotalInputs();
    /**
     * <code>optional int64 total_inputs = 9;</code>
     */
    long getTotalInputs();

    /**
     * <pre>
     * shape information, if available.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    java.util.List<org.tensorflow.framework.TensorShapeProto> 
        getShapesList();
    /**
     * <pre>
     * shape information, if available.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    org.tensorflow.framework.TensorShapeProto getShapes(int index);
    /**
     * <pre>
     * shape information, if available.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    int getShapesCount();
    /**
     * <pre>
     * shape information, if available.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    java.util.List<? extends org.tensorflow.framework.TensorShapeProtoOrBuilder> 
        getShapesOrBuilderList();
    /**
     * <pre>
     * shape information, if available.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    org.tensorflow.framework.TensorShapeProtoOrBuilder getShapesOrBuilder(
        int index);

    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
     */
    java.util.List<tensorflow.tfprof.TfprofOutput.TFProfNode> 
        getChildrenList();
    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
     */
    tensorflow.tfprof.TfprofOutput.TFProfNode getChildren(int index);
    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
     */
    int getChildrenCount();
    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
     */
    java.util.List<? extends tensorflow.tfprof.TfprofOutput.TFProfNodeOrBuilder> 
        getChildrenOrBuilderList();
    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
     */
    tensorflow.tfprof.TfprofOutput.TFProfNodeOrBuilder getChildrenOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code tensorflow.tfprof.TFProfNode}
   */
  public  static final class TFProfNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tfprof.TFProfNode)
      TFProfNodeOrBuilder {
    // Use TFProfNode.newBuilder() to construct.
    private TFProfNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TFProfNode() {
      name_ = "";
      execMicros_ = 0L;
      requestedBytes_ = 0L;
      parameters_ = 0L;
      floatOps_ = 0L;
      inputs_ = 0L;
      device_ = "";
      totalExecMicros_ = 0L;
      totalRequestedBytes_ = 0L;
      totalParameters_ = 0L;
      totalFloatOps_ = 0L;
      totalInputs_ = 0L;
      shapes_ = java.util.Collections.emptyList();
      children_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TFProfNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000004;
              execMicros_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000008;
              requestedBytes_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000010;
              parameters_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000040;
              inputs_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000100;
              totalExecMicros_ = input.readInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000200;
              totalRequestedBytes_ = input.readInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000400;
              totalParameters_ = input.readInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00001000;
              totalInputs_ = input.readInt64();
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              device_ = bs;
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                shapes_ = new java.util.ArrayList<org.tensorflow.framework.TensorShapeProto>();
                mutable_bitField0_ |= 0x00002000;
              }
              shapes_.add(
                  input.readMessage(org.tensorflow.framework.TensorShapeProto.parser(), extensionRegistry));
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                children_ = new java.util.ArrayList<tensorflow.tfprof.TfprofOutput.TFProfNode>();
                mutable_bitField0_ |= 0x00004000;
              }
              children_.add(
                  input.readMessage(tensorflow.tfprof.TfprofOutput.TFProfNode.PARSER, extensionRegistry));
              break;
            }
            case 104: {
              bitField0_ |= 0x00000020;
              floatOps_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000800;
              totalFloatOps_ = input.readInt64();
              break;
            }
            case 122: {
              tensorflow.tfprof.TfprofOutput.TFProfTensorProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = tensorValue_.toBuilder();
              }
              tensorValue_ = input.readMessage(tensorflow.tfprof.TfprofOutput.TFProfTensorProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tensorValue_);
                tensorValue_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          shapes_ = java.util.Collections.unmodifiableList(shapes_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          children_ = java.util.Collections.unmodifiableList(children_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_TFProfNode_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_TFProfNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tfprof.TfprofOutput.TFProfNode.class, tensorflow.tfprof.TfprofOutput.TFProfNode.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * op name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * op name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * op name.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TENSOR_VALUE_FIELD_NUMBER = 15;
    private tensorflow.tfprof.TfprofOutput.TFProfTensorProto tensorValue_;
    /**
     * <pre>
     * tensor value restored from checkpoint.
     * </pre>
     *
     * <code>optional .tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
     */
    public boolean hasTensorValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * tensor value restored from checkpoint.
     * </pre>
     *
     * <code>optional .tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
     */
    public tensorflow.tfprof.TfprofOutput.TFProfTensorProto getTensorValue() {
      return tensorValue_ == null ? tensorflow.tfprof.TfprofOutput.TFProfTensorProto.getDefaultInstance() : tensorValue_;
    }
    /**
     * <pre>
     * tensor value restored from checkpoint.
     * </pre>
     *
     * <code>optional .tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
     */
    public tensorflow.tfprof.TfprofOutput.TFProfTensorProtoOrBuilder getTensorValueOrBuilder() {
      return tensorValue_ == null ? tensorflow.tfprof.TfprofOutput.TFProfTensorProto.getDefaultInstance() : tensorValue_;
    }

    public static final int EXEC_MICROS_FIELD_NUMBER = 2;
    private long execMicros_;
    /**
     * <pre>
     * op execution time.
     * </pre>
     *
     * <code>optional int64 exec_micros = 2;</code>
     */
    public boolean hasExecMicros() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * op execution time.
     * </pre>
     *
     * <code>optional int64 exec_micros = 2;</code>
     */
    public long getExecMicros() {
      return execMicros_;
    }

    public static final int REQUESTED_BYTES_FIELD_NUMBER = 3;
    private long requestedBytes_;
    /**
     * <pre>
     * Total requested bytes by the op.
     * </pre>
     *
     * <code>optional int64 requested_bytes = 3;</code>
     */
    public boolean hasRequestedBytes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Total requested bytes by the op.
     * </pre>
     *
     * <code>optional int64 requested_bytes = 3;</code>
     */
    public long getRequestedBytes() {
      return requestedBytes_;
    }

    public static final int PARAMETERS_FIELD_NUMBER = 4;
    private long parameters_;
    /**
     * <pre>
     * Number of parameters if available.
     * </pre>
     *
     * <code>optional int64 parameters = 4;</code>
     */
    public boolean hasParameters() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Number of parameters if available.
     * </pre>
     *
     * <code>optional int64 parameters = 4;</code>
     */
    public long getParameters() {
      return parameters_;
    }

    public static final int FLOAT_OPS_FIELD_NUMBER = 13;
    private long floatOps_;
    /**
     * <pre>
     * Number of float operations.
     * </pre>
     *
     * <code>optional int64 float_ops = 13;</code>
     */
    public boolean hasFloatOps() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * Number of float operations.
     * </pre>
     *
     * <code>optional int64 float_ops = 13;</code>
     */
    public long getFloatOps() {
      return floatOps_;
    }

    public static final int INPUTS_FIELD_NUMBER = 5;
    private long inputs_;
    /**
     * <pre>
     * Number of inputs to the op.
     * </pre>
     *
     * <code>optional int64 inputs = 5;</code>
     */
    public boolean hasInputs() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * Number of inputs to the op.
     * </pre>
     *
     * <code>optional int64 inputs = 5;</code>
     */
    public long getInputs() {
      return inputs_;
    }

    public static final int DEVICE_FIELD_NUMBER = 10;
    private volatile java.lang.Object device_;
    /**
     * <pre>
     * Device the op is assigned to.
     * </pre>
     *
     * <code>optional string device = 10;</code>
     */
    public boolean hasDevice() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * Device the op is assigned to.
     * </pre>
     *
     * <code>optional string device = 10;</code>
     */
    public java.lang.String getDevice() {
      java.lang.Object ref = device_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          device_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Device the op is assigned to.
     * </pre>
     *
     * <code>optional string device = 10;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceBytes() {
      java.lang.Object ref = device_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        device_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOTAL_EXEC_MICROS_FIELD_NUMBER = 6;
    private long totalExecMicros_;
    /**
     * <pre>
     * The following are the aggregated stats from all accounted descendants and
     * the op itself. The actual descendants depend on the data structure used
     * (scope, graph).
     * </pre>
     *
     * <code>optional int64 total_exec_micros = 6;</code>
     */
    public boolean hasTotalExecMicros() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     * The following are the aggregated stats from all accounted descendants and
     * the op itself. The actual descendants depend on the data structure used
     * (scope, graph).
     * </pre>
     *
     * <code>optional int64 total_exec_micros = 6;</code>
     */
    public long getTotalExecMicros() {
      return totalExecMicros_;
    }

    public static final int TOTAL_REQUESTED_BYTES_FIELD_NUMBER = 7;
    private long totalRequestedBytes_;
    /**
     * <code>optional int64 total_requested_bytes = 7;</code>
     */
    public boolean hasTotalRequestedBytes() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 total_requested_bytes = 7;</code>
     */
    public long getTotalRequestedBytes() {
      return totalRequestedBytes_;
    }

    public static final int TOTAL_PARAMETERS_FIELD_NUMBER = 8;
    private long totalParameters_;
    /**
     * <code>optional int64 total_parameters = 8;</code>
     */
    public boolean hasTotalParameters() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int64 total_parameters = 8;</code>
     */
    public long getTotalParameters() {
      return totalParameters_;
    }

    public static final int TOTAL_FLOAT_OPS_FIELD_NUMBER = 14;
    private long totalFloatOps_;
    /**
     * <code>optional int64 total_float_ops = 14;</code>
     */
    public boolean hasTotalFloatOps() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 total_float_ops = 14;</code>
     */
    public long getTotalFloatOps() {
      return totalFloatOps_;
    }

    public static final int TOTAL_INPUTS_FIELD_NUMBER = 9;
    private long totalInputs_;
    /**
     * <code>optional int64 total_inputs = 9;</code>
     */
    public boolean hasTotalInputs() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 total_inputs = 9;</code>
     */
    public long getTotalInputs() {
      return totalInputs_;
    }

    public static final int SHAPES_FIELD_NUMBER = 11;
    private java.util.List<org.tensorflow.framework.TensorShapeProto> shapes_;
    /**
     * <pre>
     * shape information, if available.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    public java.util.List<org.tensorflow.framework.TensorShapeProto> getShapesList() {
      return shapes_;
    }
    /**
     * <pre>
     * shape information, if available.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    public java.util.List<? extends org.tensorflow.framework.TensorShapeProtoOrBuilder> 
        getShapesOrBuilderList() {
      return shapes_;
    }
    /**
     * <pre>
     * shape information, if available.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    public int getShapesCount() {
      return shapes_.size();
    }
    /**
     * <pre>
     * shape information, if available.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    public org.tensorflow.framework.TensorShapeProto getShapes(int index) {
      return shapes_.get(index);
    }
    /**
     * <pre>
     * shape information, if available.
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    public org.tensorflow.framework.TensorShapeProtoOrBuilder getShapesOrBuilder(
        int index) {
      return shapes_.get(index);
    }

    public static final int CHILDREN_FIELD_NUMBER = 12;
    private java.util.List<tensorflow.tfprof.TfprofOutput.TFProfNode> children_;
    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
     */
    public java.util.List<tensorflow.tfprof.TfprofOutput.TFProfNode> getChildrenList() {
      return children_;
    }
    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
     */
    public java.util.List<? extends tensorflow.tfprof.TfprofOutput.TFProfNodeOrBuilder> 
        getChildrenOrBuilderList() {
      return children_;
    }
    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
     */
    public int getChildrenCount() {
      return children_.size();
    }
    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
     */
    public tensorflow.tfprof.TfprofOutput.TFProfNode getChildren(int index) {
      return children_.get(index);
    }
    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
     */
    public tensorflow.tfprof.TfprofOutput.TFProfNodeOrBuilder getChildrenOrBuilder(
        int index) {
      return children_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(2, execMicros_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(3, requestedBytes_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(4, parameters_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt64(5, inputs_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(6, totalExecMicros_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(7, totalRequestedBytes_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(8, totalParameters_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(9, totalInputs_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, device_);
      }
      for (int i = 0; i < shapes_.size(); i++) {
        output.writeMessage(11, shapes_.get(i));
      }
      for (int i = 0; i < children_.size(); i++) {
        output.writeMessage(12, children_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(13, floatOps_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(14, totalFloatOps_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(15, getTensorValue());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, execMicros_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, requestedBytes_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, parameters_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, inputs_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, totalExecMicros_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, totalRequestedBytes_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, totalParameters_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, totalInputs_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, device_);
      }
      for (int i = 0; i < shapes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, shapes_.get(i));
      }
      for (int i = 0; i < children_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, children_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, floatOps_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, totalFloatOps_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getTensorValue());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tfprof.TfprofOutput.TFProfNode)) {
        return super.equals(obj);
      }
      tensorflow.tfprof.TfprofOutput.TFProfNode other = (tensorflow.tfprof.TfprofOutput.TFProfNode) obj;

      boolean result = true;
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasTensorValue() == other.hasTensorValue());
      if (hasTensorValue()) {
        result = result && getTensorValue()
            .equals(other.getTensorValue());
      }
      result = result && (hasExecMicros() == other.hasExecMicros());
      if (hasExecMicros()) {
        result = result && (getExecMicros()
            == other.getExecMicros());
      }
      result = result && (hasRequestedBytes() == other.hasRequestedBytes());
      if (hasRequestedBytes()) {
        result = result && (getRequestedBytes()
            == other.getRequestedBytes());
      }
      result = result && (hasParameters() == other.hasParameters());
      if (hasParameters()) {
        result = result && (getParameters()
            == other.getParameters());
      }
      result = result && (hasFloatOps() == other.hasFloatOps());
      if (hasFloatOps()) {
        result = result && (getFloatOps()
            == other.getFloatOps());
      }
      result = result && (hasInputs() == other.hasInputs());
      if (hasInputs()) {
        result = result && (getInputs()
            == other.getInputs());
      }
      result = result && (hasDevice() == other.hasDevice());
      if (hasDevice()) {
        result = result && getDevice()
            .equals(other.getDevice());
      }
      result = result && (hasTotalExecMicros() == other.hasTotalExecMicros());
      if (hasTotalExecMicros()) {
        result = result && (getTotalExecMicros()
            == other.getTotalExecMicros());
      }
      result = result && (hasTotalRequestedBytes() == other.hasTotalRequestedBytes());
      if (hasTotalRequestedBytes()) {
        result = result && (getTotalRequestedBytes()
            == other.getTotalRequestedBytes());
      }
      result = result && (hasTotalParameters() == other.hasTotalParameters());
      if (hasTotalParameters()) {
        result = result && (getTotalParameters()
            == other.getTotalParameters());
      }
      result = result && (hasTotalFloatOps() == other.hasTotalFloatOps());
      if (hasTotalFloatOps()) {
        result = result && (getTotalFloatOps()
            == other.getTotalFloatOps());
      }
      result = result && (hasTotalInputs() == other.hasTotalInputs());
      if (hasTotalInputs()) {
        result = result && (getTotalInputs()
            == other.getTotalInputs());
      }
      result = result && getShapesList()
          .equals(other.getShapesList());
      result = result && getChildrenList()
          .equals(other.getChildrenList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasTensorValue()) {
        hash = (37 * hash) + TENSOR_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getTensorValue().hashCode();
      }
      if (hasExecMicros()) {
        hash = (37 * hash) + EXEC_MICROS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getExecMicros());
      }
      if (hasRequestedBytes()) {
        hash = (37 * hash) + REQUESTED_BYTES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getRequestedBytes());
      }
      if (hasParameters()) {
        hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getParameters());
      }
      if (hasFloatOps()) {
        hash = (37 * hash) + FLOAT_OPS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getFloatOps());
      }
      if (hasInputs()) {
        hash = (37 * hash) + INPUTS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getInputs());
      }
      if (hasDevice()) {
        hash = (37 * hash) + DEVICE_FIELD_NUMBER;
        hash = (53 * hash) + getDevice().hashCode();
      }
      if (hasTotalExecMicros()) {
        hash = (37 * hash) + TOTAL_EXEC_MICROS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTotalExecMicros());
      }
      if (hasTotalRequestedBytes()) {
        hash = (37 * hash) + TOTAL_REQUESTED_BYTES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTotalRequestedBytes());
      }
      if (hasTotalParameters()) {
        hash = (37 * hash) + TOTAL_PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTotalParameters());
      }
      if (hasTotalFloatOps()) {
        hash = (37 * hash) + TOTAL_FLOAT_OPS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTotalFloatOps());
      }
      if (hasTotalInputs()) {
        hash = (37 * hash) + TOTAL_INPUTS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTotalInputs());
      }
      if (getShapesCount() > 0) {
        hash = (37 * hash) + SHAPES_FIELD_NUMBER;
        hash = (53 * hash) + getShapesList().hashCode();
      }
      if (getChildrenCount() > 0) {
        hash = (37 * hash) + CHILDREN_FIELD_NUMBER;
        hash = (53 * hash) + getChildrenList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tfprof.TfprofOutput.TFProfNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tfprof.TfprofOutput.TFProfNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.tfprof.TFProfNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tfprof.TFProfNode)
        tensorflow.tfprof.TfprofOutput.TFProfNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_TFProfNode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_TFProfNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tfprof.TfprofOutput.TFProfNode.class, tensorflow.tfprof.TfprofOutput.TFProfNode.Builder.class);
      }

      // Construct using tensorflow.tfprof.TfprofOutput.TFProfNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTensorValueFieldBuilder();
          getShapesFieldBuilder();
          getChildrenFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tensorValueBuilder_ == null) {
          tensorValue_ = null;
        } else {
          tensorValueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        execMicros_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        requestedBytes_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        parameters_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        floatOps_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        inputs_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        device_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        totalExecMicros_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        totalRequestedBytes_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        totalParameters_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        totalFloatOps_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        totalInputs_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        if (shapesBuilder_ == null) {
          shapes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          shapesBuilder_.clear();
        }
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          childrenBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_TFProfNode_descriptor;
      }

      public tensorflow.tfprof.TfprofOutput.TFProfNode getDefaultInstanceForType() {
        return tensorflow.tfprof.TfprofOutput.TFProfNode.getDefaultInstance();
      }

      public tensorflow.tfprof.TfprofOutput.TFProfNode build() {
        tensorflow.tfprof.TfprofOutput.TFProfNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.tfprof.TfprofOutput.TFProfNode buildPartial() {
        tensorflow.tfprof.TfprofOutput.TFProfNode result = new tensorflow.tfprof.TfprofOutput.TFProfNode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (tensorValueBuilder_ == null) {
          result.tensorValue_ = tensorValue_;
        } else {
          result.tensorValue_ = tensorValueBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.execMicros_ = execMicros_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.requestedBytes_ = requestedBytes_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.parameters_ = parameters_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.floatOps_ = floatOps_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.inputs_ = inputs_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.device_ = device_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.totalExecMicros_ = totalExecMicros_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.totalRequestedBytes_ = totalRequestedBytes_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.totalParameters_ = totalParameters_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.totalFloatOps_ = totalFloatOps_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.totalInputs_ = totalInputs_;
        if (shapesBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            shapes_ = java.util.Collections.unmodifiableList(shapes_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.shapes_ = shapes_;
        } else {
          result.shapes_ = shapesBuilder_.build();
        }
        if (childrenBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            children_ = java.util.Collections.unmodifiableList(children_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.children_ = children_;
        } else {
          result.children_ = childrenBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tfprof.TfprofOutput.TFProfNode) {
          return mergeFrom((tensorflow.tfprof.TfprofOutput.TFProfNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tfprof.TfprofOutput.TFProfNode other) {
        if (other == tensorflow.tfprof.TfprofOutput.TFProfNode.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasTensorValue()) {
          mergeTensorValue(other.getTensorValue());
        }
        if (other.hasExecMicros()) {
          setExecMicros(other.getExecMicros());
        }
        if (other.hasRequestedBytes()) {
          setRequestedBytes(other.getRequestedBytes());
        }
        if (other.hasParameters()) {
          setParameters(other.getParameters());
        }
        if (other.hasFloatOps()) {
          setFloatOps(other.getFloatOps());
        }
        if (other.hasInputs()) {
          setInputs(other.getInputs());
        }
        if (other.hasDevice()) {
          bitField0_ |= 0x00000080;
          device_ = other.device_;
          onChanged();
        }
        if (other.hasTotalExecMicros()) {
          setTotalExecMicros(other.getTotalExecMicros());
        }
        if (other.hasTotalRequestedBytes()) {
          setTotalRequestedBytes(other.getTotalRequestedBytes());
        }
        if (other.hasTotalParameters()) {
          setTotalParameters(other.getTotalParameters());
        }
        if (other.hasTotalFloatOps()) {
          setTotalFloatOps(other.getTotalFloatOps());
        }
        if (other.hasTotalInputs()) {
          setTotalInputs(other.getTotalInputs());
        }
        if (shapesBuilder_ == null) {
          if (!other.shapes_.isEmpty()) {
            if (shapes_.isEmpty()) {
              shapes_ = other.shapes_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureShapesIsMutable();
              shapes_.addAll(other.shapes_);
            }
            onChanged();
          }
        } else {
          if (!other.shapes_.isEmpty()) {
            if (shapesBuilder_.isEmpty()) {
              shapesBuilder_.dispose();
              shapesBuilder_ = null;
              shapes_ = other.shapes_;
              bitField0_ = (bitField0_ & ~0x00002000);
              shapesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getShapesFieldBuilder() : null;
            } else {
              shapesBuilder_.addAllMessages(other.shapes_);
            }
          }
        }
        if (childrenBuilder_ == null) {
          if (!other.children_.isEmpty()) {
            if (children_.isEmpty()) {
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureChildrenIsMutable();
              children_.addAll(other.children_);
            }
            onChanged();
          }
        } else {
          if (!other.children_.isEmpty()) {
            if (childrenBuilder_.isEmpty()) {
              childrenBuilder_.dispose();
              childrenBuilder_ = null;
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00004000);
              childrenBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChildrenFieldBuilder() : null;
            } else {
              childrenBuilder_.addAllMessages(other.children_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.tfprof.TfprofOutput.TFProfNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.tfprof.TfprofOutput.TFProfNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * op name.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * op name.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * op name.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * op name.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * op name.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * op name.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private tensorflow.tfprof.TfprofOutput.TFProfTensorProto tensorValue_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tfprof.TfprofOutput.TFProfTensorProto, tensorflow.tfprof.TfprofOutput.TFProfTensorProto.Builder, tensorflow.tfprof.TfprofOutput.TFProfTensorProtoOrBuilder> tensorValueBuilder_;
      /**
       * <pre>
       * tensor value restored from checkpoint.
       * </pre>
       *
       * <code>optional .tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
       */
      public boolean hasTensorValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * tensor value restored from checkpoint.
       * </pre>
       *
       * <code>optional .tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
       */
      public tensorflow.tfprof.TfprofOutput.TFProfTensorProto getTensorValue() {
        if (tensorValueBuilder_ == null) {
          return tensorValue_ == null ? tensorflow.tfprof.TfprofOutput.TFProfTensorProto.getDefaultInstance() : tensorValue_;
        } else {
          return tensorValueBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * tensor value restored from checkpoint.
       * </pre>
       *
       * <code>optional .tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
       */
      public Builder setTensorValue(tensorflow.tfprof.TfprofOutput.TFProfTensorProto value) {
        if (tensorValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tensorValue_ = value;
          onChanged();
        } else {
          tensorValueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * tensor value restored from checkpoint.
       * </pre>
       *
       * <code>optional .tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
       */
      public Builder setTensorValue(
          tensorflow.tfprof.TfprofOutput.TFProfTensorProto.Builder builderForValue) {
        if (tensorValueBuilder_ == null) {
          tensorValue_ = builderForValue.build();
          onChanged();
        } else {
          tensorValueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * tensor value restored from checkpoint.
       * </pre>
       *
       * <code>optional .tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
       */
      public Builder mergeTensorValue(tensorflow.tfprof.TfprofOutput.TFProfTensorProto value) {
        if (tensorValueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              tensorValue_ != null &&
              tensorValue_ != tensorflow.tfprof.TfprofOutput.TFProfTensorProto.getDefaultInstance()) {
            tensorValue_ =
              tensorflow.tfprof.TfprofOutput.TFProfTensorProto.newBuilder(tensorValue_).mergeFrom(value).buildPartial();
          } else {
            tensorValue_ = value;
          }
          onChanged();
        } else {
          tensorValueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * tensor value restored from checkpoint.
       * </pre>
       *
       * <code>optional .tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
       */
      public Builder clearTensorValue() {
        if (tensorValueBuilder_ == null) {
          tensorValue_ = null;
          onChanged();
        } else {
          tensorValueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * tensor value restored from checkpoint.
       * </pre>
       *
       * <code>optional .tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
       */
      public tensorflow.tfprof.TfprofOutput.TFProfTensorProto.Builder getTensorValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTensorValueFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * tensor value restored from checkpoint.
       * </pre>
       *
       * <code>optional .tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
       */
      public tensorflow.tfprof.TfprofOutput.TFProfTensorProtoOrBuilder getTensorValueOrBuilder() {
        if (tensorValueBuilder_ != null) {
          return tensorValueBuilder_.getMessageOrBuilder();
        } else {
          return tensorValue_ == null ?
              tensorflow.tfprof.TfprofOutput.TFProfTensorProto.getDefaultInstance() : tensorValue_;
        }
      }
      /**
       * <pre>
       * tensor value restored from checkpoint.
       * </pre>
       *
       * <code>optional .tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tfprof.TfprofOutput.TFProfTensorProto, tensorflow.tfprof.TfprofOutput.TFProfTensorProto.Builder, tensorflow.tfprof.TfprofOutput.TFProfTensorProtoOrBuilder> 
          getTensorValueFieldBuilder() {
        if (tensorValueBuilder_ == null) {
          tensorValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tfprof.TfprofOutput.TFProfTensorProto, tensorflow.tfprof.TfprofOutput.TFProfTensorProto.Builder, tensorflow.tfprof.TfprofOutput.TFProfTensorProtoOrBuilder>(
                  getTensorValue(),
                  getParentForChildren(),
                  isClean());
          tensorValue_ = null;
        }
        return tensorValueBuilder_;
      }

      private long execMicros_ ;
      /**
       * <pre>
       * op execution time.
       * </pre>
       *
       * <code>optional int64 exec_micros = 2;</code>
       */
      public boolean hasExecMicros() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * op execution time.
       * </pre>
       *
       * <code>optional int64 exec_micros = 2;</code>
       */
      public long getExecMicros() {
        return execMicros_;
      }
      /**
       * <pre>
       * op execution time.
       * </pre>
       *
       * <code>optional int64 exec_micros = 2;</code>
       */
      public Builder setExecMicros(long value) {
        bitField0_ |= 0x00000004;
        execMicros_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * op execution time.
       * </pre>
       *
       * <code>optional int64 exec_micros = 2;</code>
       */
      public Builder clearExecMicros() {
        bitField0_ = (bitField0_ & ~0x00000004);
        execMicros_ = 0L;
        onChanged();
        return this;
      }

      private long requestedBytes_ ;
      /**
       * <pre>
       * Total requested bytes by the op.
       * </pre>
       *
       * <code>optional int64 requested_bytes = 3;</code>
       */
      public boolean hasRequestedBytes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Total requested bytes by the op.
       * </pre>
       *
       * <code>optional int64 requested_bytes = 3;</code>
       */
      public long getRequestedBytes() {
        return requestedBytes_;
      }
      /**
       * <pre>
       * Total requested bytes by the op.
       * </pre>
       *
       * <code>optional int64 requested_bytes = 3;</code>
       */
      public Builder setRequestedBytes(long value) {
        bitField0_ |= 0x00000008;
        requestedBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total requested bytes by the op.
       * </pre>
       *
       * <code>optional int64 requested_bytes = 3;</code>
       */
      public Builder clearRequestedBytes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        requestedBytes_ = 0L;
        onChanged();
        return this;
      }

      private long parameters_ ;
      /**
       * <pre>
       * Number of parameters if available.
       * </pre>
       *
       * <code>optional int64 parameters = 4;</code>
       */
      public boolean hasParameters() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * Number of parameters if available.
       * </pre>
       *
       * <code>optional int64 parameters = 4;</code>
       */
      public long getParameters() {
        return parameters_;
      }
      /**
       * <pre>
       * Number of parameters if available.
       * </pre>
       *
       * <code>optional int64 parameters = 4;</code>
       */
      public Builder setParameters(long value) {
        bitField0_ |= 0x00000010;
        parameters_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of parameters if available.
       * </pre>
       *
       * <code>optional int64 parameters = 4;</code>
       */
      public Builder clearParameters() {
        bitField0_ = (bitField0_ & ~0x00000010);
        parameters_ = 0L;
        onChanged();
        return this;
      }

      private long floatOps_ ;
      /**
       * <pre>
       * Number of float operations.
       * </pre>
       *
       * <code>optional int64 float_ops = 13;</code>
       */
      public boolean hasFloatOps() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * Number of float operations.
       * </pre>
       *
       * <code>optional int64 float_ops = 13;</code>
       */
      public long getFloatOps() {
        return floatOps_;
      }
      /**
       * <pre>
       * Number of float operations.
       * </pre>
       *
       * <code>optional int64 float_ops = 13;</code>
       */
      public Builder setFloatOps(long value) {
        bitField0_ |= 0x00000020;
        floatOps_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of float operations.
       * </pre>
       *
       * <code>optional int64 float_ops = 13;</code>
       */
      public Builder clearFloatOps() {
        bitField0_ = (bitField0_ & ~0x00000020);
        floatOps_ = 0L;
        onChanged();
        return this;
      }

      private long inputs_ ;
      /**
       * <pre>
       * Number of inputs to the op.
       * </pre>
       *
       * <code>optional int64 inputs = 5;</code>
       */
      public boolean hasInputs() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       * Number of inputs to the op.
       * </pre>
       *
       * <code>optional int64 inputs = 5;</code>
       */
      public long getInputs() {
        return inputs_;
      }
      /**
       * <pre>
       * Number of inputs to the op.
       * </pre>
       *
       * <code>optional int64 inputs = 5;</code>
       */
      public Builder setInputs(long value) {
        bitField0_ |= 0x00000040;
        inputs_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of inputs to the op.
       * </pre>
       *
       * <code>optional int64 inputs = 5;</code>
       */
      public Builder clearInputs() {
        bitField0_ = (bitField0_ & ~0x00000040);
        inputs_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object device_ = "";
      /**
       * <pre>
       * Device the op is assigned to.
       * </pre>
       *
       * <code>optional string device = 10;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       * Device the op is assigned to.
       * </pre>
       *
       * <code>optional string device = 10;</code>
       */
      public java.lang.String getDevice() {
        java.lang.Object ref = device_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            device_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Device the op is assigned to.
       * </pre>
       *
       * <code>optional string device = 10;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceBytes() {
        java.lang.Object ref = device_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          device_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Device the op is assigned to.
       * </pre>
       *
       * <code>optional string device = 10;</code>
       */
      public Builder setDevice(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        device_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Device the op is assigned to.
       * </pre>
       *
       * <code>optional string device = 10;</code>
       */
      public Builder clearDevice() {
        bitField0_ = (bitField0_ & ~0x00000080);
        device_ = getDefaultInstance().getDevice();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Device the op is assigned to.
       * </pre>
       *
       * <code>optional string device = 10;</code>
       */
      public Builder setDeviceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        device_ = value;
        onChanged();
        return this;
      }

      private long totalExecMicros_ ;
      /**
       * <pre>
       * The following are the aggregated stats from all accounted descendants and
       * the op itself. The actual descendants depend on the data structure used
       * (scope, graph).
       * </pre>
       *
       * <code>optional int64 total_exec_micros = 6;</code>
       */
      public boolean hasTotalExecMicros() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       * The following are the aggregated stats from all accounted descendants and
       * the op itself. The actual descendants depend on the data structure used
       * (scope, graph).
       * </pre>
       *
       * <code>optional int64 total_exec_micros = 6;</code>
       */
      public long getTotalExecMicros() {
        return totalExecMicros_;
      }
      /**
       * <pre>
       * The following are the aggregated stats from all accounted descendants and
       * the op itself. The actual descendants depend on the data structure used
       * (scope, graph).
       * </pre>
       *
       * <code>optional int64 total_exec_micros = 6;</code>
       */
      public Builder setTotalExecMicros(long value) {
        bitField0_ |= 0x00000100;
        totalExecMicros_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The following are the aggregated stats from all accounted descendants and
       * the op itself. The actual descendants depend on the data structure used
       * (scope, graph).
       * </pre>
       *
       * <code>optional int64 total_exec_micros = 6;</code>
       */
      public Builder clearTotalExecMicros() {
        bitField0_ = (bitField0_ & ~0x00000100);
        totalExecMicros_ = 0L;
        onChanged();
        return this;
      }

      private long totalRequestedBytes_ ;
      /**
       * <code>optional int64 total_requested_bytes = 7;</code>
       */
      public boolean hasTotalRequestedBytes() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int64 total_requested_bytes = 7;</code>
       */
      public long getTotalRequestedBytes() {
        return totalRequestedBytes_;
      }
      /**
       * <code>optional int64 total_requested_bytes = 7;</code>
       */
      public Builder setTotalRequestedBytes(long value) {
        bitField0_ |= 0x00000200;
        totalRequestedBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 total_requested_bytes = 7;</code>
       */
      public Builder clearTotalRequestedBytes() {
        bitField0_ = (bitField0_ & ~0x00000200);
        totalRequestedBytes_ = 0L;
        onChanged();
        return this;
      }

      private long totalParameters_ ;
      /**
       * <code>optional int64 total_parameters = 8;</code>
       */
      public boolean hasTotalParameters() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int64 total_parameters = 8;</code>
       */
      public long getTotalParameters() {
        return totalParameters_;
      }
      /**
       * <code>optional int64 total_parameters = 8;</code>
       */
      public Builder setTotalParameters(long value) {
        bitField0_ |= 0x00000400;
        totalParameters_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 total_parameters = 8;</code>
       */
      public Builder clearTotalParameters() {
        bitField0_ = (bitField0_ & ~0x00000400);
        totalParameters_ = 0L;
        onChanged();
        return this;
      }

      private long totalFloatOps_ ;
      /**
       * <code>optional int64 total_float_ops = 14;</code>
       */
      public boolean hasTotalFloatOps() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int64 total_float_ops = 14;</code>
       */
      public long getTotalFloatOps() {
        return totalFloatOps_;
      }
      /**
       * <code>optional int64 total_float_ops = 14;</code>
       */
      public Builder setTotalFloatOps(long value) {
        bitField0_ |= 0x00000800;
        totalFloatOps_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 total_float_ops = 14;</code>
       */
      public Builder clearTotalFloatOps() {
        bitField0_ = (bitField0_ & ~0x00000800);
        totalFloatOps_ = 0L;
        onChanged();
        return this;
      }

      private long totalInputs_ ;
      /**
       * <code>optional int64 total_inputs = 9;</code>
       */
      public boolean hasTotalInputs() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int64 total_inputs = 9;</code>
       */
      public long getTotalInputs() {
        return totalInputs_;
      }
      /**
       * <code>optional int64 total_inputs = 9;</code>
       */
      public Builder setTotalInputs(long value) {
        bitField0_ |= 0x00001000;
        totalInputs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 total_inputs = 9;</code>
       */
      public Builder clearTotalInputs() {
        bitField0_ = (bitField0_ & ~0x00001000);
        totalInputs_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<org.tensorflow.framework.TensorShapeProto> shapes_ =
        java.util.Collections.emptyList();
      private void ensureShapesIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          shapes_ = new java.util.ArrayList<org.tensorflow.framework.TensorShapeProto>(shapes_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder> shapesBuilder_;

      /**
       * <pre>
       * shape information, if available.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public java.util.List<org.tensorflow.framework.TensorShapeProto> getShapesList() {
        if (shapesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(shapes_);
        } else {
          return shapesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * shape information, if available.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public int getShapesCount() {
        if (shapesBuilder_ == null) {
          return shapes_.size();
        } else {
          return shapesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * shape information, if available.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public org.tensorflow.framework.TensorShapeProto getShapes(int index) {
        if (shapesBuilder_ == null) {
          return shapes_.get(index);
        } else {
          return shapesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * shape information, if available.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public Builder setShapes(
          int index, org.tensorflow.framework.TensorShapeProto value) {
        if (shapesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShapesIsMutable();
          shapes_.set(index, value);
          onChanged();
        } else {
          shapesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * shape information, if available.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public Builder setShapes(
          int index, org.tensorflow.framework.TensorShapeProto.Builder builderForValue) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          shapes_.set(index, builderForValue.build());
          onChanged();
        } else {
          shapesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * shape information, if available.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public Builder addShapes(org.tensorflow.framework.TensorShapeProto value) {
        if (shapesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShapesIsMutable();
          shapes_.add(value);
          onChanged();
        } else {
          shapesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * shape information, if available.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public Builder addShapes(
          int index, org.tensorflow.framework.TensorShapeProto value) {
        if (shapesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShapesIsMutable();
          shapes_.add(index, value);
          onChanged();
        } else {
          shapesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * shape information, if available.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public Builder addShapes(
          org.tensorflow.framework.TensorShapeProto.Builder builderForValue) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          shapes_.add(builderForValue.build());
          onChanged();
        } else {
          shapesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * shape information, if available.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public Builder addShapes(
          int index, org.tensorflow.framework.TensorShapeProto.Builder builderForValue) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          shapes_.add(index, builderForValue.build());
          onChanged();
        } else {
          shapesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * shape information, if available.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public Builder addAllShapes(
          java.lang.Iterable<? extends org.tensorflow.framework.TensorShapeProto> values) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, shapes_);
          onChanged();
        } else {
          shapesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * shape information, if available.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public Builder clearShapes() {
        if (shapesBuilder_ == null) {
          shapes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          shapesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * shape information, if available.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public Builder removeShapes(int index) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          shapes_.remove(index);
          onChanged();
        } else {
          shapesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * shape information, if available.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public org.tensorflow.framework.TensorShapeProto.Builder getShapesBuilder(
          int index) {
        return getShapesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * shape information, if available.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public org.tensorflow.framework.TensorShapeProtoOrBuilder getShapesOrBuilder(
          int index) {
        if (shapesBuilder_ == null) {
          return shapes_.get(index);  } else {
          return shapesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * shape information, if available.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public java.util.List<? extends org.tensorflow.framework.TensorShapeProtoOrBuilder> 
           getShapesOrBuilderList() {
        if (shapesBuilder_ != null) {
          return shapesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(shapes_);
        }
      }
      /**
       * <pre>
       * shape information, if available.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public org.tensorflow.framework.TensorShapeProto.Builder addShapesBuilder() {
        return getShapesFieldBuilder().addBuilder(
            org.tensorflow.framework.TensorShapeProto.getDefaultInstance());
      }
      /**
       * <pre>
       * shape information, if available.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public org.tensorflow.framework.TensorShapeProto.Builder addShapesBuilder(
          int index) {
        return getShapesFieldBuilder().addBuilder(
            index, org.tensorflow.framework.TensorShapeProto.getDefaultInstance());
      }
      /**
       * <pre>
       * shape information, if available.
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public java.util.List<org.tensorflow.framework.TensorShapeProto.Builder> 
           getShapesBuilderList() {
        return getShapesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder> 
          getShapesFieldBuilder() {
        if (shapesBuilder_ == null) {
          shapesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder>(
                  shapes_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          shapes_ = null;
        }
        return shapesBuilder_;
      }

      private java.util.List<tensorflow.tfprof.TfprofOutput.TFProfNode> children_ =
        java.util.Collections.emptyList();
      private void ensureChildrenIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          children_ = new java.util.ArrayList<tensorflow.tfprof.TfprofOutput.TFProfNode>(children_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tfprof.TfprofOutput.TFProfNode, tensorflow.tfprof.TfprofOutput.TFProfNode.Builder, tensorflow.tfprof.TfprofOutput.TFProfNodeOrBuilder> childrenBuilder_;

      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
       */
      public java.util.List<tensorflow.tfprof.TfprofOutput.TFProfNode> getChildrenList() {
        if (childrenBuilder_ == null) {
          return java.util.Collections.unmodifiableList(children_);
        } else {
          return childrenBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
       */
      public int getChildrenCount() {
        if (childrenBuilder_ == null) {
          return children_.size();
        } else {
          return childrenBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
       */
      public tensorflow.tfprof.TfprofOutput.TFProfNode getChildren(int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);
        } else {
          return childrenBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
       */
      public Builder setChildren(
          int index, tensorflow.tfprof.TfprofOutput.TFProfNode value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.set(index, value);
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
       */
      public Builder setChildren(
          int index, tensorflow.tfprof.TfprofOutput.TFProfNode.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.set(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
       */
      public Builder addChildren(tensorflow.tfprof.TfprofOutput.TFProfNode value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
       */
      public Builder addChildren(
          int index, tensorflow.tfprof.TfprofOutput.TFProfNode value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(index, value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
       */
      public Builder addChildren(
          tensorflow.tfprof.TfprofOutput.TFProfNode.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
       */
      public Builder addChildren(
          int index, tensorflow.tfprof.TfprofOutput.TFProfNode.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
       */
      public Builder addAllChildren(
          java.lang.Iterable<? extends tensorflow.tfprof.TfprofOutput.TFProfNode> values) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, children_);
          onChanged();
        } else {
          childrenBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
       */
      public Builder clearChildren() {
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          childrenBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
       */
      public Builder removeChildren(int index) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.remove(index);
          onChanged();
        } else {
          childrenBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
       */
      public tensorflow.tfprof.TfprofOutput.TFProfNode.Builder getChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
       */
      public tensorflow.tfprof.TfprofOutput.TFProfNodeOrBuilder getChildrenOrBuilder(
          int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);  } else {
          return childrenBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
       */
      public java.util.List<? extends tensorflow.tfprof.TfprofOutput.TFProfNodeOrBuilder> 
           getChildrenOrBuilderList() {
        if (childrenBuilder_ != null) {
          return childrenBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(children_);
        }
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
       */
      public tensorflow.tfprof.TfprofOutput.TFProfNode.Builder addChildrenBuilder() {
        return getChildrenFieldBuilder().addBuilder(
            tensorflow.tfprof.TfprofOutput.TFProfNode.getDefaultInstance());
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
       */
      public tensorflow.tfprof.TfprofOutput.TFProfNode.Builder addChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder().addBuilder(
            index, tensorflow.tfprof.TfprofOutput.TFProfNode.getDefaultInstance());
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.TFProfNode children = 12;</code>
       */
      public java.util.List<tensorflow.tfprof.TfprofOutput.TFProfNode.Builder> 
           getChildrenBuilderList() {
        return getChildrenFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tfprof.TfprofOutput.TFProfNode, tensorflow.tfprof.TfprofOutput.TFProfNode.Builder, tensorflow.tfprof.TfprofOutput.TFProfNodeOrBuilder> 
          getChildrenFieldBuilder() {
        if (childrenBuilder_ == null) {
          childrenBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.tfprof.TfprofOutput.TFProfNode, tensorflow.tfprof.TfprofOutput.TFProfNode.Builder, tensorflow.tfprof.TfprofOutput.TFProfNodeOrBuilder>(
                  children_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          children_ = null;
        }
        return childrenBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tfprof.TFProfNode)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tfprof.TFProfNode)
    private static final tensorflow.tfprof.TfprofOutput.TFProfNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tfprof.TfprofOutput.TFProfNode();
    }

    public static tensorflow.tfprof.TfprofOutput.TFProfNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TFProfNode>
        PARSER = new com.google.protobuf.AbstractParser<TFProfNode>() {
      public TFProfNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TFProfNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TFProfNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TFProfNode> getParserForType() {
      return PARSER;
    }

    public tensorflow.tfprof.TfprofOutput.TFProfNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tfprof_TFProfTensorProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tfprof_TFProfTensorProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tfprof_TFProfNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tfprof_TFProfNode_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+tensorflow/tools/tfprof/tfprof_output." +
      "proto\022\021tensorflow.tfprof\032,tensorflow/cor" +
      "e/framework/tensor_shape.proto\032%tensorfl" +
      "ow/core/framework/types.proto\"v\n\021TFProfT" +
      "ensorProto\022#\n\005dtype\030\001 \001(\0162\024.tensorflow.D" +
      "ataType\022\024\n\014value_double\030\002 \003(\001\022\023\n\013value_i" +
      "nt64\030\003 \003(\003\022\021\n\tvalue_str\030\004 \003(\t\"\255\003\n\nTFProf" +
      "Node\022\014\n\004name\030\001 \001(\t\022:\n\014tensor_value\030\017 \001(\013" +
      "2$.tensorflow.tfprof.TFProfTensorProto\022\023" +
      "\n\013exec_micros\030\002 \001(\003\022\027\n\017requested_bytes\030\003",
      " \001(\003\022\022\n\nparameters\030\004 \001(\003\022\021\n\tfloat_ops\030\r " +
      "\001(\003\022\016\n\006inputs\030\005 \001(\003\022\016\n\006device\030\n \001(\t\022\031\n\021t" +
      "otal_exec_micros\030\006 \001(\003\022\035\n\025total_requeste" +
      "d_bytes\030\007 \001(\003\022\030\n\020total_parameters\030\010 \001(\003\022" +
      "\027\n\017total_float_ops\030\016 \001(\003\022\024\n\014total_inputs" +
      "\030\t \001(\003\022,\n\006shapes\030\013 \003(\0132\034.tensorflow.Tens" +
      "orShapeProto\022/\n\010children\030\014 \003(\0132\035.tensorf" +
      "low.tfprof.TFProfNode"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.tensorflow.framework.TensorShapeProtos.getDescriptor(),
          org.tensorflow.framework.TypesProtos.getDescriptor(),
        }, assigner);
    internal_static_tensorflow_tfprof_TFProfTensorProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_tfprof_TFProfTensorProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tfprof_TFProfTensorProto_descriptor,
        new java.lang.String[] { "Dtype", "ValueDouble", "ValueInt64", "ValueStr", });
    internal_static_tensorflow_tfprof_TFProfNode_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_tfprof_TFProfNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tfprof_TFProfNode_descriptor,
        new java.lang.String[] { "Name", "TensorValue", "ExecMicros", "RequestedBytes", "Parameters", "FloatOps", "Inputs", "Device", "TotalExecMicros", "TotalRequestedBytes", "TotalParameters", "TotalFloatOps", "TotalInputs", "Shapes", "Children", });
    org.tensorflow.framework.TensorShapeProtos.getDescriptor();
    org.tensorflow.framework.TypesProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
