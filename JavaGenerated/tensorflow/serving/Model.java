// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/apis/model.proto

package tensorflow.serving;

public final class Model {
  private Model() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ModelSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.serving.ModelSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required servable name.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * Required servable name.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Optional version. If unspecified, will use the latest (numerical) version.
     * Typically not needed unless coordinating across multiple models that were
     * co-trained and/or have inter-dependencies on the versions used at inference
     * time.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value version = 2;</code>
     */
    boolean hasVersion();
    /**
     * <pre>
     * Optional version. If unspecified, will use the latest (numerical) version.
     * Typically not needed unless coordinating across multiple models that were
     * co-trained and/or have inter-dependencies on the versions used at inference
     * time.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value version = 2;</code>
     */
    com.google.protobuf.Int64Value getVersion();
    /**
     * <pre>
     * Optional version. If unspecified, will use the latest (numerical) version.
     * Typically not needed unless coordinating across multiple models that were
     * co-trained and/or have inter-dependencies on the versions used at inference
     * time.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value version = 2;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getVersionOrBuilder();

    /**
     * <pre>
     * A named signature to evaluate. If unspecified, the default signature will
     * be used. Note that only MultiInference will initially support this.
     * </pre>
     *
     * <code>string signature_name = 3;</code>
     */
    java.lang.String getSignatureName();
    /**
     * <pre>
     * A named signature to evaluate. If unspecified, the default signature will
     * be used. Note that only MultiInference will initially support this.
     * </pre>
     *
     * <code>string signature_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getSignatureNameBytes();
  }
  /**
   * <pre>
   * Metadata for an inference request such as the model name and version.
   * </pre>
   *
   * Protobuf type {@code tensorflow.serving.ModelSpec}
   */
  public  static final class ModelSpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.serving.ModelSpec)
      ModelSpecOrBuilder {
    // Use ModelSpec.newBuilder() to construct.
    private ModelSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ModelSpec() {
      name_ = "";
      signatureName_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ModelSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (version_ != null) {
                subBuilder = version_.toBuilder();
              }
              version_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(version_);
                version_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              signatureName_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.serving.Model.internal_static_tensorflow_serving_ModelSpec_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.serving.Model.internal_static_tensorflow_serving_ModelSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.serving.Model.ModelSpec.class, tensorflow.serving.Model.ModelSpec.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Required servable name.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Required servable name.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private com.google.protobuf.Int64Value version_;
    /**
     * <pre>
     * Optional version. If unspecified, will use the latest (numerical) version.
     * Typically not needed unless coordinating across multiple models that were
     * co-trained and/or have inter-dependencies on the versions used at inference
     * time.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value version = 2;</code>
     */
    public boolean hasVersion() {
      return version_ != null;
    }
    /**
     * <pre>
     * Optional version. If unspecified, will use the latest (numerical) version.
     * Typically not needed unless coordinating across multiple models that were
     * co-trained and/or have inter-dependencies on the versions used at inference
     * time.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value version = 2;</code>
     */
    public com.google.protobuf.Int64Value getVersion() {
      return version_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : version_;
    }
    /**
     * <pre>
     * Optional version. If unspecified, will use the latest (numerical) version.
     * Typically not needed unless coordinating across multiple models that were
     * co-trained and/or have inter-dependencies on the versions used at inference
     * time.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value version = 2;</code>
     */
    public com.google.protobuf.Int64ValueOrBuilder getVersionOrBuilder() {
      return getVersion();
    }

    public static final int SIGNATURE_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object signatureName_;
    /**
     * <pre>
     * A named signature to evaluate. If unspecified, the default signature will
     * be used. Note that only MultiInference will initially support this.
     * </pre>
     *
     * <code>string signature_name = 3;</code>
     */
    public java.lang.String getSignatureName() {
      java.lang.Object ref = signatureName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        signatureName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A named signature to evaluate. If unspecified, the default signature will
     * be used. Note that only MultiInference will initially support this.
     * </pre>
     *
     * <code>string signature_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSignatureNameBytes() {
      java.lang.Object ref = signatureName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        signatureName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (version_ != null) {
        output.writeMessage(2, getVersion());
      }
      if (!getSignatureNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, signatureName_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (version_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getVersion());
      }
      if (!getSignatureNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, signatureName_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.serving.Model.ModelSpec)) {
        return super.equals(obj);
      }
      tensorflow.serving.Model.ModelSpec other = (tensorflow.serving.Model.ModelSpec) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && (hasVersion() == other.hasVersion());
      if (hasVersion()) {
        result = result && getVersion()
            .equals(other.getVersion());
      }
      result = result && getSignatureName()
          .equals(other.getSignatureName());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasVersion()) {
        hash = (37 * hash) + VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getVersion().hashCode();
      }
      hash = (37 * hash) + SIGNATURE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getSignatureName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.serving.Model.ModelSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Model.ModelSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Model.ModelSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Model.ModelSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Model.ModelSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Model.ModelSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.Model.ModelSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Model.ModelSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.Model.ModelSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Model.ModelSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.serving.Model.ModelSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Metadata for an inference request such as the model name and version.
     * </pre>
     *
     * Protobuf type {@code tensorflow.serving.ModelSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.serving.ModelSpec)
        tensorflow.serving.Model.ModelSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.serving.Model.internal_static_tensorflow_serving_ModelSpec_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.serving.Model.internal_static_tensorflow_serving_ModelSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.serving.Model.ModelSpec.class, tensorflow.serving.Model.ModelSpec.Builder.class);
      }

      // Construct using tensorflow.serving.Model.ModelSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        if (versionBuilder_ == null) {
          version_ = null;
        } else {
          version_ = null;
          versionBuilder_ = null;
        }
        signatureName_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.serving.Model.internal_static_tensorflow_serving_ModelSpec_descriptor;
      }

      public tensorflow.serving.Model.ModelSpec getDefaultInstanceForType() {
        return tensorflow.serving.Model.ModelSpec.getDefaultInstance();
      }

      public tensorflow.serving.Model.ModelSpec build() {
        tensorflow.serving.Model.ModelSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.serving.Model.ModelSpec buildPartial() {
        tensorflow.serving.Model.ModelSpec result = new tensorflow.serving.Model.ModelSpec(this);
        result.name_ = name_;
        if (versionBuilder_ == null) {
          result.version_ = version_;
        } else {
          result.version_ = versionBuilder_.build();
        }
        result.signatureName_ = signatureName_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.serving.Model.ModelSpec) {
          return mergeFrom((tensorflow.serving.Model.ModelSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.serving.Model.ModelSpec other) {
        if (other == tensorflow.serving.Model.ModelSpec.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.hasVersion()) {
          mergeVersion(other.getVersion());
        }
        if (!other.getSignatureName().isEmpty()) {
          signatureName_ = other.signatureName_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.serving.Model.ModelSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.serving.Model.ModelSpec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Required servable name.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Required servable name.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Required servable name.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required servable name.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required servable name.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Int64Value version_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> versionBuilder_;
      /**
       * <pre>
       * Optional version. If unspecified, will use the latest (numerical) version.
       * Typically not needed unless coordinating across multiple models that were
       * co-trained and/or have inter-dependencies on the versions used at inference
       * time.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value version = 2;</code>
       */
      public boolean hasVersion() {
        return versionBuilder_ != null || version_ != null;
      }
      /**
       * <pre>
       * Optional version. If unspecified, will use the latest (numerical) version.
       * Typically not needed unless coordinating across multiple models that were
       * co-trained and/or have inter-dependencies on the versions used at inference
       * time.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value version = 2;</code>
       */
      public com.google.protobuf.Int64Value getVersion() {
        if (versionBuilder_ == null) {
          return version_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : version_;
        } else {
          return versionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Optional version. If unspecified, will use the latest (numerical) version.
       * Typically not needed unless coordinating across multiple models that were
       * co-trained and/or have inter-dependencies on the versions used at inference
       * time.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value version = 2;</code>
       */
      public Builder setVersion(com.google.protobuf.Int64Value value) {
        if (versionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          version_ = value;
          onChanged();
        } else {
          versionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Optional version. If unspecified, will use the latest (numerical) version.
       * Typically not needed unless coordinating across multiple models that were
       * co-trained and/or have inter-dependencies on the versions used at inference
       * time.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value version = 2;</code>
       */
      public Builder setVersion(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (versionBuilder_ == null) {
          version_ = builderForValue.build();
          onChanged();
        } else {
          versionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Optional version. If unspecified, will use the latest (numerical) version.
       * Typically not needed unless coordinating across multiple models that were
       * co-trained and/or have inter-dependencies on the versions used at inference
       * time.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value version = 2;</code>
       */
      public Builder mergeVersion(com.google.protobuf.Int64Value value) {
        if (versionBuilder_ == null) {
          if (version_ != null) {
            version_ =
              com.google.protobuf.Int64Value.newBuilder(version_).mergeFrom(value).buildPartial();
          } else {
            version_ = value;
          }
          onChanged();
        } else {
          versionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Optional version. If unspecified, will use the latest (numerical) version.
       * Typically not needed unless coordinating across multiple models that were
       * co-trained and/or have inter-dependencies on the versions used at inference
       * time.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value version = 2;</code>
       */
      public Builder clearVersion() {
        if (versionBuilder_ == null) {
          version_ = null;
          onChanged();
        } else {
          version_ = null;
          versionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Optional version. If unspecified, will use the latest (numerical) version.
       * Typically not needed unless coordinating across multiple models that were
       * co-trained and/or have inter-dependencies on the versions used at inference
       * time.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value version = 2;</code>
       */
      public com.google.protobuf.Int64Value.Builder getVersionBuilder() {
        
        onChanged();
        return getVersionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Optional version. If unspecified, will use the latest (numerical) version.
       * Typically not needed unless coordinating across multiple models that were
       * co-trained and/or have inter-dependencies on the versions used at inference
       * time.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value version = 2;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getVersionOrBuilder() {
        if (versionBuilder_ != null) {
          return versionBuilder_.getMessageOrBuilder();
        } else {
          return version_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : version_;
        }
      }
      /**
       * <pre>
       * Optional version. If unspecified, will use the latest (numerical) version.
       * Typically not needed unless coordinating across multiple models that were
       * co-trained and/or have inter-dependencies on the versions used at inference
       * time.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value version = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getVersionFieldBuilder() {
        if (versionBuilder_ == null) {
          versionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getVersion(),
                  getParentForChildren(),
                  isClean());
          version_ = null;
        }
        return versionBuilder_;
      }

      private java.lang.Object signatureName_ = "";
      /**
       * <pre>
       * A named signature to evaluate. If unspecified, the default signature will
       * be used. Note that only MultiInference will initially support this.
       * </pre>
       *
       * <code>string signature_name = 3;</code>
       */
      public java.lang.String getSignatureName() {
        java.lang.Object ref = signatureName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          signatureName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A named signature to evaluate. If unspecified, the default signature will
       * be used. Note that only MultiInference will initially support this.
       * </pre>
       *
       * <code>string signature_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSignatureNameBytes() {
        java.lang.Object ref = signatureName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          signatureName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A named signature to evaluate. If unspecified, the default signature will
       * be used. Note that only MultiInference will initially support this.
       * </pre>
       *
       * <code>string signature_name = 3;</code>
       */
      public Builder setSignatureName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        signatureName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A named signature to evaluate. If unspecified, the default signature will
       * be used. Note that only MultiInference will initially support this.
       * </pre>
       *
       * <code>string signature_name = 3;</code>
       */
      public Builder clearSignatureName() {
        
        signatureName_ = getDefaultInstance().getSignatureName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A named signature to evaluate. If unspecified, the default signature will
       * be used. Note that only MultiInference will initially support this.
       * </pre>
       *
       * <code>string signature_name = 3;</code>
       */
      public Builder setSignatureNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        signatureName_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.serving.ModelSpec)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.serving.ModelSpec)
    private static final tensorflow.serving.Model.ModelSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.serving.Model.ModelSpec();
    }

    public static tensorflow.serving.Model.ModelSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ModelSpec>
        PARSER = new com.google.protobuf.AbstractParser<ModelSpec>() {
      public ModelSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ModelSpec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ModelSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ModelSpec> getParserForType() {
      return PARSER;
    }

    public tensorflow.serving.Model.ModelSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_serving_ModelSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_serving_ModelSpec_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n#tensorflow_serving/apis/model.proto\022\022t" +
      "ensorflow.serving\032\036google/protobuf/wrapp" +
      "ers.proto\"_\n\tModelSpec\022\014\n\004name\030\001 \001(\t\022,\n\007" +
      "version\030\002 \001(\0132\033.google.protobuf.Int64Val" +
      "ue\022\026\n\016signature_name\030\003 \001(\tB\003\370\001\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.WrappersProto.getDescriptor(),
        }, assigner);
    internal_static_tensorflow_serving_ModelSpec_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_serving_ModelSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_serving_ModelSpec_descriptor,
        new java.lang.String[] { "Name", "Version", "SignatureName", });
    com.google.protobuf.WrappersProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
