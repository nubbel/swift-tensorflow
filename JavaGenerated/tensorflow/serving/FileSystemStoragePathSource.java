// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/sources/storage_path/file_system_storage_path_source.proto

package tensorflow.serving;

public final class FileSystemStoragePathSource {
  private FileSystemStoragePathSource() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FileSystemStoragePathSourceConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.serving.FileSystemStoragePathSourceConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The servables to monitor for new versions, and aspire.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
     */
    java.util.List<tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor> 
        getServablesList();
    /**
     * <pre>
     * The servables to monitor for new versions, and aspire.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
     */
    tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor getServables(int index);
    /**
     * <pre>
     * The servables to monitor for new versions, and aspire.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
     */
    int getServablesCount();
    /**
     * <pre>
     * The servables to monitor for new versions, and aspire.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
     */
    java.util.List<? extends tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitorOrBuilder> 
        getServablesOrBuilderList();
    /**
     * <pre>
     * The servables to monitor for new versions, and aspire.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
     */
    tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitorOrBuilder getServablesOrBuilder(
        int index);

    /**
     * <pre>
     * A single servable name/base_path pair to monitor.
     * DEPRECATED: Use 'servables' instead.
     * TODO(b/30898016): Stop using these fields, and ultimately remove them here.
     * </pre>
     *
     * <code>string servable_name = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated java.lang.String getServableName();
    /**
     * <pre>
     * A single servable name/base_path pair to monitor.
     * DEPRECATED: Use 'servables' instead.
     * TODO(b/30898016): Stop using these fields, and ultimately remove them here.
     * </pre>
     *
     * <code>string servable_name = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated com.google.protobuf.ByteString
        getServableNameBytes();

    /**
     * <code>string base_path = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated java.lang.String getBasePath();
    /**
     * <code>string base_path = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated com.google.protobuf.ByteString
        getBasePathBytes();

    /**
     * <pre>
     * How long to wait between file-system polling to look for children of
     * 'base_path', in seconds.
     * For testing use only: a negative value disables the polling thread.
     * </pre>
     *
     * <code>int64 file_system_poll_wait_seconds = 3;</code>
     */
    long getFileSystemPollWaitSeconds();

    /**
     * <pre>
     * If true, then FileSystemStoragePathSource::Create() and ::UpdateConfig()
     * fail if, for any configured servables, the file system doesn't currently
     * contain at least one version under the base path.
     * (Otherwise, it will emit a warning and keep pinging the file system to
     * check for a version to appear later.)
     * </pre>
     *
     * <code>bool fail_if_zero_versions_at_startup = 4;</code>
     */
    boolean getFailIfZeroVersionsAtStartup();
  }
  /**
   * <pre>
   * Config proto for FileSystemStoragePathSource.
   * </pre>
   *
   * Protobuf type {@code tensorflow.serving.FileSystemStoragePathSourceConfig}
   */
  public  static final class FileSystemStoragePathSourceConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.serving.FileSystemStoragePathSourceConfig)
      FileSystemStoragePathSourceConfigOrBuilder {
    // Use FileSystemStoragePathSourceConfig.newBuilder() to construct.
    private FileSystemStoragePathSourceConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FileSystemStoragePathSourceConfig() {
      servables_ = java.util.Collections.emptyList();
      servableName_ = "";
      basePath_ = "";
      fileSystemPollWaitSeconds_ = 0L;
      failIfZeroVersionsAtStartup_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private FileSystemStoragePathSourceConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              servableName_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              basePath_ = s;
              break;
            }
            case 24: {

              fileSystemPollWaitSeconds_ = input.readInt64();
              break;
            }
            case 32: {

              failIfZeroVersionsAtStartup_ = input.readBool();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                servables_ = new java.util.ArrayList<tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor>();
                mutable_bitField0_ |= 0x00000001;
              }
              servables_.add(
                  input.readMessage(tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          servables_ = java.util.Collections.unmodifiableList(servables_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.serving.FileSystemStoragePathSource.internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.serving.FileSystemStoragePathSource.internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.class, tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.Builder.class);
    }

    /**
     * <pre>
     * The policy to define how many versions of the servable should be
     * served at the same time.
     * </pre>
     *
     * Protobuf enum {@code tensorflow.serving.FileSystemStoragePathSourceConfig.VersionPolicy}
     */
    public enum VersionPolicy
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Only serve the latest version that exists in the base path.
       * This is the default behavior.
       * </pre>
       *
       * <code>LATEST_VERSION = 0;</code>
       */
      LATEST_VERSION(0),
      /**
       * <pre>
       * Serves all the versions that exist in the base path.
       * </pre>
       *
       * <code>ALL_VERSIONS = 1;</code>
       */
      ALL_VERSIONS(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Only serve the latest version that exists in the base path.
       * This is the default behavior.
       * </pre>
       *
       * <code>LATEST_VERSION = 0;</code>
       */
      public static final int LATEST_VERSION_VALUE = 0;
      /**
       * <pre>
       * Serves all the versions that exist in the base path.
       * </pre>
       *
       * <code>ALL_VERSIONS = 1;</code>
       */
      public static final int ALL_VERSIONS_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static VersionPolicy valueOf(int value) {
        return forNumber(value);
      }

      public static VersionPolicy forNumber(int value) {
        switch (value) {
          case 0: return LATEST_VERSION;
          case 1: return ALL_VERSIONS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<VersionPolicy>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          VersionPolicy> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<VersionPolicy>() {
              public VersionPolicy findValueByNumber(int number) {
                return VersionPolicy.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.getDescriptor().getEnumTypes().get(0);
      }

      private static final VersionPolicy[] VALUES = values();

      public static VersionPolicy valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private VersionPolicy(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:tensorflow.serving.FileSystemStoragePathSourceConfig.VersionPolicy)
    }

    public interface ServableToMonitorOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The servable name to supply in aspired-versions callback calls. Child
       * paths of 'base_path' are considered to be versions of this servable.
       * </pre>
       *
       * <code>string servable_name = 1;</code>
       */
      java.lang.String getServableName();
      /**
       * <pre>
       * The servable name to supply in aspired-versions callback calls. Child
       * paths of 'base_path' are considered to be versions of this servable.
       * </pre>
       *
       * <code>string servable_name = 1;</code>
       */
      com.google.protobuf.ByteString
          getServableNameBytes();

      /**
       * <pre>
       * The path to monitor, i.e. look for child paths of the form base_path/123.
       * </pre>
       *
       * <code>string base_path = 2;</code>
       */
      java.lang.String getBasePath();
      /**
       * <pre>
       * The path to monitor, i.e. look for child paths of the form base_path/123.
       * </pre>
       *
       * <code>string base_path = 2;</code>
       */
      com.google.protobuf.ByteString
          getBasePathBytes();

      /**
       * <pre>
       * The policy to determines the number of versions of the servable to be
       * served at the same time.
       * </pre>
       *
       * <code>.tensorflow.serving.FileSystemStoragePathSourceConfig.VersionPolicy version_policy = 3;</code>
       */
      int getVersionPolicyValue();
      /**
       * <pre>
       * The policy to determines the number of versions of the servable to be
       * served at the same time.
       * </pre>
       *
       * <code>.tensorflow.serving.FileSystemStoragePathSourceConfig.VersionPolicy version_policy = 3;</code>
       */
      tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.VersionPolicy getVersionPolicy();
    }
    /**
     * <pre>
     * A servable name and base path to look for versions of the servable.
     * </pre>
     *
     * Protobuf type {@code tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor}
     */
    public  static final class ServableToMonitor extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
        ServableToMonitorOrBuilder {
      // Use ServableToMonitor.newBuilder() to construct.
      private ServableToMonitor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ServableToMonitor() {
        servableName_ = "";
        basePath_ = "";
        versionPolicy_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private ServableToMonitor(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                servableName_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                basePath_ = s;
                break;
              }
              case 24: {
                int rawValue = input.readEnum();

                versionPolicy_ = rawValue;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.serving.FileSystemStoragePathSource.internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_ServableToMonitor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.serving.FileSystemStoragePathSource.internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_ServableToMonitor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.class, tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.Builder.class);
      }

      public static final int SERVABLE_NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object servableName_;
      /**
       * <pre>
       * The servable name to supply in aspired-versions callback calls. Child
       * paths of 'base_path' are considered to be versions of this servable.
       * </pre>
       *
       * <code>string servable_name = 1;</code>
       */
      public java.lang.String getServableName() {
        java.lang.Object ref = servableName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          servableName_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The servable name to supply in aspired-versions callback calls. Child
       * paths of 'base_path' are considered to be versions of this servable.
       * </pre>
       *
       * <code>string servable_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getServableNameBytes() {
        java.lang.Object ref = servableName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          servableName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int BASE_PATH_FIELD_NUMBER = 2;
      private volatile java.lang.Object basePath_;
      /**
       * <pre>
       * The path to monitor, i.e. look for child paths of the form base_path/123.
       * </pre>
       *
       * <code>string base_path = 2;</code>
       */
      public java.lang.String getBasePath() {
        java.lang.Object ref = basePath_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          basePath_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The path to monitor, i.e. look for child paths of the form base_path/123.
       * </pre>
       *
       * <code>string base_path = 2;</code>
       */
      public com.google.protobuf.ByteString
          getBasePathBytes() {
        java.lang.Object ref = basePath_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          basePath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int VERSION_POLICY_FIELD_NUMBER = 3;
      private int versionPolicy_;
      /**
       * <pre>
       * The policy to determines the number of versions of the servable to be
       * served at the same time.
       * </pre>
       *
       * <code>.tensorflow.serving.FileSystemStoragePathSourceConfig.VersionPolicy version_policy = 3;</code>
       */
      public int getVersionPolicyValue() {
        return versionPolicy_;
      }
      /**
       * <pre>
       * The policy to determines the number of versions of the servable to be
       * served at the same time.
       * </pre>
       *
       * <code>.tensorflow.serving.FileSystemStoragePathSourceConfig.VersionPolicy version_policy = 3;</code>
       */
      public tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.VersionPolicy getVersionPolicy() {
        tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.VersionPolicy result = tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.VersionPolicy.valueOf(versionPolicy_);
        return result == null ? tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.VersionPolicy.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getServableNameBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, servableName_);
        }
        if (!getBasePathBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, basePath_);
        }
        if (versionPolicy_ != tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.VersionPolicy.LATEST_VERSION.getNumber()) {
          output.writeEnum(3, versionPolicy_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getServableNameBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, servableName_);
        }
        if (!getBasePathBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, basePath_);
        }
        if (versionPolicy_ != tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.VersionPolicy.LATEST_VERSION.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, versionPolicy_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor)) {
          return super.equals(obj);
        }
        tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor other = (tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor) obj;

        boolean result = true;
        result = result && getServableName()
            .equals(other.getServableName());
        result = result && getBasePath()
            .equals(other.getBasePath());
        result = result && versionPolicy_ == other.versionPolicy_;
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + SERVABLE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getServableName().hashCode();
        hash = (37 * hash) + BASE_PATH_FIELD_NUMBER;
        hash = (53 * hash) + getBasePath().hashCode();
        hash = (37 * hash) + VERSION_POLICY_FIELD_NUMBER;
        hash = (53 * hash) + versionPolicy_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * A servable name and base path to look for versions of the servable.
       * </pre>
       *
       * Protobuf type {@code tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
          tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitorOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tensorflow.serving.FileSystemStoragePathSource.internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_ServableToMonitor_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tensorflow.serving.FileSystemStoragePathSource.internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_ServableToMonitor_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.class, tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.Builder.class);
        }

        // Construct using tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          servableName_ = "";

          basePath_ = "";

          versionPolicy_ = 0;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return tensorflow.serving.FileSystemStoragePathSource.internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_ServableToMonitor_descriptor;
        }

        public tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor getDefaultInstanceForType() {
          return tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.getDefaultInstance();
        }

        public tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor build() {
          tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor buildPartial() {
          tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor result = new tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor(this);
          result.servableName_ = servableName_;
          result.basePath_ = basePath_;
          result.versionPolicy_ = versionPolicy_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor) {
            return mergeFrom((tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor other) {
          if (other == tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.getDefaultInstance()) return this;
          if (!other.getServableName().isEmpty()) {
            servableName_ = other.servableName_;
            onChanged();
          }
          if (!other.getBasePath().isEmpty()) {
            basePath_ = other.basePath_;
            onChanged();
          }
          if (other.versionPolicy_ != 0) {
            setVersionPolicyValue(other.getVersionPolicyValue());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object servableName_ = "";
        /**
         * <pre>
         * The servable name to supply in aspired-versions callback calls. Child
         * paths of 'base_path' are considered to be versions of this servable.
         * </pre>
         *
         * <code>string servable_name = 1;</code>
         */
        public java.lang.String getServableName() {
          java.lang.Object ref = servableName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            servableName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The servable name to supply in aspired-versions callback calls. Child
         * paths of 'base_path' are considered to be versions of this servable.
         * </pre>
         *
         * <code>string servable_name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getServableNameBytes() {
          java.lang.Object ref = servableName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            servableName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The servable name to supply in aspired-versions callback calls. Child
         * paths of 'base_path' are considered to be versions of this servable.
         * </pre>
         *
         * <code>string servable_name = 1;</code>
         */
        public Builder setServableName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          servableName_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The servable name to supply in aspired-versions callback calls. Child
         * paths of 'base_path' are considered to be versions of this servable.
         * </pre>
         *
         * <code>string servable_name = 1;</code>
         */
        public Builder clearServableName() {
          
          servableName_ = getDefaultInstance().getServableName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The servable name to supply in aspired-versions callback calls. Child
         * paths of 'base_path' are considered to be versions of this servable.
         * </pre>
         *
         * <code>string servable_name = 1;</code>
         */
        public Builder setServableNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          servableName_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object basePath_ = "";
        /**
         * <pre>
         * The path to monitor, i.e. look for child paths of the form base_path/123.
         * </pre>
         *
         * <code>string base_path = 2;</code>
         */
        public java.lang.String getBasePath() {
          java.lang.Object ref = basePath_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            basePath_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The path to monitor, i.e. look for child paths of the form base_path/123.
         * </pre>
         *
         * <code>string base_path = 2;</code>
         */
        public com.google.protobuf.ByteString
            getBasePathBytes() {
          java.lang.Object ref = basePath_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            basePath_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The path to monitor, i.e. look for child paths of the form base_path/123.
         * </pre>
         *
         * <code>string base_path = 2;</code>
         */
        public Builder setBasePath(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          basePath_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The path to monitor, i.e. look for child paths of the form base_path/123.
         * </pre>
         *
         * <code>string base_path = 2;</code>
         */
        public Builder clearBasePath() {
          
          basePath_ = getDefaultInstance().getBasePath();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The path to monitor, i.e. look for child paths of the form base_path/123.
         * </pre>
         *
         * <code>string base_path = 2;</code>
         */
        public Builder setBasePathBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          basePath_ = value;
          onChanged();
          return this;
        }

        private int versionPolicy_ = 0;
        /**
         * <pre>
         * The policy to determines the number of versions of the servable to be
         * served at the same time.
         * </pre>
         *
         * <code>.tensorflow.serving.FileSystemStoragePathSourceConfig.VersionPolicy version_policy = 3;</code>
         */
        public int getVersionPolicyValue() {
          return versionPolicy_;
        }
        /**
         * <pre>
         * The policy to determines the number of versions of the servable to be
         * served at the same time.
         * </pre>
         *
         * <code>.tensorflow.serving.FileSystemStoragePathSourceConfig.VersionPolicy version_policy = 3;</code>
         */
        public Builder setVersionPolicyValue(int value) {
          versionPolicy_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The policy to determines the number of versions of the servable to be
         * served at the same time.
         * </pre>
         *
         * <code>.tensorflow.serving.FileSystemStoragePathSourceConfig.VersionPolicy version_policy = 3;</code>
         */
        public tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.VersionPolicy getVersionPolicy() {
          tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.VersionPolicy result = tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.VersionPolicy.valueOf(versionPolicy_);
          return result == null ? tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.VersionPolicy.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * The policy to determines the number of versions of the servable to be
         * served at the same time.
         * </pre>
         *
         * <code>.tensorflow.serving.FileSystemStoragePathSourceConfig.VersionPolicy version_policy = 3;</code>
         */
        public Builder setVersionPolicy(tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.VersionPolicy value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          versionPolicy_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The policy to determines the number of versions of the servable to be
         * served at the same time.
         * </pre>
         *
         * <code>.tensorflow.serving.FileSystemStoragePathSourceConfig.VersionPolicy version_policy = 3;</code>
         */
        public Builder clearVersionPolicy() {
          
          versionPolicy_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
      }

      // @@protoc_insertion_point(class_scope:tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor)
      private static final tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor();
      }

      public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ServableToMonitor>
          PARSER = new com.google.protobuf.AbstractParser<ServableToMonitor>() {
        public ServableToMonitor parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new ServableToMonitor(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ServableToMonitor> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ServableToMonitor> getParserForType() {
        return PARSER;
      }

      public tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int SERVABLES_FIELD_NUMBER = 5;
    private java.util.List<tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor> servables_;
    /**
     * <pre>
     * The servables to monitor for new versions, and aspire.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
     */
    public java.util.List<tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor> getServablesList() {
      return servables_;
    }
    /**
     * <pre>
     * The servables to monitor for new versions, and aspire.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
     */
    public java.util.List<? extends tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitorOrBuilder> 
        getServablesOrBuilderList() {
      return servables_;
    }
    /**
     * <pre>
     * The servables to monitor for new versions, and aspire.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
     */
    public int getServablesCount() {
      return servables_.size();
    }
    /**
     * <pre>
     * The servables to monitor for new versions, and aspire.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
     */
    public tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor getServables(int index) {
      return servables_.get(index);
    }
    /**
     * <pre>
     * The servables to monitor for new versions, and aspire.
     * </pre>
     *
     * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
     */
    public tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitorOrBuilder getServablesOrBuilder(
        int index) {
      return servables_.get(index);
    }

    public static final int SERVABLE_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object servableName_;
    /**
     * <pre>
     * A single servable name/base_path pair to monitor.
     * DEPRECATED: Use 'servables' instead.
     * TODO(b/30898016): Stop using these fields, and ultimately remove them here.
     * </pre>
     *
     * <code>string servable_name = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.lang.String getServableName() {
      java.lang.Object ref = servableName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        servableName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A single servable name/base_path pair to monitor.
     * DEPRECATED: Use 'servables' instead.
     * TODO(b/30898016): Stop using these fields, and ultimately remove them here.
     * </pre>
     *
     * <code>string servable_name = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.ByteString
        getServableNameBytes() {
      java.lang.Object ref = servableName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        servableName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BASE_PATH_FIELD_NUMBER = 2;
    private volatile java.lang.Object basePath_;
    /**
     * <code>string base_path = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated public java.lang.String getBasePath() {
      java.lang.Object ref = basePath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        basePath_ = s;
        return s;
      }
    }
    /**
     * <code>string base_path = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.ByteString
        getBasePathBytes() {
      java.lang.Object ref = basePath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        basePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILE_SYSTEM_POLL_WAIT_SECONDS_FIELD_NUMBER = 3;
    private long fileSystemPollWaitSeconds_;
    /**
     * <pre>
     * How long to wait between file-system polling to look for children of
     * 'base_path', in seconds.
     * For testing use only: a negative value disables the polling thread.
     * </pre>
     *
     * <code>int64 file_system_poll_wait_seconds = 3;</code>
     */
    public long getFileSystemPollWaitSeconds() {
      return fileSystemPollWaitSeconds_;
    }

    public static final int FAIL_IF_ZERO_VERSIONS_AT_STARTUP_FIELD_NUMBER = 4;
    private boolean failIfZeroVersionsAtStartup_;
    /**
     * <pre>
     * If true, then FileSystemStoragePathSource::Create() and ::UpdateConfig()
     * fail if, for any configured servables, the file system doesn't currently
     * contain at least one version under the base path.
     * (Otherwise, it will emit a warning and keep pinging the file system to
     * check for a version to appear later.)
     * </pre>
     *
     * <code>bool fail_if_zero_versions_at_startup = 4;</code>
     */
    public boolean getFailIfZeroVersionsAtStartup() {
      return failIfZeroVersionsAtStartup_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getServableNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, servableName_);
      }
      if (!getBasePathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, basePath_);
      }
      if (fileSystemPollWaitSeconds_ != 0L) {
        output.writeInt64(3, fileSystemPollWaitSeconds_);
      }
      if (failIfZeroVersionsAtStartup_ != false) {
        output.writeBool(4, failIfZeroVersionsAtStartup_);
      }
      for (int i = 0; i < servables_.size(); i++) {
        output.writeMessage(5, servables_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getServableNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, servableName_);
      }
      if (!getBasePathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, basePath_);
      }
      if (fileSystemPollWaitSeconds_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, fileSystemPollWaitSeconds_);
      }
      if (failIfZeroVersionsAtStartup_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, failIfZeroVersionsAtStartup_);
      }
      for (int i = 0; i < servables_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, servables_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig)) {
        return super.equals(obj);
      }
      tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig other = (tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig) obj;

      boolean result = true;
      result = result && getServablesList()
          .equals(other.getServablesList());
      result = result && getServableName()
          .equals(other.getServableName());
      result = result && getBasePath()
          .equals(other.getBasePath());
      result = result && (getFileSystemPollWaitSeconds()
          == other.getFileSystemPollWaitSeconds());
      result = result && (getFailIfZeroVersionsAtStartup()
          == other.getFailIfZeroVersionsAtStartup());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getServablesCount() > 0) {
        hash = (37 * hash) + SERVABLES_FIELD_NUMBER;
        hash = (53 * hash) + getServablesList().hashCode();
      }
      hash = (37 * hash) + SERVABLE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getServableName().hashCode();
      hash = (37 * hash) + BASE_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getBasePath().hashCode();
      hash = (37 * hash) + FILE_SYSTEM_POLL_WAIT_SECONDS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFileSystemPollWaitSeconds());
      hash = (37 * hash) + FAIL_IF_ZERO_VERSIONS_AT_STARTUP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getFailIfZeroVersionsAtStartup());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Config proto for FileSystemStoragePathSource.
     * </pre>
     *
     * Protobuf type {@code tensorflow.serving.FileSystemStoragePathSourceConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.serving.FileSystemStoragePathSourceConfig)
        tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.serving.FileSystemStoragePathSource.internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.serving.FileSystemStoragePathSource.internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.class, tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.Builder.class);
      }

      // Construct using tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getServablesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (servablesBuilder_ == null) {
          servables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          servablesBuilder_.clear();
        }
        servableName_ = "";

        basePath_ = "";

        fileSystemPollWaitSeconds_ = 0L;

        failIfZeroVersionsAtStartup_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.serving.FileSystemStoragePathSource.internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_descriptor;
      }

      public tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig getDefaultInstanceForType() {
        return tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.getDefaultInstance();
      }

      public tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig build() {
        tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig buildPartial() {
        tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig result = new tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (servablesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            servables_ = java.util.Collections.unmodifiableList(servables_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.servables_ = servables_;
        } else {
          result.servables_ = servablesBuilder_.build();
        }
        result.servableName_ = servableName_;
        result.basePath_ = basePath_;
        result.fileSystemPollWaitSeconds_ = fileSystemPollWaitSeconds_;
        result.failIfZeroVersionsAtStartup_ = failIfZeroVersionsAtStartup_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig) {
          return mergeFrom((tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig other) {
        if (other == tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.getDefaultInstance()) return this;
        if (servablesBuilder_ == null) {
          if (!other.servables_.isEmpty()) {
            if (servables_.isEmpty()) {
              servables_ = other.servables_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureServablesIsMutable();
              servables_.addAll(other.servables_);
            }
            onChanged();
          }
        } else {
          if (!other.servables_.isEmpty()) {
            if (servablesBuilder_.isEmpty()) {
              servablesBuilder_.dispose();
              servablesBuilder_ = null;
              servables_ = other.servables_;
              bitField0_ = (bitField0_ & ~0x00000001);
              servablesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getServablesFieldBuilder() : null;
            } else {
              servablesBuilder_.addAllMessages(other.servables_);
            }
          }
        }
        if (!other.getServableName().isEmpty()) {
          servableName_ = other.servableName_;
          onChanged();
        }
        if (!other.getBasePath().isEmpty()) {
          basePath_ = other.basePath_;
          onChanged();
        }
        if (other.getFileSystemPollWaitSeconds() != 0L) {
          setFileSystemPollWaitSeconds(other.getFileSystemPollWaitSeconds());
        }
        if (other.getFailIfZeroVersionsAtStartup() != false) {
          setFailIfZeroVersionsAtStartup(other.getFailIfZeroVersionsAtStartup());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor> servables_ =
        java.util.Collections.emptyList();
      private void ensureServablesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          servables_ = new java.util.ArrayList<tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor>(servables_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor, tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.Builder, tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitorOrBuilder> servablesBuilder_;

      /**
       * <pre>
       * The servables to monitor for new versions, and aspire.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
       */
      public java.util.List<tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor> getServablesList() {
        if (servablesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(servables_);
        } else {
          return servablesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The servables to monitor for new versions, and aspire.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
       */
      public int getServablesCount() {
        if (servablesBuilder_ == null) {
          return servables_.size();
        } else {
          return servablesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The servables to monitor for new versions, and aspire.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
       */
      public tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor getServables(int index) {
        if (servablesBuilder_ == null) {
          return servables_.get(index);
        } else {
          return servablesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The servables to monitor for new versions, and aspire.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
       */
      public Builder setServables(
          int index, tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor value) {
        if (servablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServablesIsMutable();
          servables_.set(index, value);
          onChanged();
        } else {
          servablesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The servables to monitor for new versions, and aspire.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
       */
      public Builder setServables(
          int index, tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.Builder builderForValue) {
        if (servablesBuilder_ == null) {
          ensureServablesIsMutable();
          servables_.set(index, builderForValue.build());
          onChanged();
        } else {
          servablesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The servables to monitor for new versions, and aspire.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
       */
      public Builder addServables(tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor value) {
        if (servablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServablesIsMutable();
          servables_.add(value);
          onChanged();
        } else {
          servablesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The servables to monitor for new versions, and aspire.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
       */
      public Builder addServables(
          int index, tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor value) {
        if (servablesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServablesIsMutable();
          servables_.add(index, value);
          onChanged();
        } else {
          servablesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The servables to monitor for new versions, and aspire.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
       */
      public Builder addServables(
          tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.Builder builderForValue) {
        if (servablesBuilder_ == null) {
          ensureServablesIsMutable();
          servables_.add(builderForValue.build());
          onChanged();
        } else {
          servablesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The servables to monitor for new versions, and aspire.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
       */
      public Builder addServables(
          int index, tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.Builder builderForValue) {
        if (servablesBuilder_ == null) {
          ensureServablesIsMutable();
          servables_.add(index, builderForValue.build());
          onChanged();
        } else {
          servablesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The servables to monitor for new versions, and aspire.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
       */
      public Builder addAllServables(
          java.lang.Iterable<? extends tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor> values) {
        if (servablesBuilder_ == null) {
          ensureServablesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, servables_);
          onChanged();
        } else {
          servablesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The servables to monitor for new versions, and aspire.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
       */
      public Builder clearServables() {
        if (servablesBuilder_ == null) {
          servables_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          servablesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The servables to monitor for new versions, and aspire.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
       */
      public Builder removeServables(int index) {
        if (servablesBuilder_ == null) {
          ensureServablesIsMutable();
          servables_.remove(index);
          onChanged();
        } else {
          servablesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The servables to monitor for new versions, and aspire.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
       */
      public tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.Builder getServablesBuilder(
          int index) {
        return getServablesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The servables to monitor for new versions, and aspire.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
       */
      public tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitorOrBuilder getServablesOrBuilder(
          int index) {
        if (servablesBuilder_ == null) {
          return servables_.get(index);  } else {
          return servablesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The servables to monitor for new versions, and aspire.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
       */
      public java.util.List<? extends tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitorOrBuilder> 
           getServablesOrBuilderList() {
        if (servablesBuilder_ != null) {
          return servablesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(servables_);
        }
      }
      /**
       * <pre>
       * The servables to monitor for new versions, and aspire.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
       */
      public tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.Builder addServablesBuilder() {
        return getServablesFieldBuilder().addBuilder(
            tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.getDefaultInstance());
      }
      /**
       * <pre>
       * The servables to monitor for new versions, and aspire.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
       */
      public tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.Builder addServablesBuilder(
          int index) {
        return getServablesFieldBuilder().addBuilder(
            index, tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.getDefaultInstance());
      }
      /**
       * <pre>
       * The servables to monitor for new versions, and aspire.
       * </pre>
       *
       * <code>repeated .tensorflow.serving.FileSystemStoragePathSourceConfig.ServableToMonitor servables = 5;</code>
       */
      public java.util.List<tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.Builder> 
           getServablesBuilderList() {
        return getServablesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor, tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.Builder, tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitorOrBuilder> 
          getServablesFieldBuilder() {
        if (servablesBuilder_ == null) {
          servablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor, tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitor.Builder, tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig.ServableToMonitorOrBuilder>(
                  servables_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          servables_ = null;
        }
        return servablesBuilder_;
      }

      private java.lang.Object servableName_ = "";
      /**
       * <pre>
       * A single servable name/base_path pair to monitor.
       * DEPRECATED: Use 'servables' instead.
       * TODO(b/30898016): Stop using these fields, and ultimately remove them here.
       * </pre>
       *
       * <code>string servable_name = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.lang.String getServableName() {
        java.lang.Object ref = servableName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          servableName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A single servable name/base_path pair to monitor.
       * DEPRECATED: Use 'servables' instead.
       * TODO(b/30898016): Stop using these fields, and ultimately remove them here.
       * </pre>
       *
       * <code>string servable_name = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public com.google.protobuf.ByteString
          getServableNameBytes() {
        java.lang.Object ref = servableName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          servableName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A single servable name/base_path pair to monitor.
       * DEPRECATED: Use 'servables' instead.
       * TODO(b/30898016): Stop using these fields, and ultimately remove them here.
       * </pre>
       *
       * <code>string servable_name = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setServableName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        servableName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A single servable name/base_path pair to monitor.
       * DEPRECATED: Use 'servables' instead.
       * TODO(b/30898016): Stop using these fields, and ultimately remove them here.
       * </pre>
       *
       * <code>string servable_name = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearServableName() {
        
        servableName_ = getDefaultInstance().getServableName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A single servable name/base_path pair to monitor.
       * DEPRECATED: Use 'servables' instead.
       * TODO(b/30898016): Stop using these fields, and ultimately remove them here.
       * </pre>
       *
       * <code>string servable_name = 1 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setServableNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        servableName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object basePath_ = "";
      /**
       * <code>string base_path = 2 [deprecated = true];</code>
       */
      @java.lang.Deprecated public java.lang.String getBasePath() {
        java.lang.Object ref = basePath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          basePath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string base_path = 2 [deprecated = true];</code>
       */
      @java.lang.Deprecated public com.google.protobuf.ByteString
          getBasePathBytes() {
        java.lang.Object ref = basePath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          basePath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string base_path = 2 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setBasePath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        basePath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string base_path = 2 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearBasePath() {
        
        basePath_ = getDefaultInstance().getBasePath();
        onChanged();
        return this;
      }
      /**
       * <code>string base_path = 2 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setBasePathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        basePath_ = value;
        onChanged();
        return this;
      }

      private long fileSystemPollWaitSeconds_ ;
      /**
       * <pre>
       * How long to wait between file-system polling to look for children of
       * 'base_path', in seconds.
       * For testing use only: a negative value disables the polling thread.
       * </pre>
       *
       * <code>int64 file_system_poll_wait_seconds = 3;</code>
       */
      public long getFileSystemPollWaitSeconds() {
        return fileSystemPollWaitSeconds_;
      }
      /**
       * <pre>
       * How long to wait between file-system polling to look for children of
       * 'base_path', in seconds.
       * For testing use only: a negative value disables the polling thread.
       * </pre>
       *
       * <code>int64 file_system_poll_wait_seconds = 3;</code>
       */
      public Builder setFileSystemPollWaitSeconds(long value) {
        
        fileSystemPollWaitSeconds_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * How long to wait between file-system polling to look for children of
       * 'base_path', in seconds.
       * For testing use only: a negative value disables the polling thread.
       * </pre>
       *
       * <code>int64 file_system_poll_wait_seconds = 3;</code>
       */
      public Builder clearFileSystemPollWaitSeconds() {
        
        fileSystemPollWaitSeconds_ = 0L;
        onChanged();
        return this;
      }

      private boolean failIfZeroVersionsAtStartup_ ;
      /**
       * <pre>
       * If true, then FileSystemStoragePathSource::Create() and ::UpdateConfig()
       * fail if, for any configured servables, the file system doesn't currently
       * contain at least one version under the base path.
       * (Otherwise, it will emit a warning and keep pinging the file system to
       * check for a version to appear later.)
       * </pre>
       *
       * <code>bool fail_if_zero_versions_at_startup = 4;</code>
       */
      public boolean getFailIfZeroVersionsAtStartup() {
        return failIfZeroVersionsAtStartup_;
      }
      /**
       * <pre>
       * If true, then FileSystemStoragePathSource::Create() and ::UpdateConfig()
       * fail if, for any configured servables, the file system doesn't currently
       * contain at least one version under the base path.
       * (Otherwise, it will emit a warning and keep pinging the file system to
       * check for a version to appear later.)
       * </pre>
       *
       * <code>bool fail_if_zero_versions_at_startup = 4;</code>
       */
      public Builder setFailIfZeroVersionsAtStartup(boolean value) {
        
        failIfZeroVersionsAtStartup_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, then FileSystemStoragePathSource::Create() and ::UpdateConfig()
       * fail if, for any configured servables, the file system doesn't currently
       * contain at least one version under the base path.
       * (Otherwise, it will emit a warning and keep pinging the file system to
       * check for a version to appear later.)
       * </pre>
       *
       * <code>bool fail_if_zero_versions_at_startup = 4;</code>
       */
      public Builder clearFailIfZeroVersionsAtStartup() {
        
        failIfZeroVersionsAtStartup_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.serving.FileSystemStoragePathSourceConfig)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.serving.FileSystemStoragePathSourceConfig)
    private static final tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig();
    }

    public static tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FileSystemStoragePathSourceConfig>
        PARSER = new com.google.protobuf.AbstractParser<FileSystemStoragePathSourceConfig>() {
      public FileSystemStoragePathSourceConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FileSystemStoragePathSourceConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FileSystemStoragePathSourceConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FileSystemStoragePathSourceConfig> getParserForType() {
      return PARSER;
    }

    public tensorflow.serving.FileSystemStoragePathSource.FileSystemStoragePathSourceConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_ServableToMonitor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_ServableToMonitor_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nMtensorflow_serving/sources/storage_pat" +
      "h/file_system_storage_path_source.proto\022" +
      "\022tensorflow.serving\"\326\003\n!FileSystemStorag" +
      "ePathSourceConfig\022Z\n\tservables\030\005 \003(\0132G.t" +
      "ensorflow.serving.FileSystemStoragePathS" +
      "ourceConfig.ServableToMonitor\022\031\n\rservabl" +
      "e_name\030\001 \001(\tB\002\030\001\022\025\n\tbase_path\030\002 \001(\tB\002\030\001\022" +
      "%\n\035file_system_poll_wait_seconds\030\003 \001(\003\022(" +
      "\n fail_if_zero_versions_at_startup\030\004 \001(\010" +
      "\032\232\001\n\021ServableToMonitor\022\025\n\rservable_name\030",
      "\001 \001(\t\022\021\n\tbase_path\030\002 \001(\t\022[\n\016version_poli" +
      "cy\030\003 \001(\0162C.tensorflow.serving.FileSystem" +
      "StoragePathSourceConfig.VersionPolicy\"5\n" +
      "\rVersionPolicy\022\022\n\016LATEST_VERSION\020\000\022\020\n\014AL" +
      "L_VERSIONS\020\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_descriptor,
        new java.lang.String[] { "Servables", "ServableName", "BasePath", "FileSystemPollWaitSeconds", "FailIfZeroVersionsAtStartup", });
    internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_ServableToMonitor_descriptor =
      internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_ServableToMonitor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_serving_FileSystemStoragePathSourceConfig_ServableToMonitor_descriptor,
        new java.lang.String[] { "ServableName", "BasePath", "VersionPolicy", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
