/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.tensorflow.TestResults');
goog.provide('proto.tensorflow.TestResults.BenchmarkType');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.tensorflow.BenchmarkEntries');
goog.require('proto.tensorflow.BuildConfiguration');
goog.require('proto.tensorflow.CommitId');
goog.require('proto.tensorflow.MachineConfiguration');
goog.require('proto.tensorflow.RunConfiguration');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.TestResults = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.TestResults, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.TestResults.displayName = 'proto.tensorflow.TestResults';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.TestResults.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.TestResults.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.TestResults} msg The msg instance to transform.
 * @return {!Object}
 */
proto.tensorflow.TestResults.toObject = function(includeInstance, msg) {
  var f, obj = {
    target: jspb.Message.getFieldWithDefault(msg, 1, ""),
    entries: (f = msg.getEntries()) && proto.tensorflow.BenchmarkEntries.toObject(includeInstance, f),
    buildConfiguration: (f = msg.getBuildConfiguration()) && proto.tensorflow.BuildConfiguration.toObject(includeInstance, f),
    commitId: (f = msg.getCommitId()) && proto.tensorflow.CommitId.toObject(includeInstance, f),
    startTime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    runTime: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    machineConfiguration: (f = msg.getMachineConfiguration()) && proto.tensorflow.MachineConfiguration.toObject(includeInstance, f),
    runConfiguration: (f = msg.getRunConfiguration()) && proto.tensorflow.RunConfiguration.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 9, ""),
    benchmarkType: jspb.Message.getFieldWithDefault(msg, 10, 0),
    runMode: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.TestResults}
 */
proto.tensorflow.TestResults.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.TestResults;
  return proto.tensorflow.TestResults.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.TestResults} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.TestResults}
 */
proto.tensorflow.TestResults.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTarget(value);
      break;
    case 2:
      var value = new proto.tensorflow.BenchmarkEntries;
      reader.readMessage(value,proto.tensorflow.BenchmarkEntries.deserializeBinaryFromReader);
      msg.setEntries(value);
      break;
    case 3:
      var value = new proto.tensorflow.BuildConfiguration;
      reader.readMessage(value,proto.tensorflow.BuildConfiguration.deserializeBinaryFromReader);
      msg.setBuildConfiguration(value);
      break;
    case 4:
      var value = new proto.tensorflow.CommitId;
      reader.readMessage(value,proto.tensorflow.CommitId.deserializeBinaryFromReader);
      msg.setCommitId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRunTime(value);
      break;
    case 7:
      var value = new proto.tensorflow.MachineConfiguration;
      reader.readMessage(value,proto.tensorflow.MachineConfiguration.deserializeBinaryFromReader);
      msg.setMachineConfiguration(value);
      break;
    case 8:
      var value = new proto.tensorflow.RunConfiguration;
      reader.readMessage(value,proto.tensorflow.RunConfiguration.deserializeBinaryFromReader);
      msg.setRunConfiguration(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 10:
      var value = /** @type {!proto.tensorflow.TestResults.BenchmarkType} */ (reader.readEnum());
      msg.setBenchmarkType(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setRunMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.TestResults.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.TestResults.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.TestResults} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.tensorflow.TestResults.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTarget();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEntries();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tensorflow.BenchmarkEntries.serializeBinaryToWriter
    );
  }
  f = message.getBuildConfiguration();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tensorflow.BuildConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getCommitId();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tensorflow.CommitId.serializeBinaryToWriter
    );
  }
  f = message.getStartTime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getRunTime();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getMachineConfiguration();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.tensorflow.MachineConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getRunConfiguration();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.tensorflow.RunConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getBenchmarkType();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getRunMode();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.tensorflow.TestResults.BenchmarkType = {
  UNKNOWN: 0,
  CPP_MICROBENCHMARK: 1,
  PYTHON_BENCHMARK: 2,
  ANDROID_BENCHMARK: 3
};

/**
 * optional string target = 1;
 * @return {string}
 */
proto.tensorflow.TestResults.prototype.getTarget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.TestResults.prototype.setTarget = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional BenchmarkEntries entries = 2;
 * @return {?proto.tensorflow.BenchmarkEntries}
 */
proto.tensorflow.TestResults.prototype.getEntries = function() {
  return /** @type{?proto.tensorflow.BenchmarkEntries} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.BenchmarkEntries, 2));
};


/** @param {?proto.tensorflow.BenchmarkEntries|undefined} value */
proto.tensorflow.TestResults.prototype.setEntries = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.tensorflow.TestResults.prototype.clearEntries = function() {
  this.setEntries(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.TestResults.prototype.hasEntries = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BuildConfiguration build_configuration = 3;
 * @return {?proto.tensorflow.BuildConfiguration}
 */
proto.tensorflow.TestResults.prototype.getBuildConfiguration = function() {
  return /** @type{?proto.tensorflow.BuildConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.BuildConfiguration, 3));
};


/** @param {?proto.tensorflow.BuildConfiguration|undefined} value */
proto.tensorflow.TestResults.prototype.setBuildConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.tensorflow.TestResults.prototype.clearBuildConfiguration = function() {
  this.setBuildConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.TestResults.prototype.hasBuildConfiguration = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CommitId commit_id = 4;
 * @return {?proto.tensorflow.CommitId}
 */
proto.tensorflow.TestResults.prototype.getCommitId = function() {
  return /** @type{?proto.tensorflow.CommitId} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.CommitId, 4));
};


/** @param {?proto.tensorflow.CommitId|undefined} value */
proto.tensorflow.TestResults.prototype.setCommitId = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.tensorflow.TestResults.prototype.clearCommitId = function() {
  this.setCommitId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.TestResults.prototype.hasCommitId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 start_time = 5;
 * @return {number}
 */
proto.tensorflow.TestResults.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.tensorflow.TestResults.prototype.setStartTime = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional double run_time = 6;
 * @return {number}
 */
proto.tensorflow.TestResults.prototype.getRunTime = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.tensorflow.TestResults.prototype.setRunTime = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional MachineConfiguration machine_configuration = 7;
 * @return {?proto.tensorflow.MachineConfiguration}
 */
proto.tensorflow.TestResults.prototype.getMachineConfiguration = function() {
  return /** @type{?proto.tensorflow.MachineConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.MachineConfiguration, 7));
};


/** @param {?proto.tensorflow.MachineConfiguration|undefined} value */
proto.tensorflow.TestResults.prototype.setMachineConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.tensorflow.TestResults.prototype.clearMachineConfiguration = function() {
  this.setMachineConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.TestResults.prototype.hasMachineConfiguration = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional RunConfiguration run_configuration = 8;
 * @return {?proto.tensorflow.RunConfiguration}
 */
proto.tensorflow.TestResults.prototype.getRunConfiguration = function() {
  return /** @type{?proto.tensorflow.RunConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.RunConfiguration, 8));
};


/** @param {?proto.tensorflow.RunConfiguration|undefined} value */
proto.tensorflow.TestResults.prototype.setRunConfiguration = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.tensorflow.TestResults.prototype.clearRunConfiguration = function() {
  this.setRunConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.TestResults.prototype.hasRunConfiguration = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string name = 9;
 * @return {string}
 */
proto.tensorflow.TestResults.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.tensorflow.TestResults.prototype.setName = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional BenchmarkType benchmark_type = 10;
 * @return {!proto.tensorflow.TestResults.BenchmarkType}
 */
proto.tensorflow.TestResults.prototype.getBenchmarkType = function() {
  return /** @type {!proto.tensorflow.TestResults.BenchmarkType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {!proto.tensorflow.TestResults.BenchmarkType} value */
proto.tensorflow.TestResults.prototype.setBenchmarkType = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional string run_mode = 11;
 * @return {string}
 */
proto.tensorflow.TestResults.prototype.getRunMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.tensorflow.TestResults.prototype.setRunMode = function(value) {
  jspb.Message.setField(this, 11, value);
};


