/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.tensorflow.MachineConfiguration');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.google.protobuf.Any');
goog.require('proto.tensorflow.AvailableDeviceInfo');
goog.require('proto.tensorflow.CPUInfo');
goog.require('proto.tensorflow.MemoryInfo');
goog.require('proto.tensorflow.PlatformInfo');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.MachineConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.MachineConfiguration.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.MachineConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.MachineConfiguration.displayName = 'proto.tensorflow.MachineConfiguration';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.MachineConfiguration.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.MachineConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.MachineConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.MachineConfiguration} msg The msg instance to transform.
 * @return {!Object}
 */
proto.tensorflow.MachineConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    hostname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    serialIdentifier: jspb.Message.getFieldWithDefault(msg, 7, ""),
    platformInfo: (f = msg.getPlatformInfo()) && proto.tensorflow.PlatformInfo.toObject(includeInstance, f),
    cpuInfo: (f = msg.getCpuInfo()) && proto.tensorflow.CPUInfo.toObject(includeInstance, f),
    deviceInfoList: jspb.Message.toObjectList(msg.getDeviceInfoList(),
    proto.google.protobuf.Any.toObject, includeInstance),
    availableDeviceInfoList: jspb.Message.toObjectList(msg.getAvailableDeviceInfoList(),
    proto.tensorflow.AvailableDeviceInfo.toObject, includeInstance),
    memoryInfo: (f = msg.getMemoryInfo()) && proto.tensorflow.MemoryInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.MachineConfiguration}
 */
proto.tensorflow.MachineConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.MachineConfiguration;
  return proto.tensorflow.MachineConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.MachineConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.MachineConfiguration}
 */
proto.tensorflow.MachineConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostname(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSerialIdentifier(value);
      break;
    case 2:
      var value = new proto.tensorflow.PlatformInfo;
      reader.readMessage(value,proto.tensorflow.PlatformInfo.deserializeBinaryFromReader);
      msg.setPlatformInfo(value);
      break;
    case 3:
      var value = new proto.tensorflow.CPUInfo;
      reader.readMessage(value,proto.tensorflow.CPUInfo.deserializeBinaryFromReader);
      msg.setCpuInfo(value);
      break;
    case 4:
      var value = new proto.google.protobuf.Any;
      reader.readMessage(value,proto.google.protobuf.Any.deserializeBinaryFromReader);
      msg.addDeviceInfo(value);
      break;
    case 5:
      var value = new proto.tensorflow.AvailableDeviceInfo;
      reader.readMessage(value,proto.tensorflow.AvailableDeviceInfo.deserializeBinaryFromReader);
      msg.addAvailableDeviceInfo(value);
      break;
    case 6:
      var value = new proto.tensorflow.MemoryInfo;
      reader.readMessage(value,proto.tensorflow.MemoryInfo.deserializeBinaryFromReader);
      msg.setMemoryInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.MachineConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.MachineConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.MachineConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.tensorflow.MachineConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHostname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSerialIdentifier();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPlatformInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tensorflow.PlatformInfo.serializeBinaryToWriter
    );
  }
  f = message.getCpuInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tensorflow.CPUInfo.serializeBinaryToWriter
    );
  }
  f = message.getDeviceInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.google.protobuf.Any.serializeBinaryToWriter
    );
  }
  f = message.getAvailableDeviceInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.tensorflow.AvailableDeviceInfo.serializeBinaryToWriter
    );
  }
  f = message.getMemoryInfo();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.tensorflow.MemoryInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string hostname = 1;
 * @return {string}
 */
proto.tensorflow.MachineConfiguration.prototype.getHostname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.MachineConfiguration.prototype.setHostname = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string serial_identifier = 7;
 * @return {string}
 */
proto.tensorflow.MachineConfiguration.prototype.getSerialIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.tensorflow.MachineConfiguration.prototype.setSerialIdentifier = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional PlatformInfo platform_info = 2;
 * @return {?proto.tensorflow.PlatformInfo}
 */
proto.tensorflow.MachineConfiguration.prototype.getPlatformInfo = function() {
  return /** @type{?proto.tensorflow.PlatformInfo} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.PlatformInfo, 2));
};


/** @param {?proto.tensorflow.PlatformInfo|undefined} value */
proto.tensorflow.MachineConfiguration.prototype.setPlatformInfo = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.tensorflow.MachineConfiguration.prototype.clearPlatformInfo = function() {
  this.setPlatformInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.MachineConfiguration.prototype.hasPlatformInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional CPUInfo cpu_info = 3;
 * @return {?proto.tensorflow.CPUInfo}
 */
proto.tensorflow.MachineConfiguration.prototype.getCpuInfo = function() {
  return /** @type{?proto.tensorflow.CPUInfo} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.CPUInfo, 3));
};


/** @param {?proto.tensorflow.CPUInfo|undefined} value */
proto.tensorflow.MachineConfiguration.prototype.setCpuInfo = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.tensorflow.MachineConfiguration.prototype.clearCpuInfo = function() {
  this.setCpuInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.MachineConfiguration.prototype.hasCpuInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated google.protobuf.Any device_info = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.google.protobuf.Any>}
 */
proto.tensorflow.MachineConfiguration.prototype.getDeviceInfoList = function() {
  return /** @type{!Array.<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.protobuf.Any, 4));
};


/** @param {!Array.<!proto.google.protobuf.Any>} value */
proto.tensorflow.MachineConfiguration.prototype.setDeviceInfoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.tensorflow.MachineConfiguration.prototype.addDeviceInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.google.protobuf.Any, opt_index);
};


proto.tensorflow.MachineConfiguration.prototype.clearDeviceInfoList = function() {
  this.setDeviceInfoList([]);
};


/**
 * repeated AvailableDeviceInfo available_device_info = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.tensorflow.AvailableDeviceInfo>}
 */
proto.tensorflow.MachineConfiguration.prototype.getAvailableDeviceInfoList = function() {
  return /** @type{!Array.<!proto.tensorflow.AvailableDeviceInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.AvailableDeviceInfo, 5));
};


/** @param {!Array.<!proto.tensorflow.AvailableDeviceInfo>} value */
proto.tensorflow.MachineConfiguration.prototype.setAvailableDeviceInfoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.tensorflow.AvailableDeviceInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.AvailableDeviceInfo}
 */
proto.tensorflow.MachineConfiguration.prototype.addAvailableDeviceInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.tensorflow.AvailableDeviceInfo, opt_index);
};


proto.tensorflow.MachineConfiguration.prototype.clearAvailableDeviceInfoList = function() {
  this.setAvailableDeviceInfoList([]);
};


/**
 * optional MemoryInfo memory_info = 6;
 * @return {?proto.tensorflow.MemoryInfo}
 */
proto.tensorflow.MachineConfiguration.prototype.getMemoryInfo = function() {
  return /** @type{?proto.tensorflow.MemoryInfo} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.MemoryInfo, 6));
};


/** @param {?proto.tensorflow.MemoryInfo|undefined} value */
proto.tensorflow.MachineConfiguration.prototype.setMemoryInfo = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.tensorflow.MachineConfiguration.prototype.clearMemoryInfo = function() {
  this.setMemoryInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.MachineConfiguration.prototype.hasMemoryInfo = function() {
  return jspb.Message.getField(this, 6) != null;
};


