/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.tensorflow.boosted_trees.trees.TreeNode');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit');
goog.require('proto.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit');
goog.require('proto.tensorflow.boosted_trees.trees.DenseFloatBinarySplit');
goog.require('proto.tensorflow.boosted_trees.trees.Leaf');
goog.require('proto.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft');
goog.require('proto.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight');
goog.require('proto.tensorflow.boosted_trees.trees.TreeNodeMetadata');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.boosted_trees.trees.TreeNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tensorflow.boosted_trees.trees.TreeNode.oneofGroups_);
};
goog.inherits(proto.tensorflow.boosted_trees.trees.TreeNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.boosted_trees.trees.TreeNode.displayName = 'proto.tensorflow.boosted_trees.trees.TreeNode';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tensorflow.boosted_trees.trees.TreeNode.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.NodeCase = {
  NODE_NOT_SET: 0,
  LEAF: 1,
  DENSE_FLOAT_BINARY_SPLIT: 2,
  SPARSE_FLOAT_BINARY_SPLIT_DEFAULT_LEFT: 3,
  SPARSE_FLOAT_BINARY_SPLIT_DEFAULT_RIGHT: 4,
  CATEGORICAL_ID_BINARY_SPLIT: 5,
  CATEGORICAL_ID_SET_MEMBERSHIP_BINARY_SPLIT: 6
};

/**
 * @return {proto.tensorflow.boosted_trees.trees.TreeNode.NodeCase}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.getNodeCase = function() {
  return /** @type {proto.tensorflow.boosted_trees.trees.TreeNode.NodeCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.boosted_trees.trees.TreeNode.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.boosted_trees.trees.TreeNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.boosted_trees.trees.TreeNode} msg The msg instance to transform.
 * @return {!Object}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    leaf: (f = msg.getLeaf()) && proto.tensorflow.boosted_trees.trees.Leaf.toObject(includeInstance, f),
    denseFloatBinarySplit: (f = msg.getDenseFloatBinarySplit()) && proto.tensorflow.boosted_trees.trees.DenseFloatBinarySplit.toObject(includeInstance, f),
    sparseFloatBinarySplitDefaultLeft: (f = msg.getSparseFloatBinarySplitDefaultLeft()) && proto.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft.toObject(includeInstance, f),
    sparseFloatBinarySplitDefaultRight: (f = msg.getSparseFloatBinarySplitDefaultRight()) && proto.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight.toObject(includeInstance, f),
    categoricalIdBinarySplit: (f = msg.getCategoricalIdBinarySplit()) && proto.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit.toObject(includeInstance, f),
    categoricalIdSetMembershipBinarySplit: (f = msg.getCategoricalIdSetMembershipBinarySplit()) && proto.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit.toObject(includeInstance, f),
    nodeMetadata: (f = msg.getNodeMetadata()) && proto.tensorflow.boosted_trees.trees.TreeNodeMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.boosted_trees.trees.TreeNode}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.boosted_trees.trees.TreeNode;
  return proto.tensorflow.boosted_trees.trees.TreeNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.boosted_trees.trees.TreeNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.boosted_trees.trees.TreeNode}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tensorflow.boosted_trees.trees.Leaf;
      reader.readMessage(value,proto.tensorflow.boosted_trees.trees.Leaf.deserializeBinaryFromReader);
      msg.setLeaf(value);
      break;
    case 2:
      var value = new proto.tensorflow.boosted_trees.trees.DenseFloatBinarySplit;
      reader.readMessage(value,proto.tensorflow.boosted_trees.trees.DenseFloatBinarySplit.deserializeBinaryFromReader);
      msg.setDenseFloatBinarySplit(value);
      break;
    case 3:
      var value = new proto.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft;
      reader.readMessage(value,proto.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft.deserializeBinaryFromReader);
      msg.setSparseFloatBinarySplitDefaultLeft(value);
      break;
    case 4:
      var value = new proto.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight;
      reader.readMessage(value,proto.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight.deserializeBinaryFromReader);
      msg.setSparseFloatBinarySplitDefaultRight(value);
      break;
    case 5:
      var value = new proto.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit;
      reader.readMessage(value,proto.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit.deserializeBinaryFromReader);
      msg.setCategoricalIdBinarySplit(value);
      break;
    case 6:
      var value = new proto.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit;
      reader.readMessage(value,proto.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit.deserializeBinaryFromReader);
      msg.setCategoricalIdSetMembershipBinarySplit(value);
      break;
    case 777:
      var value = new proto.tensorflow.boosted_trees.trees.TreeNodeMetadata;
      reader.readMessage(value,proto.tensorflow.boosted_trees.trees.TreeNodeMetadata.deserializeBinaryFromReader);
      msg.setNodeMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.boosted_trees.trees.TreeNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.boosted_trees.trees.TreeNode} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.tensorflow.boosted_trees.trees.TreeNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeaf();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tensorflow.boosted_trees.trees.Leaf.serializeBinaryToWriter
    );
  }
  f = message.getDenseFloatBinarySplit();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tensorflow.boosted_trees.trees.DenseFloatBinarySplit.serializeBinaryToWriter
    );
  }
  f = message.getSparseFloatBinarySplitDefaultLeft();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft.serializeBinaryToWriter
    );
  }
  f = message.getSparseFloatBinarySplitDefaultRight();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight.serializeBinaryToWriter
    );
  }
  f = message.getCategoricalIdBinarySplit();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit.serializeBinaryToWriter
    );
  }
  f = message.getCategoricalIdSetMembershipBinarySplit();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit.serializeBinaryToWriter
    );
  }
  f = message.getNodeMetadata();
  if (f != null) {
    writer.writeMessage(
      777,
      f,
      proto.tensorflow.boosted_trees.trees.TreeNodeMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional Leaf leaf = 1;
 * @return {?proto.tensorflow.boosted_trees.trees.Leaf}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.getLeaf = function() {
  return /** @type{?proto.tensorflow.boosted_trees.trees.Leaf} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.boosted_trees.trees.Leaf, 1));
};


/** @param {?proto.tensorflow.boosted_trees.trees.Leaf|undefined} value */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.setLeaf = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.tensorflow.boosted_trees.trees.TreeNode.oneofGroups_[0], value);
};


proto.tensorflow.boosted_trees.trees.TreeNode.prototype.clearLeaf = function() {
  this.setLeaf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.hasLeaf = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DenseFloatBinarySplit dense_float_binary_split = 2;
 * @return {?proto.tensorflow.boosted_trees.trees.DenseFloatBinarySplit}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.getDenseFloatBinarySplit = function() {
  return /** @type{?proto.tensorflow.boosted_trees.trees.DenseFloatBinarySplit} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.boosted_trees.trees.DenseFloatBinarySplit, 2));
};


/** @param {?proto.tensorflow.boosted_trees.trees.DenseFloatBinarySplit|undefined} value */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.setDenseFloatBinarySplit = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.tensorflow.boosted_trees.trees.TreeNode.oneofGroups_[0], value);
};


proto.tensorflow.boosted_trees.trees.TreeNode.prototype.clearDenseFloatBinarySplit = function() {
  this.setDenseFloatBinarySplit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.hasDenseFloatBinarySplit = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SparseFloatBinarySplitDefaultLeft sparse_float_binary_split_default_left = 3;
 * @return {?proto.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.getSparseFloatBinarySplitDefaultLeft = function() {
  return /** @type{?proto.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft, 3));
};


/** @param {?proto.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft|undefined} value */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.setSparseFloatBinarySplitDefaultLeft = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.tensorflow.boosted_trees.trees.TreeNode.oneofGroups_[0], value);
};


proto.tensorflow.boosted_trees.trees.TreeNode.prototype.clearSparseFloatBinarySplitDefaultLeft = function() {
  this.setSparseFloatBinarySplitDefaultLeft(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.hasSparseFloatBinarySplitDefaultLeft = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SparseFloatBinarySplitDefaultRight sparse_float_binary_split_default_right = 4;
 * @return {?proto.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.getSparseFloatBinarySplitDefaultRight = function() {
  return /** @type{?proto.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight, 4));
};


/** @param {?proto.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight|undefined} value */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.setSparseFloatBinarySplitDefaultRight = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.tensorflow.boosted_trees.trees.TreeNode.oneofGroups_[0], value);
};


proto.tensorflow.boosted_trees.trees.TreeNode.prototype.clearSparseFloatBinarySplitDefaultRight = function() {
  this.setSparseFloatBinarySplitDefaultRight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.hasSparseFloatBinarySplitDefaultRight = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CategoricalIdBinarySplit categorical_id_binary_split = 5;
 * @return {?proto.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.getCategoricalIdBinarySplit = function() {
  return /** @type{?proto.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit, 5));
};


/** @param {?proto.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit|undefined} value */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.setCategoricalIdBinarySplit = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.tensorflow.boosted_trees.trees.TreeNode.oneofGroups_[0], value);
};


proto.tensorflow.boosted_trees.trees.TreeNode.prototype.clearCategoricalIdBinarySplit = function() {
  this.setCategoricalIdBinarySplit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.hasCategoricalIdBinarySplit = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional CategoricalIdSetMembershipBinarySplit categorical_id_set_membership_binary_split = 6;
 * @return {?proto.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.getCategoricalIdSetMembershipBinarySplit = function() {
  return /** @type{?proto.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit, 6));
};


/** @param {?proto.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit|undefined} value */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.setCategoricalIdSetMembershipBinarySplit = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.tensorflow.boosted_trees.trees.TreeNode.oneofGroups_[0], value);
};


proto.tensorflow.boosted_trees.trees.TreeNode.prototype.clearCategoricalIdSetMembershipBinarySplit = function() {
  this.setCategoricalIdSetMembershipBinarySplit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.hasCategoricalIdSetMembershipBinarySplit = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional TreeNodeMetadata node_metadata = 777;
 * @return {?proto.tensorflow.boosted_trees.trees.TreeNodeMetadata}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.getNodeMetadata = function() {
  return /** @type{?proto.tensorflow.boosted_trees.trees.TreeNodeMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.boosted_trees.trees.TreeNodeMetadata, 777));
};


/** @param {?proto.tensorflow.boosted_trees.trees.TreeNodeMetadata|undefined} value */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.setNodeMetadata = function(value) {
  jspb.Message.setWrapperField(this, 777, value);
};


proto.tensorflow.boosted_trees.trees.TreeNode.prototype.clearNodeMetadata = function() {
  this.setNodeMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.boosted_trees.trees.TreeNode.prototype.hasNodeMetadata = function() {
  return jspb.Message.getField(this, 777) != null;
};


