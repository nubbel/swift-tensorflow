/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.tensorflow.tfprof.OptionsProto');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.tfprof.OptionsProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.tfprof.OptionsProto.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.tfprof.OptionsProto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.tfprof.OptionsProto.displayName = 'proto.tensorflow.tfprof.OptionsProto';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.tfprof.OptionsProto.repeatedFields_ = [8,9,10,11,12,14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.tfprof.OptionsProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.tfprof.OptionsProto} msg The msg instance to transform.
 * @return {!Object}
 */
proto.tensorflow.tfprof.OptionsProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxDepth: jspb.Message.getField(msg, 1),
    minBytes: jspb.Message.getField(msg, 2),
    minMicros: jspb.Message.getField(msg, 3),
    minParams: jspb.Message.getField(msg, 4),
    minFloatOps: jspb.Message.getField(msg, 5),
    minOccurrence: jspb.Message.getField(msg, 17),
    orderBy: jspb.Message.getField(msg, 7),
    accountTypeRegexesList: jspb.Message.getField(msg, 8),
    startNameRegexesList: jspb.Message.getField(msg, 9),
    trimNameRegexesList: jspb.Message.getField(msg, 10),
    showNameRegexesList: jspb.Message.getField(msg, 11),
    hideNameRegexesList: jspb.Message.getField(msg, 12),
    accountDisplayedOpOnly: jspb.Message.getField(msg, 13),
    selectList: jspb.Message.getField(msg, 14),
    output: jspb.Message.getField(msg, 15),
    dumpToFile: jspb.Message.getField(msg, 16)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.tfprof.OptionsProto}
 */
proto.tensorflow.tfprof.OptionsProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.tfprof.OptionsProto;
  return proto.tensorflow.tfprof.OptionsProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.tfprof.OptionsProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.tfprof.OptionsProto}
 */
proto.tensorflow.tfprof.OptionsProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxDepth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinBytes(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinMicros(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinParams(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinFloatOps(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinOccurrence(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderBy(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addAccountTypeRegexes(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addStartNameRegexes(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addTrimNameRegexes(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addShowNameRegexes(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addHideNameRegexes(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAccountDisplayedOpOnly(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addSelect(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutput(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setDumpToFile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.tfprof.OptionsProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.tfprof.OptionsProto} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.tensorflow.tfprof.OptionsProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeInt64(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAccountTypeRegexesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getStartNameRegexesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getTrimNameRegexesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getShowNameRegexesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getHideNameRegexesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getSelectList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional int64 max_depth = 1;
 * @return {number}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.getMaxDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.tfprof.OptionsProto.prototype.setMaxDepth = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.tensorflow.tfprof.OptionsProto.prototype.clearMaxDepth = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.hasMaxDepth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 min_bytes = 2;
 * @return {number}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.getMinBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tensorflow.tfprof.OptionsProto.prototype.setMinBytes = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.tensorflow.tfprof.OptionsProto.prototype.clearMinBytes = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.hasMinBytes = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 min_micros = 3;
 * @return {number}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.getMinMicros = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.tensorflow.tfprof.OptionsProto.prototype.setMinMicros = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.tensorflow.tfprof.OptionsProto.prototype.clearMinMicros = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.hasMinMicros = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 min_params = 4;
 * @return {number}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.getMinParams = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.tensorflow.tfprof.OptionsProto.prototype.setMinParams = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.tensorflow.tfprof.OptionsProto.prototype.clearMinParams = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.hasMinParams = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 min_float_ops = 5;
 * @return {number}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.getMinFloatOps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.tensorflow.tfprof.OptionsProto.prototype.setMinFloatOps = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.tensorflow.tfprof.OptionsProto.prototype.clearMinFloatOps = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.hasMinFloatOps = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int64 min_occurrence = 17;
 * @return {number}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.getMinOccurrence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.tensorflow.tfprof.OptionsProto.prototype.setMinOccurrence = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.tensorflow.tfprof.OptionsProto.prototype.clearMinOccurrence = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.hasMinOccurrence = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string order_by = 7;
 * @return {string}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.getOrderBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.tensorflow.tfprof.OptionsProto.prototype.setOrderBy = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.tensorflow.tfprof.OptionsProto.prototype.clearOrderBy = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.hasOrderBy = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated string account_type_regexes = 8;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.getAccountTypeRegexesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 8));
};


/** @param {!Array.<string>} value */
proto.tensorflow.tfprof.OptionsProto.prototype.setAccountTypeRegexesList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.tfprof.OptionsProto.prototype.addAccountTypeRegexes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.tensorflow.tfprof.OptionsProto.prototype.clearAccountTypeRegexesList = function() {
  this.setAccountTypeRegexesList([]);
};


/**
 * repeated string start_name_regexes = 9;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.getStartNameRegexesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 9));
};


/** @param {!Array.<string>} value */
proto.tensorflow.tfprof.OptionsProto.prototype.setStartNameRegexesList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.tfprof.OptionsProto.prototype.addStartNameRegexes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.tensorflow.tfprof.OptionsProto.prototype.clearStartNameRegexesList = function() {
  this.setStartNameRegexesList([]);
};


/**
 * repeated string trim_name_regexes = 10;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.getTrimNameRegexesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 10));
};


/** @param {!Array.<string>} value */
proto.tensorflow.tfprof.OptionsProto.prototype.setTrimNameRegexesList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.tfprof.OptionsProto.prototype.addTrimNameRegexes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.tensorflow.tfprof.OptionsProto.prototype.clearTrimNameRegexesList = function() {
  this.setTrimNameRegexesList([]);
};


/**
 * repeated string show_name_regexes = 11;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.getShowNameRegexesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 11));
};


/** @param {!Array.<string>} value */
proto.tensorflow.tfprof.OptionsProto.prototype.setShowNameRegexesList = function(value) {
  jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.tfprof.OptionsProto.prototype.addShowNameRegexes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


proto.tensorflow.tfprof.OptionsProto.prototype.clearShowNameRegexesList = function() {
  this.setShowNameRegexesList([]);
};


/**
 * repeated string hide_name_regexes = 12;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.getHideNameRegexesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 12));
};


/** @param {!Array.<string>} value */
proto.tensorflow.tfprof.OptionsProto.prototype.setHideNameRegexesList = function(value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.tfprof.OptionsProto.prototype.addHideNameRegexes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


proto.tensorflow.tfprof.OptionsProto.prototype.clearHideNameRegexesList = function() {
  this.setHideNameRegexesList([]);
};


/**
 * optional bool account_displayed_op_only = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.getAccountDisplayedOpOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.tensorflow.tfprof.OptionsProto.prototype.setAccountDisplayedOpOnly = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.tensorflow.tfprof.OptionsProto.prototype.clearAccountDisplayedOpOnly = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.hasAccountDisplayedOpOnly = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * repeated string select = 14;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.getSelectList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 14));
};


/** @param {!Array.<string>} value */
proto.tensorflow.tfprof.OptionsProto.prototype.setSelectList = function(value) {
  jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.tfprof.OptionsProto.prototype.addSelect = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


proto.tensorflow.tfprof.OptionsProto.prototype.clearSelectList = function() {
  this.setSelectList([]);
};


/**
 * optional string output = 15;
 * @return {string}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.getOutput = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.tensorflow.tfprof.OptionsProto.prototype.setOutput = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.tensorflow.tfprof.OptionsProto.prototype.clearOutput = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.hasOutput = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string dump_to_file = 16;
 * @return {string}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.getDumpToFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.tensorflow.tfprof.OptionsProto.prototype.setDumpToFile = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.tensorflow.tfprof.OptionsProto.prototype.clearDumpToFile = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.tfprof.OptionsProto.prototype.hasDumpToFile = function() {
  return jspb.Message.getField(this, 16) != null;
};


