/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.tensorflow.RunGraphRequest');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.tensorflow.ExecutorOpts');
goog.require('proto.tensorflow.NamedTensorProto');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.RunGraphRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.RunGraphRequest.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.RunGraphRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.RunGraphRequest.displayName = 'proto.tensorflow.RunGraphRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.RunGraphRequest.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.RunGraphRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.RunGraphRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.RunGraphRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.tensorflow.RunGraphRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionHandle: jspb.Message.getFieldWithDefault(msg, 8, ""),
    graphHandle: jspb.Message.getFieldWithDefault(msg, 1, ""),
    stepId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    execOpts: (f = msg.getExecOpts()) && proto.tensorflow.ExecutorOpts.toObject(includeInstance, f),
    sendList: jspb.Message.toObjectList(msg.getSendList(),
    proto.tensorflow.NamedTensorProto.toObject, includeInstance),
    recvKeyList: jspb.Message.getField(msg, 4),
    isPartial: jspb.Message.getFieldWithDefault(msg, 6, false),
    isLastPartialRun: jspb.Message.getFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.RunGraphRequest}
 */
proto.tensorflow.RunGraphRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.RunGraphRequest;
  return proto.tensorflow.RunGraphRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.RunGraphRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.RunGraphRequest}
 */
proto.tensorflow.RunGraphRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionHandle(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGraphHandle(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStepId(value);
      break;
    case 5:
      var value = new proto.tensorflow.ExecutorOpts;
      reader.readMessage(value,proto.tensorflow.ExecutorOpts.deserializeBinaryFromReader);
      msg.setExecOpts(value);
      break;
    case 3:
      var value = new proto.tensorflow.NamedTensorProto;
      reader.readMessage(value,proto.tensorflow.NamedTensorProto.deserializeBinaryFromReader);
      msg.addSend(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecvKey(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPartial(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsLastPartialRun(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.RunGraphRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.RunGraphRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.RunGraphRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.tensorflow.RunGraphRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionHandle();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getGraphHandle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStepId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getExecOpts();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.tensorflow.ExecutorOpts.serializeBinaryToWriter
    );
  }
  f = message.getSendList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.tensorflow.NamedTensorProto.serializeBinaryToWriter
    );
  }
  f = message.getRecvKeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getIsPartial();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsLastPartialRun();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string session_handle = 8;
 * @return {string}
 */
proto.tensorflow.RunGraphRequest.prototype.getSessionHandle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.tensorflow.RunGraphRequest.prototype.setSessionHandle = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional string graph_handle = 1;
 * @return {string}
 */
proto.tensorflow.RunGraphRequest.prototype.getGraphHandle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.RunGraphRequest.prototype.setGraphHandle = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 step_id = 2;
 * @return {number}
 */
proto.tensorflow.RunGraphRequest.prototype.getStepId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tensorflow.RunGraphRequest.prototype.setStepId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional ExecutorOpts exec_opts = 5;
 * @return {?proto.tensorflow.ExecutorOpts}
 */
proto.tensorflow.RunGraphRequest.prototype.getExecOpts = function() {
  return /** @type{?proto.tensorflow.ExecutorOpts} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.ExecutorOpts, 5));
};


/** @param {?proto.tensorflow.ExecutorOpts|undefined} value */
proto.tensorflow.RunGraphRequest.prototype.setExecOpts = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.tensorflow.RunGraphRequest.prototype.clearExecOpts = function() {
  this.setExecOpts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.RunGraphRequest.prototype.hasExecOpts = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated NamedTensorProto send = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.tensorflow.NamedTensorProto>}
 */
proto.tensorflow.RunGraphRequest.prototype.getSendList = function() {
  return /** @type{!Array.<!proto.tensorflow.NamedTensorProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.NamedTensorProto, 3));
};


/** @param {!Array.<!proto.tensorflow.NamedTensorProto>} value */
proto.tensorflow.RunGraphRequest.prototype.setSendList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.tensorflow.NamedTensorProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.NamedTensorProto}
 */
proto.tensorflow.RunGraphRequest.prototype.addSend = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.tensorflow.NamedTensorProto, opt_index);
};


proto.tensorflow.RunGraphRequest.prototype.clearSendList = function() {
  this.setSendList([]);
};


/**
 * repeated string recv_key = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.tensorflow.RunGraphRequest.prototype.getRecvKeyList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 4));
};


/** @param {!Array.<string>} value */
proto.tensorflow.RunGraphRequest.prototype.setRecvKeyList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.tensorflow.RunGraphRequest.prototype.addRecvKey = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.tensorflow.RunGraphRequest.prototype.clearRecvKeyList = function() {
  this.setRecvKeyList([]);
};


/**
 * optional bool is_partial = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.RunGraphRequest.prototype.getIsPartial = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.tensorflow.RunGraphRequest.prototype.setIsPartial = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional bool is_last_partial_run = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.RunGraphRequest.prototype.getIsLastPartialRun = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.tensorflow.RunGraphRequest.prototype.setIsLastPartialRun = function(value) {
  jspb.Message.setField(this, 7, value);
};


