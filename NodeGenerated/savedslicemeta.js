/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.tensorflow.SavedSliceMeta');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.tensorflow.TensorShapeProto');
goog.require('proto.tensorflow.TensorSliceProto');

goog.forwardDeclare('proto.tensorflow.DataType');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.SavedSliceMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.SavedSliceMeta.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.SavedSliceMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.SavedSliceMeta.displayName = 'proto.tensorflow.SavedSliceMeta';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.SavedSliceMeta.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.SavedSliceMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.SavedSliceMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.SavedSliceMeta} msg The msg instance to transform.
 * @return {!Object}
 */
proto.tensorflow.SavedSliceMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    shape: (f = msg.getShape()) && proto.tensorflow.TensorShapeProto.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    sliceList: jspb.Message.toObjectList(msg.getSliceList(),
    proto.tensorflow.TensorSliceProto.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.SavedSliceMeta}
 */
proto.tensorflow.SavedSliceMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.SavedSliceMeta;
  return proto.tensorflow.SavedSliceMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.SavedSliceMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.SavedSliceMeta}
 */
proto.tensorflow.SavedSliceMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.tensorflow.TensorShapeProto;
      reader.readMessage(value,proto.tensorflow.TensorShapeProto.deserializeBinaryFromReader);
      msg.setShape(value);
      break;
    case 3:
      var value = /** @type {!proto.tensorflow.DataType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = new proto.tensorflow.TensorSliceProto;
      reader.readMessage(value,proto.tensorflow.TensorSliceProto.deserializeBinaryFromReader);
      msg.addSlice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.SavedSliceMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.SavedSliceMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.SavedSliceMeta} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.tensorflow.SavedSliceMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getShape();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tensorflow.TensorShapeProto.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getSliceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.tensorflow.TensorSliceProto.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.tensorflow.SavedSliceMeta.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.SavedSliceMeta.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional TensorShapeProto shape = 2;
 * @return {?proto.tensorflow.TensorShapeProto}
 */
proto.tensorflow.SavedSliceMeta.prototype.getShape = function() {
  return /** @type{?proto.tensorflow.TensorShapeProto} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.TensorShapeProto, 2));
};


/** @param {?proto.tensorflow.TensorShapeProto|undefined} value */
proto.tensorflow.SavedSliceMeta.prototype.setShape = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.tensorflow.SavedSliceMeta.prototype.clearShape = function() {
  this.setShape(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.SavedSliceMeta.prototype.hasShape = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DataType type = 3;
 * @return {!proto.tensorflow.DataType}
 */
proto.tensorflow.SavedSliceMeta.prototype.getType = function() {
  return /** @type {!proto.tensorflow.DataType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.tensorflow.DataType} value */
proto.tensorflow.SavedSliceMeta.prototype.setType = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated TensorSliceProto slice = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.tensorflow.TensorSliceProto>}
 */
proto.tensorflow.SavedSliceMeta.prototype.getSliceList = function() {
  return /** @type{!Array.<!proto.tensorflow.TensorSliceProto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.TensorSliceProto, 4));
};


/** @param {!Array.<!proto.tensorflow.TensorSliceProto>} value */
proto.tensorflow.SavedSliceMeta.prototype.setSliceList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.tensorflow.TensorSliceProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.TensorSliceProto}
 */
proto.tensorflow.SavedSliceMeta.prototype.addSlice = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.tensorflow.TensorSliceProto, opt_index);
};


proto.tensorflow.SavedSliceMeta.prototype.clearSliceList = function() {
  this.setSliceList([]);
};


