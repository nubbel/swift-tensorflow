/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.tensorflow.CostGraphDef');
goog.provide('proto.tensorflow.CostGraphDef.Node');
goog.provide('proto.tensorflow.CostGraphDef.Node.InputInfo');
goog.provide('proto.tensorflow.CostGraphDef.Node.OutputInfo');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.tensorflow.TensorShapeProto');

goog.forwardDeclare('proto.tensorflow.DataType');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.CostGraphDef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.CostGraphDef.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.CostGraphDef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.CostGraphDef.displayName = 'proto.tensorflow.CostGraphDef';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.CostGraphDef.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.CostGraphDef.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.CostGraphDef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.CostGraphDef} msg The msg instance to transform.
 * @return {!Object}
 */
proto.tensorflow.CostGraphDef.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeList: jspb.Message.toObjectList(msg.getNodeList(),
    proto.tensorflow.CostGraphDef.Node.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.CostGraphDef}
 */
proto.tensorflow.CostGraphDef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.CostGraphDef;
  return proto.tensorflow.CostGraphDef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.CostGraphDef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.CostGraphDef}
 */
proto.tensorflow.CostGraphDef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tensorflow.CostGraphDef.Node;
      reader.readMessage(value,proto.tensorflow.CostGraphDef.Node.deserializeBinaryFromReader);
      msg.addNode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.CostGraphDef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.CostGraphDef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.CostGraphDef} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.tensorflow.CostGraphDef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tensorflow.CostGraphDef.Node.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.CostGraphDef.Node = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.CostGraphDef.Node.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.CostGraphDef.Node, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.CostGraphDef.Node.displayName = 'proto.tensorflow.CostGraphDef.Node';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.CostGraphDef.Node.repeatedFields_ = [4,5,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.CostGraphDef.Node.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.CostGraphDef.Node.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.CostGraphDef.Node} msg The msg instance to transform.
 * @return {!Object}
 */
proto.tensorflow.CostGraphDef.Node.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    device: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, 0),
    inputInfoList: jspb.Message.toObjectList(msg.getInputInfoList(),
    proto.tensorflow.CostGraphDef.Node.InputInfo.toObject, includeInstance),
    outputInfoList: jspb.Message.toObjectList(msg.getOutputInfoList(),
    proto.tensorflow.CostGraphDef.Node.OutputInfo.toObject, includeInstance),
    temporaryMemorySize: jspb.Message.getFieldWithDefault(msg, 6, 0),
    hostTempMemorySize: jspb.Message.getFieldWithDefault(msg, 10, 0),
    deviceTempMemorySize: jspb.Message.getFieldWithDefault(msg, 11, 0),
    hostPersistentMemorySize: jspb.Message.getFieldWithDefault(msg, 12, 0),
    devicePersistentMemorySize: jspb.Message.getFieldWithDefault(msg, 16, 0),
    computeCost: jspb.Message.getFieldWithDefault(msg, 9, 0),
    computeTime: jspb.Message.getFieldWithDefault(msg, 14, 0),
    memoryTime: jspb.Message.getFieldWithDefault(msg, 15, 0),
    isFinal: jspb.Message.getFieldWithDefault(msg, 7, false),
    controlInputList: jspb.Message.getField(msg, 8)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.CostGraphDef.Node}
 */
proto.tensorflow.CostGraphDef.Node.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.CostGraphDef.Node;
  return proto.tensorflow.CostGraphDef.Node.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.CostGraphDef.Node} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.CostGraphDef.Node}
 */
proto.tensorflow.CostGraphDef.Node.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 4:
      var value = new proto.tensorflow.CostGraphDef.Node.InputInfo;
      reader.readMessage(value,proto.tensorflow.CostGraphDef.Node.InputInfo.deserializeBinaryFromReader);
      msg.addInputInfo(value);
      break;
    case 5:
      var value = new proto.tensorflow.CostGraphDef.Node.OutputInfo;
      reader.readMessage(value,proto.tensorflow.CostGraphDef.Node.OutputInfo.deserializeBinaryFromReader);
      msg.addOutputInfo(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTemporaryMemorySize(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHostTempMemorySize(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDeviceTempMemorySize(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHostPersistentMemorySize(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDevicePersistentMemorySize(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setComputeCost(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setComputeTime(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMemoryTime(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsFinal(value);
      break;
    case 8:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
      msg.setControlInputList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.CostGraphDef.Node.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.CostGraphDef.Node.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.CostGraphDef.Node} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.tensorflow.CostGraphDef.Node.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDevice();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getInputInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.tensorflow.CostGraphDef.Node.InputInfo.serializeBinaryToWriter
    );
  }
  f = message.getOutputInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.tensorflow.CostGraphDef.Node.OutputInfo.serializeBinaryToWriter
    );
  }
  f = message.getTemporaryMemorySize();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getHostTempMemorySize();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getDeviceTempMemorySize();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getHostPersistentMemorySize();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getDevicePersistentMemorySize();
  if (f !== 0) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = message.getComputeCost();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getComputeTime();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getMemoryTime();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = message.getIsFinal();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getControlInputList();
  if (f.length > 0) {
    writer.writePackedInt32(
      8,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.CostGraphDef.Node.InputInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.CostGraphDef.Node.InputInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.CostGraphDef.Node.InputInfo.displayName = 'proto.tensorflow.CostGraphDef.Node.InputInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.CostGraphDef.Node.InputInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.CostGraphDef.Node.InputInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.CostGraphDef.Node.InputInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.tensorflow.CostGraphDef.Node.InputInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    precedingNode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    precedingPort: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.CostGraphDef.Node.InputInfo}
 */
proto.tensorflow.CostGraphDef.Node.InputInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.CostGraphDef.Node.InputInfo;
  return proto.tensorflow.CostGraphDef.Node.InputInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.CostGraphDef.Node.InputInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.CostGraphDef.Node.InputInfo}
 */
proto.tensorflow.CostGraphDef.Node.InputInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrecedingNode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrecedingPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.CostGraphDef.Node.InputInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.CostGraphDef.Node.InputInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.CostGraphDef.Node.InputInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.tensorflow.CostGraphDef.Node.InputInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrecedingNode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPrecedingPort();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 preceding_node = 1;
 * @return {number}
 */
proto.tensorflow.CostGraphDef.Node.InputInfo.prototype.getPrecedingNode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.CostGraphDef.Node.InputInfo.prototype.setPrecedingNode = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 preceding_port = 2;
 * @return {number}
 */
proto.tensorflow.CostGraphDef.Node.InputInfo.prototype.getPrecedingPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tensorflow.CostGraphDef.Node.InputInfo.prototype.setPrecedingPort = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.CostGraphDef.Node.OutputInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.CostGraphDef.Node.OutputInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.CostGraphDef.Node.OutputInfo.displayName = 'proto.tensorflow.CostGraphDef.Node.OutputInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.CostGraphDef.Node.OutputInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.CostGraphDef.Node.OutputInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.CostGraphDef.Node.OutputInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.tensorflow.CostGraphDef.Node.OutputInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    size: jspb.Message.getFieldWithDefault(msg, 1, 0),
    aliasInputPort: jspb.Message.getFieldWithDefault(msg, 2, 0),
    shape: (f = msg.getShape()) && proto.tensorflow.TensorShapeProto.toObject(includeInstance, f),
    dtype: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.CostGraphDef.Node.OutputInfo}
 */
proto.tensorflow.CostGraphDef.Node.OutputInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.CostGraphDef.Node.OutputInfo;
  return proto.tensorflow.CostGraphDef.Node.OutputInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.CostGraphDef.Node.OutputInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.CostGraphDef.Node.OutputInfo}
 */
proto.tensorflow.CostGraphDef.Node.OutputInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAliasInputPort(value);
      break;
    case 3:
      var value = new proto.tensorflow.TensorShapeProto;
      reader.readMessage(value,proto.tensorflow.TensorShapeProto.deserializeBinaryFromReader);
      msg.setShape(value);
      break;
    case 4:
      var value = /** @type {!proto.tensorflow.DataType} */ (reader.readEnum());
      msg.setDtype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.CostGraphDef.Node.OutputInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.CostGraphDef.Node.OutputInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.CostGraphDef.Node.OutputInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.tensorflow.CostGraphDef.Node.OutputInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getAliasInputPort();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getShape();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tensorflow.TensorShapeProto.serializeBinaryToWriter
    );
  }
  f = message.getDtype();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional int64 size = 1;
 * @return {number}
 */
proto.tensorflow.CostGraphDef.Node.OutputInfo.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.CostGraphDef.Node.OutputInfo.prototype.setSize = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 alias_input_port = 2;
 * @return {number}
 */
proto.tensorflow.CostGraphDef.Node.OutputInfo.prototype.getAliasInputPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.tensorflow.CostGraphDef.Node.OutputInfo.prototype.setAliasInputPort = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional TensorShapeProto shape = 3;
 * @return {?proto.tensorflow.TensorShapeProto}
 */
proto.tensorflow.CostGraphDef.Node.OutputInfo.prototype.getShape = function() {
  return /** @type{?proto.tensorflow.TensorShapeProto} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.TensorShapeProto, 3));
};


/** @param {?proto.tensorflow.TensorShapeProto|undefined} value */
proto.tensorflow.CostGraphDef.Node.OutputInfo.prototype.setShape = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.tensorflow.CostGraphDef.Node.OutputInfo.prototype.clearShape = function() {
  this.setShape(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.CostGraphDef.Node.OutputInfo.prototype.hasShape = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DataType dtype = 4;
 * @return {!proto.tensorflow.DataType}
 */
proto.tensorflow.CostGraphDef.Node.OutputInfo.prototype.getDtype = function() {
  return /** @type {!proto.tensorflow.DataType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.tensorflow.DataType} value */
proto.tensorflow.CostGraphDef.Node.OutputInfo.prototype.setDtype = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.tensorflow.CostGraphDef.Node.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.CostGraphDef.Node.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string device = 2;
 * @return {string}
 */
proto.tensorflow.CostGraphDef.Node.prototype.getDevice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tensorflow.CostGraphDef.Node.prototype.setDevice = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 id = 3;
 * @return {number}
 */
proto.tensorflow.CostGraphDef.Node.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.tensorflow.CostGraphDef.Node.prototype.setId = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * repeated InputInfo input_info = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.tensorflow.CostGraphDef.Node.InputInfo>}
 */
proto.tensorflow.CostGraphDef.Node.prototype.getInputInfoList = function() {
  return /** @type{!Array.<!proto.tensorflow.CostGraphDef.Node.InputInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.CostGraphDef.Node.InputInfo, 4));
};


/** @param {!Array.<!proto.tensorflow.CostGraphDef.Node.InputInfo>} value */
proto.tensorflow.CostGraphDef.Node.prototype.setInputInfoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.tensorflow.CostGraphDef.Node.InputInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.CostGraphDef.Node.InputInfo}
 */
proto.tensorflow.CostGraphDef.Node.prototype.addInputInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.tensorflow.CostGraphDef.Node.InputInfo, opt_index);
};


proto.tensorflow.CostGraphDef.Node.prototype.clearInputInfoList = function() {
  this.setInputInfoList([]);
};


/**
 * repeated OutputInfo output_info = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.tensorflow.CostGraphDef.Node.OutputInfo>}
 */
proto.tensorflow.CostGraphDef.Node.prototype.getOutputInfoList = function() {
  return /** @type{!Array.<!proto.tensorflow.CostGraphDef.Node.OutputInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.CostGraphDef.Node.OutputInfo, 5));
};


/** @param {!Array.<!proto.tensorflow.CostGraphDef.Node.OutputInfo>} value */
proto.tensorflow.CostGraphDef.Node.prototype.setOutputInfoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.tensorflow.CostGraphDef.Node.OutputInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.CostGraphDef.Node.OutputInfo}
 */
proto.tensorflow.CostGraphDef.Node.prototype.addOutputInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.tensorflow.CostGraphDef.Node.OutputInfo, opt_index);
};


proto.tensorflow.CostGraphDef.Node.prototype.clearOutputInfoList = function() {
  this.setOutputInfoList([]);
};


/**
 * optional int64 temporary_memory_size = 6;
 * @return {number}
 */
proto.tensorflow.CostGraphDef.Node.prototype.getTemporaryMemorySize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.tensorflow.CostGraphDef.Node.prototype.setTemporaryMemorySize = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional int64 host_temp_memory_size = 10;
 * @return {number}
 */
proto.tensorflow.CostGraphDef.Node.prototype.getHostTempMemorySize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.tensorflow.CostGraphDef.Node.prototype.setHostTempMemorySize = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional int64 device_temp_memory_size = 11;
 * @return {number}
 */
proto.tensorflow.CostGraphDef.Node.prototype.getDeviceTempMemorySize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.tensorflow.CostGraphDef.Node.prototype.setDeviceTempMemorySize = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional int64 host_persistent_memory_size = 12;
 * @return {number}
 */
proto.tensorflow.CostGraphDef.Node.prototype.getHostPersistentMemorySize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.tensorflow.CostGraphDef.Node.prototype.setHostPersistentMemorySize = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional int64 device_persistent_memory_size = 16;
 * @return {number}
 */
proto.tensorflow.CostGraphDef.Node.prototype.getDevicePersistentMemorySize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.tensorflow.CostGraphDef.Node.prototype.setDevicePersistentMemorySize = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * optional int64 compute_cost = 9;
 * @return {number}
 */
proto.tensorflow.CostGraphDef.Node.prototype.getComputeCost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.tensorflow.CostGraphDef.Node.prototype.setComputeCost = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional int64 compute_time = 14;
 * @return {number}
 */
proto.tensorflow.CostGraphDef.Node.prototype.getComputeTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.tensorflow.CostGraphDef.Node.prototype.setComputeTime = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * optional int64 memory_time = 15;
 * @return {number}
 */
proto.tensorflow.CostGraphDef.Node.prototype.getMemoryTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.tensorflow.CostGraphDef.Node.prototype.setMemoryTime = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * optional bool is_final = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.CostGraphDef.Node.prototype.getIsFinal = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.tensorflow.CostGraphDef.Node.prototype.setIsFinal = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * repeated int32 control_input = 8;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.tensorflow.CostGraphDef.Node.prototype.getControlInputList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 8));
};


/** @param {!Array.<number>} value */
proto.tensorflow.CostGraphDef.Node.prototype.setControlInputList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.tensorflow.CostGraphDef.Node.prototype.addControlInput = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.tensorflow.CostGraphDef.Node.prototype.clearControlInputList = function() {
  this.setControlInputList([]);
};


/**
 * repeated Node node = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.tensorflow.CostGraphDef.Node>}
 */
proto.tensorflow.CostGraphDef.prototype.getNodeList = function() {
  return /** @type{!Array.<!proto.tensorflow.CostGraphDef.Node>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.CostGraphDef.Node, 1));
};


/** @param {!Array.<!proto.tensorflow.CostGraphDef.Node>} value */
proto.tensorflow.CostGraphDef.prototype.setNodeList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tensorflow.CostGraphDef.Node=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.CostGraphDef.Node}
 */
proto.tensorflow.CostGraphDef.prototype.addNode = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tensorflow.CostGraphDef.Node, opt_index);
};


proto.tensorflow.CostGraphDef.prototype.clearNodeList = function() {
  this.setNodeList([]);
};


