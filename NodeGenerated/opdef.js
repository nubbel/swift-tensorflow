/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.tensorflow.OpDef');
goog.provide('proto.tensorflow.OpDef.ArgDef');
goog.provide('proto.tensorflow.OpDef.AttrDef');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.tensorflow.AttrValue');
goog.require('proto.tensorflow.OpDeprecation');

goog.forwardDeclare('proto.tensorflow.DataType');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.OpDef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.OpDef.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.OpDef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.OpDef.displayName = 'proto.tensorflow.OpDef';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.OpDef.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.OpDef.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.OpDef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.OpDef} msg The msg instance to transform.
 * @return {!Object}
 */
proto.tensorflow.OpDef.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    inputArgList: jspb.Message.toObjectList(msg.getInputArgList(),
    proto.tensorflow.OpDef.ArgDef.toObject, includeInstance),
    outputArgList: jspb.Message.toObjectList(msg.getOutputArgList(),
    proto.tensorflow.OpDef.ArgDef.toObject, includeInstance),
    attrList: jspb.Message.toObjectList(msg.getAttrList(),
    proto.tensorflow.OpDef.AttrDef.toObject, includeInstance),
    deprecation: (f = msg.getDeprecation()) && proto.tensorflow.OpDeprecation.toObject(includeInstance, f),
    summary: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    isCommutative: jspb.Message.getFieldWithDefault(msg, 18, false),
    isAggregate: jspb.Message.getFieldWithDefault(msg, 16, false),
    isStateful: jspb.Message.getFieldWithDefault(msg, 17, false),
    allowsUninitializedInput: jspb.Message.getFieldWithDefault(msg, 19, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.OpDef}
 */
proto.tensorflow.OpDef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.OpDef;
  return proto.tensorflow.OpDef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.OpDef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.OpDef}
 */
proto.tensorflow.OpDef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.tensorflow.OpDef.ArgDef;
      reader.readMessage(value,proto.tensorflow.OpDef.ArgDef.deserializeBinaryFromReader);
      msg.addInputArg(value);
      break;
    case 3:
      var value = new proto.tensorflow.OpDef.ArgDef;
      reader.readMessage(value,proto.tensorflow.OpDef.ArgDef.deserializeBinaryFromReader);
      msg.addOutputArg(value);
      break;
    case 4:
      var value = new proto.tensorflow.OpDef.AttrDef;
      reader.readMessage(value,proto.tensorflow.OpDef.AttrDef.deserializeBinaryFromReader);
      msg.addAttr(value);
      break;
    case 8:
      var value = new proto.tensorflow.OpDeprecation;
      reader.readMessage(value,proto.tensorflow.OpDeprecation.deserializeBinaryFromReader);
      msg.setDeprecation(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummary(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCommutative(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAggregate(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsStateful(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowsUninitializedInput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.OpDef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.OpDef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.OpDef} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.tensorflow.OpDef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInputArgList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.tensorflow.OpDef.ArgDef.serializeBinaryToWriter
    );
  }
  f = message.getOutputArgList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.tensorflow.OpDef.ArgDef.serializeBinaryToWriter
    );
  }
  f = message.getAttrList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.tensorflow.OpDef.AttrDef.serializeBinaryToWriter
    );
  }
  f = message.getDeprecation();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.tensorflow.OpDeprecation.serializeBinaryToWriter
    );
  }
  f = message.getSummary();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsCommutative();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getIsAggregate();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getIsStateful();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getAllowsUninitializedInput();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.OpDef.ArgDef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.OpDef.ArgDef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.OpDef.ArgDef.displayName = 'proto.tensorflow.OpDef.ArgDef';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.OpDef.ArgDef.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.OpDef.ArgDef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.OpDef.ArgDef} msg The msg instance to transform.
 * @return {!Object}
 */
proto.tensorflow.OpDef.ArgDef.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    typeAttr: jspb.Message.getFieldWithDefault(msg, 4, ""),
    numberAttr: jspb.Message.getFieldWithDefault(msg, 5, ""),
    typeListAttr: jspb.Message.getFieldWithDefault(msg, 6, ""),
    isRef: jspb.Message.getFieldWithDefault(msg, 16, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.OpDef.ArgDef}
 */
proto.tensorflow.OpDef.ArgDef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.OpDef.ArgDef;
  return proto.tensorflow.OpDef.ArgDef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.OpDef.ArgDef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.OpDef.ArgDef}
 */
proto.tensorflow.OpDef.ArgDef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {!proto.tensorflow.DataType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeAttr(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNumberAttr(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeListAttr(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRef(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.OpDef.ArgDef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.OpDef.ArgDef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.OpDef.ArgDef} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.tensorflow.OpDef.ArgDef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getTypeAttr();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNumberAttr();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTypeListAttr();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsRef();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.tensorflow.OpDef.ArgDef.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.OpDef.ArgDef.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.tensorflow.OpDef.ArgDef.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tensorflow.OpDef.ArgDef.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional DataType type = 3;
 * @return {!proto.tensorflow.DataType}
 */
proto.tensorflow.OpDef.ArgDef.prototype.getType = function() {
  return /** @type {!proto.tensorflow.DataType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.tensorflow.DataType} value */
proto.tensorflow.OpDef.ArgDef.prototype.setType = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string type_attr = 4;
 * @return {string}
 */
proto.tensorflow.OpDef.ArgDef.prototype.getTypeAttr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.tensorflow.OpDef.ArgDef.prototype.setTypeAttr = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string number_attr = 5;
 * @return {string}
 */
proto.tensorflow.OpDef.ArgDef.prototype.getNumberAttr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.tensorflow.OpDef.ArgDef.prototype.setNumberAttr = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string type_list_attr = 6;
 * @return {string}
 */
proto.tensorflow.OpDef.ArgDef.prototype.getTypeListAttr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.tensorflow.OpDef.ArgDef.prototype.setTypeListAttr = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional bool is_ref = 16;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.OpDef.ArgDef.prototype.getIsRef = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.tensorflow.OpDef.ArgDef.prototype.setIsRef = function(value) {
  jspb.Message.setField(this, 16, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.OpDef.AttrDef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.OpDef.AttrDef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.OpDef.AttrDef.displayName = 'proto.tensorflow.OpDef.AttrDef';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.OpDef.AttrDef.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.OpDef.AttrDef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.OpDef.AttrDef} msg The msg instance to transform.
 * @return {!Object}
 */
proto.tensorflow.OpDef.AttrDef.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    defaultValue: (f = msg.getDefaultValue()) && proto.tensorflow.AttrValue.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    hasMinimum: jspb.Message.getFieldWithDefault(msg, 5, false),
    minimum: jspb.Message.getFieldWithDefault(msg, 6, 0),
    allowedValues: (f = msg.getAllowedValues()) && proto.tensorflow.AttrValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.OpDef.AttrDef}
 */
proto.tensorflow.OpDef.AttrDef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.OpDef.AttrDef;
  return proto.tensorflow.OpDef.AttrDef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.OpDef.AttrDef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.OpDef.AttrDef}
 */
proto.tensorflow.OpDef.AttrDef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = new proto.tensorflow.AttrValue;
      reader.readMessage(value,proto.tensorflow.AttrValue.deserializeBinaryFromReader);
      msg.setDefaultValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasMinimum(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinimum(value);
      break;
    case 7:
      var value = new proto.tensorflow.AttrValue;
      reader.readMessage(value,proto.tensorflow.AttrValue.deserializeBinaryFromReader);
      msg.setAllowedValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.OpDef.AttrDef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.OpDef.AttrDef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.OpDef.AttrDef} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.tensorflow.OpDef.AttrDef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDefaultValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tensorflow.AttrValue.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHasMinimum();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getMinimum();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getAllowedValues();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.tensorflow.AttrValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.tensorflow.OpDef.AttrDef.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.OpDef.AttrDef.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.tensorflow.OpDef.AttrDef.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tensorflow.OpDef.AttrDef.prototype.setType = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional AttrValue default_value = 3;
 * @return {?proto.tensorflow.AttrValue}
 */
proto.tensorflow.OpDef.AttrDef.prototype.getDefaultValue = function() {
  return /** @type{?proto.tensorflow.AttrValue} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.AttrValue, 3));
};


/** @param {?proto.tensorflow.AttrValue|undefined} value */
proto.tensorflow.OpDef.AttrDef.prototype.setDefaultValue = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.tensorflow.OpDef.AttrDef.prototype.clearDefaultValue = function() {
  this.setDefaultValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.OpDef.AttrDef.prototype.hasDefaultValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.tensorflow.OpDef.AttrDef.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.tensorflow.OpDef.AttrDef.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional bool has_minimum = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.OpDef.AttrDef.prototype.getHasMinimum = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.tensorflow.OpDef.AttrDef.prototype.setHasMinimum = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional int64 minimum = 6;
 * @return {number}
 */
proto.tensorflow.OpDef.AttrDef.prototype.getMinimum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.tensorflow.OpDef.AttrDef.prototype.setMinimum = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional AttrValue allowed_values = 7;
 * @return {?proto.tensorflow.AttrValue}
 */
proto.tensorflow.OpDef.AttrDef.prototype.getAllowedValues = function() {
  return /** @type{?proto.tensorflow.AttrValue} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.AttrValue, 7));
};


/** @param {?proto.tensorflow.AttrValue|undefined} value */
proto.tensorflow.OpDef.AttrDef.prototype.setAllowedValues = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.tensorflow.OpDef.AttrDef.prototype.clearAllowedValues = function() {
  this.setAllowedValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.OpDef.AttrDef.prototype.hasAllowedValues = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.tensorflow.OpDef.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.OpDef.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated ArgDef input_arg = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.tensorflow.OpDef.ArgDef>}
 */
proto.tensorflow.OpDef.prototype.getInputArgList = function() {
  return /** @type{!Array.<!proto.tensorflow.OpDef.ArgDef>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.OpDef.ArgDef, 2));
};


/** @param {!Array.<!proto.tensorflow.OpDef.ArgDef>} value */
proto.tensorflow.OpDef.prototype.setInputArgList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.tensorflow.OpDef.ArgDef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.OpDef.ArgDef}
 */
proto.tensorflow.OpDef.prototype.addInputArg = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.tensorflow.OpDef.ArgDef, opt_index);
};


proto.tensorflow.OpDef.prototype.clearInputArgList = function() {
  this.setInputArgList([]);
};


/**
 * repeated ArgDef output_arg = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.tensorflow.OpDef.ArgDef>}
 */
proto.tensorflow.OpDef.prototype.getOutputArgList = function() {
  return /** @type{!Array.<!proto.tensorflow.OpDef.ArgDef>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.OpDef.ArgDef, 3));
};


/** @param {!Array.<!proto.tensorflow.OpDef.ArgDef>} value */
proto.tensorflow.OpDef.prototype.setOutputArgList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.tensorflow.OpDef.ArgDef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.OpDef.ArgDef}
 */
proto.tensorflow.OpDef.prototype.addOutputArg = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.tensorflow.OpDef.ArgDef, opt_index);
};


proto.tensorflow.OpDef.prototype.clearOutputArgList = function() {
  this.setOutputArgList([]);
};


/**
 * repeated AttrDef attr = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.tensorflow.OpDef.AttrDef>}
 */
proto.tensorflow.OpDef.prototype.getAttrList = function() {
  return /** @type{!Array.<!proto.tensorflow.OpDef.AttrDef>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.OpDef.AttrDef, 4));
};


/** @param {!Array.<!proto.tensorflow.OpDef.AttrDef>} value */
proto.tensorflow.OpDef.prototype.setAttrList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.tensorflow.OpDef.AttrDef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.OpDef.AttrDef}
 */
proto.tensorflow.OpDef.prototype.addAttr = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.tensorflow.OpDef.AttrDef, opt_index);
};


proto.tensorflow.OpDef.prototype.clearAttrList = function() {
  this.setAttrList([]);
};


/**
 * optional OpDeprecation deprecation = 8;
 * @return {?proto.tensorflow.OpDeprecation}
 */
proto.tensorflow.OpDef.prototype.getDeprecation = function() {
  return /** @type{?proto.tensorflow.OpDeprecation} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.OpDeprecation, 8));
};


/** @param {?proto.tensorflow.OpDeprecation|undefined} value */
proto.tensorflow.OpDef.prototype.setDeprecation = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.tensorflow.OpDef.prototype.clearDeprecation = function() {
  this.setDeprecation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.OpDef.prototype.hasDeprecation = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string summary = 5;
 * @return {string}
 */
proto.tensorflow.OpDef.prototype.getSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.tensorflow.OpDef.prototype.setSummary = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.tensorflow.OpDef.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.tensorflow.OpDef.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional bool is_commutative = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.OpDef.prototype.getIsCommutative = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.tensorflow.OpDef.prototype.setIsCommutative = function(value) {
  jspb.Message.setField(this, 18, value);
};


/**
 * optional bool is_aggregate = 16;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.OpDef.prototype.getIsAggregate = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.tensorflow.OpDef.prototype.setIsAggregate = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * optional bool is_stateful = 17;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.OpDef.prototype.getIsStateful = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, false));
};


/** @param {boolean} value */
proto.tensorflow.OpDef.prototype.setIsStateful = function(value) {
  jspb.Message.setField(this, 17, value);
};


/**
 * optional bool allows_uninitialized_input = 19;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.tensorflow.OpDef.prototype.getAllowsUninitializedInput = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 19, false));
};


/** @param {boolean} value */
proto.tensorflow.OpDef.prototype.setAllowsUninitializedInput = function(value) {
  jspb.Message.setField(this, 19, value);
};


