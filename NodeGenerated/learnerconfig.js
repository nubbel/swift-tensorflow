/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.tensorflow.boosted_trees.learner.LearnerConfig');
goog.provide('proto.tensorflow.boosted_trees.learner.LearnerConfig.GrowingMode');
goog.provide('proto.tensorflow.boosted_trees.learner.LearnerConfig.MultiClassStrategy');
goog.provide('proto.tensorflow.boosted_trees.learner.LearnerConfig.PruningMode');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.tensorflow.boosted_trees.learner.AveragingConfig');
goog.require('proto.tensorflow.boosted_trees.learner.LearningRateConfig');
goog.require('proto.tensorflow.boosted_trees.learner.TreeConstraintsConfig');
goog.require('proto.tensorflow.boosted_trees.learner.TreeRegularizationConfig');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tensorflow.boosted_trees.learner.LearnerConfig.oneofGroups_);
};
goog.inherits(proto.tensorflow.boosted_trees.learner.LearnerConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.boosted_trees.learner.LearnerConfig.displayName = 'proto.tensorflow.boosted_trees.learner.LearnerConfig';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.FeatureFractionCase = {
  FEATURE_FRACTION_NOT_SET: 0,
  FEATURE_FRACTION_PER_TREE: 2,
  FEATURE_FRACTION_PER_LEVEL: 3
};

/**
 * @return {proto.tensorflow.boosted_trees.learner.LearnerConfig.FeatureFractionCase}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.getFeatureFractionCase = function() {
  return /** @type {proto.tensorflow.boosted_trees.learner.LearnerConfig.FeatureFractionCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.boosted_trees.learner.LearnerConfig.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.boosted_trees.learner.LearnerConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.boosted_trees.learner.LearnerConfig} msg The msg instance to transform.
 * @return {!Object}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    numClasses: jspb.Message.getFieldWithDefault(msg, 1, 0),
    featureFractionPerTree: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    featureFractionPerLevel: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    regularization: (f = msg.getRegularization()) && proto.tensorflow.boosted_trees.learner.TreeRegularizationConfig.toObject(includeInstance, f),
    constraints: (f = msg.getConstraints()) && proto.tensorflow.boosted_trees.learner.TreeConstraintsConfig.toObject(includeInstance, f),
    pruningMode: jspb.Message.getFieldWithDefault(msg, 8, 0),
    growingMode: jspb.Message.getFieldWithDefault(msg, 9, 0),
    learningRateTuner: (f = msg.getLearningRateTuner()) && proto.tensorflow.boosted_trees.learner.LearningRateConfig.toObject(includeInstance, f),
    multiClassStrategy: jspb.Message.getFieldWithDefault(msg, 10, 0),
    averagingConfig: (f = msg.getAveragingConfig()) && proto.tensorflow.boosted_trees.learner.AveragingConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.boosted_trees.learner.LearnerConfig}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.boosted_trees.learner.LearnerConfig;
  return proto.tensorflow.boosted_trees.learner.LearnerConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.boosted_trees.learner.LearnerConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.boosted_trees.learner.LearnerConfig}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumClasses(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFeatureFractionPerTree(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFeatureFractionPerLevel(value);
      break;
    case 4:
      var value = new proto.tensorflow.boosted_trees.learner.TreeRegularizationConfig;
      reader.readMessage(value,proto.tensorflow.boosted_trees.learner.TreeRegularizationConfig.deserializeBinaryFromReader);
      msg.setRegularization(value);
      break;
    case 5:
      var value = new proto.tensorflow.boosted_trees.learner.TreeConstraintsConfig;
      reader.readMessage(value,proto.tensorflow.boosted_trees.learner.TreeConstraintsConfig.deserializeBinaryFromReader);
      msg.setConstraints(value);
      break;
    case 8:
      var value = /** @type {!proto.tensorflow.boosted_trees.learner.LearnerConfig.PruningMode} */ (reader.readEnum());
      msg.setPruningMode(value);
      break;
    case 9:
      var value = /** @type {!proto.tensorflow.boosted_trees.learner.LearnerConfig.GrowingMode} */ (reader.readEnum());
      msg.setGrowingMode(value);
      break;
    case 6:
      var value = new proto.tensorflow.boosted_trees.learner.LearningRateConfig;
      reader.readMessage(value,proto.tensorflow.boosted_trees.learner.LearningRateConfig.deserializeBinaryFromReader);
      msg.setLearningRateTuner(value);
      break;
    case 10:
      var value = /** @type {!proto.tensorflow.boosted_trees.learner.LearnerConfig.MultiClassStrategy} */ (reader.readEnum());
      msg.setMultiClassStrategy(value);
      break;
    case 11:
      var value = new proto.tensorflow.boosted_trees.learner.AveragingConfig;
      reader.readMessage(value,proto.tensorflow.boosted_trees.learner.AveragingConfig.deserializeBinaryFromReader);
      msg.setAveragingConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.boosted_trees.learner.LearnerConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.boosted_trees.learner.LearnerConfig} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumClasses();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getRegularization();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tensorflow.boosted_trees.learner.TreeRegularizationConfig.serializeBinaryToWriter
    );
  }
  f = message.getConstraints();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.tensorflow.boosted_trees.learner.TreeConstraintsConfig.serializeBinaryToWriter
    );
  }
  f = message.getPruningMode();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getGrowingMode();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getLearningRateTuner();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.tensorflow.boosted_trees.learner.LearningRateConfig.serializeBinaryToWriter
    );
  }
  f = message.getMultiClassStrategy();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getAveragingConfig();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.tensorflow.boosted_trees.learner.AveragingConfig.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.PruningMode = {
  PRE_PRUNE: 0,
  POST_PRUNE: 1
};

/**
 * @enum {number}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.GrowingMode = {
  WHOLE_TREE: 0,
  LAYER_BY_LAYER: 1
};

/**
 * @enum {number}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.MultiClassStrategy = {
  TREE_PER_CLASS: 0,
  FULL_HESSIAN: 1,
  DIAGONAL_HESSIAN: 2
};

/**
 * optional uint32 num_classes = 1;
 * @return {number}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.getNumClasses = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.setNumClasses = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional float feature_fraction_per_tree = 2;
 * @return {number}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.getFeatureFractionPerTree = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.setFeatureFractionPerTree = function(value) {
  jspb.Message.setOneofField(this, 2, proto.tensorflow.boosted_trees.learner.LearnerConfig.oneofGroups_[0], value);
};


proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.clearFeatureFractionPerTree = function() {
  jspb.Message.setOneofField(this, 2, proto.tensorflow.boosted_trees.learner.LearnerConfig.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.hasFeatureFractionPerTree = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float feature_fraction_per_level = 3;
 * @return {number}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.getFeatureFractionPerLevel = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.setFeatureFractionPerLevel = function(value) {
  jspb.Message.setOneofField(this, 3, proto.tensorflow.boosted_trees.learner.LearnerConfig.oneofGroups_[0], value);
};


proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.clearFeatureFractionPerLevel = function() {
  jspb.Message.setOneofField(this, 3, proto.tensorflow.boosted_trees.learner.LearnerConfig.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.hasFeatureFractionPerLevel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TreeRegularizationConfig regularization = 4;
 * @return {?proto.tensorflow.boosted_trees.learner.TreeRegularizationConfig}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.getRegularization = function() {
  return /** @type{?proto.tensorflow.boosted_trees.learner.TreeRegularizationConfig} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.boosted_trees.learner.TreeRegularizationConfig, 4));
};


/** @param {?proto.tensorflow.boosted_trees.learner.TreeRegularizationConfig|undefined} value */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.setRegularization = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.clearRegularization = function() {
  this.setRegularization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.hasRegularization = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TreeConstraintsConfig constraints = 5;
 * @return {?proto.tensorflow.boosted_trees.learner.TreeConstraintsConfig}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.getConstraints = function() {
  return /** @type{?proto.tensorflow.boosted_trees.learner.TreeConstraintsConfig} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.boosted_trees.learner.TreeConstraintsConfig, 5));
};


/** @param {?proto.tensorflow.boosted_trees.learner.TreeConstraintsConfig|undefined} value */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.setConstraints = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.clearConstraints = function() {
  this.setConstraints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.hasConstraints = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional PruningMode pruning_mode = 8;
 * @return {!proto.tensorflow.boosted_trees.learner.LearnerConfig.PruningMode}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.getPruningMode = function() {
  return /** @type {!proto.tensorflow.boosted_trees.learner.LearnerConfig.PruningMode} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.tensorflow.boosted_trees.learner.LearnerConfig.PruningMode} value */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.setPruningMode = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional GrowingMode growing_mode = 9;
 * @return {!proto.tensorflow.boosted_trees.learner.LearnerConfig.GrowingMode}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.getGrowingMode = function() {
  return /** @type {!proto.tensorflow.boosted_trees.learner.LearnerConfig.GrowingMode} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {!proto.tensorflow.boosted_trees.learner.LearnerConfig.GrowingMode} value */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.setGrowingMode = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional LearningRateConfig learning_rate_tuner = 6;
 * @return {?proto.tensorflow.boosted_trees.learner.LearningRateConfig}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.getLearningRateTuner = function() {
  return /** @type{?proto.tensorflow.boosted_trees.learner.LearningRateConfig} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.boosted_trees.learner.LearningRateConfig, 6));
};


/** @param {?proto.tensorflow.boosted_trees.learner.LearningRateConfig|undefined} value */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.setLearningRateTuner = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.clearLearningRateTuner = function() {
  this.setLearningRateTuner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.hasLearningRateTuner = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional MultiClassStrategy multi_class_strategy = 10;
 * @return {!proto.tensorflow.boosted_trees.learner.LearnerConfig.MultiClassStrategy}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.getMultiClassStrategy = function() {
  return /** @type {!proto.tensorflow.boosted_trees.learner.LearnerConfig.MultiClassStrategy} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {!proto.tensorflow.boosted_trees.learner.LearnerConfig.MultiClassStrategy} value */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.setMultiClassStrategy = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional AveragingConfig averaging_config = 11;
 * @return {?proto.tensorflow.boosted_trees.learner.AveragingConfig}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.getAveragingConfig = function() {
  return /** @type{?proto.tensorflow.boosted_trees.learner.AveragingConfig} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.boosted_trees.learner.AveragingConfig, 11));
};


/** @param {?proto.tensorflow.boosted_trees.learner.AveragingConfig|undefined} value */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.setAveragingConfig = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.clearAveragingConfig = function() {
  this.setAveragingConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.boosted_trees.learner.LearnerConfig.prototype.hasAveragingConfig = function() {
  return jspb.Message.getField(this, 11) != null;
};


