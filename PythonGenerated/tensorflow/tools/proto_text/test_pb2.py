# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tensorflow/tools/proto_text/test.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='tensorflow/tools/proto_text/test.proto',
  package='tensorflow.test',
  syntax='proto3',
  serialized_pb=_b('\n&tensorflow/tools/proto_text/test.proto\x12\x0ftensorflow.test\"\xd1\x17\n\x0cTestAllTypes\x12\x17\n\x0eoptional_int32\x18\xe8\x07 \x01(\x05\x12\x16\n\x0eoptional_int64\x18\x02 \x01(\x03\x12\x17\n\x0foptional_uint32\x18\x03 \x01(\r\x12\x18\n\x0foptional_uint64\x18\xe7\x07 \x01(\x04\x12\x17\n\x0foptional_sint32\x18\x05 \x01(\x11\x12\x17\n\x0foptional_sint64\x18\x06 \x01(\x12\x12\x18\n\x10optional_fixed32\x18\x07 \x01(\x07\x12\x18\n\x10optional_fixed64\x18\x08 \x01(\x06\x12\x19\n\x11optional_sfixed32\x18\t \x01(\x0f\x12\x19\n\x11optional_sfixed64\x18\n \x01(\x10\x12\x16\n\x0eoptional_float\x18\x0b \x01(\x02\x12\x17\n\x0foptional_double\x18\x0c \x01(\x01\x12\x15\n\roptional_bool\x18\r \x01(\x08\x12\x17\n\x0foptional_string\x18\x0e \x01(\t\x12\x16\n\x0eoptional_bytes\x18\x0f \x01(\x0c\x12L\n\x17optional_nested_message\x18\x12 \x01(\x0b\x32+.tensorflow.test.TestAllTypes.NestedMessage\x12\x41\n\x18optional_foreign_message\x18\x13 \x01(\x0b\x32\x1f.tensorflow.test.ForeignMessage\x12\x46\n\x14optional_nested_enum\x18\x15 \x01(\x0e\x32(.tensorflow.test.TestAllTypes.NestedEnum\x12;\n\x15optional_foreign_enum\x18\x16 \x01(\x0e\x32\x1c.tensorflow.test.ForeignEnum\x12\x15\n\roptional_cord\x18\x19 \x01(\t\x12\x16\n\x0erepeated_int32\x18\x1f \x03(\x05\x12\x16\n\x0erepeated_int64\x18  \x03(\x03\x12\x17\n\x0frepeated_uint32\x18! \x03(\r\x12\x17\n\x0frepeated_uint64\x18\" \x03(\x04\x12\x17\n\x0frepeated_sint32\x18# \x03(\x11\x12\x17\n\x0frepeated_sint64\x18$ \x03(\x12\x12\x18\n\x10repeated_fixed32\x18% \x03(\x07\x12\x18\n\x10repeated_fixed64\x18& \x03(\x06\x12\x19\n\x11repeated_sfixed32\x18\' \x03(\x0f\x12\x19\n\x11repeated_sfixed64\x18( \x03(\x10\x12\x16\n\x0erepeated_float\x18) \x03(\x02\x12\x17\n\x0frepeated_double\x18* \x03(\x01\x12\x15\n\rrepeated_bool\x18+ \x03(\x08\x12\x17\n\x0frepeated_string\x18, \x03(\t\x12\x16\n\x0erepeated_bytes\x18- \x03(\x0c\x12L\n\x17repeated_nested_message\x18\x30 \x03(\x0b\x32+.tensorflow.test.TestAllTypes.NestedMessage\x12\x46\n\x14repeated_nested_enum\x18\x33 \x03(\x0e\x32(.tensorflow.test.TestAllTypes.NestedEnum\x12\x15\n\rrepeated_cord\x18\x37 \x03(\t\x12\x16\n\x0coneof_uint32\x18o \x01(\rH\x00\x12K\n\x14oneof_nested_message\x18p \x01(\x0b\x32+.tensorflow.test.TestAllTypes.NestedMessageH\x00\x12\x16\n\x0coneof_string\x18q \x01(\tH\x00\x12\x15\n\x0boneof_bytes\x18r \x01(\x0cH\x00\x12>\n\noneof_enum\x18\x64 \x01(\x0e\x32(.tensorflow.test.TestAllTypes.NestedEnumH\x00\x12T\n\x15map_string_to_message\x18: \x03(\x0b\x32\x35.tensorflow.test.TestAllTypes.MapStringToMessageEntry\x12R\n\x14map_int32_to_message\x18; \x03(\x0b\x32\x34.tensorflow.test.TestAllTypes.MapInt32ToMessageEntry\x12R\n\x14map_int64_to_message\x18< \x03(\x0b\x32\x34.tensorflow.test.TestAllTypes.MapInt64ToMessageEntry\x12P\n\x13map_bool_to_message\x18= \x03(\x0b\x32\x33.tensorflow.test.TestAllTypes.MapBoolToMessageEntry\x12P\n\x13map_string_to_int64\x18> \x03(\x0b\x32\x33.tensorflow.test.TestAllTypes.MapStringToInt64Entry\x12P\n\x13map_int64_to_string\x18? \x03(\x0b\x32\x33.tensorflow.test.TestAllTypes.MapInt64ToStringEntry\x12\x63\n\x1d\x61nother_map_string_to_message\x18\x41 \x03(\x0b\x32<.tensorflow.test.TestAllTypes.AnotherMapStringToMessageEntry\x12!\n\x15packed_repeated_int64\x18@ \x03(\x03\x42\x02\x10\x01\x1a\xd5\x01\n\rNestedMessage\x12\x16\n\x0eoptional_int32\x18\x01 \x01(\x05\x12\x16\n\x0erepeated_int32\x18\x02 \x03(\x05\x12L\n\x03msg\x18\x03 \x01(\x0b\x32?.tensorflow.test.TestAllTypes.NestedMessage.DoubleNestedMessage\x12\x16\n\x0eoptional_int64\x18\x04 \x01(\x03\x1a.\n\x13\x44oubleNestedMessage\x12\x17\n\x0foptional_string\x18\x01 \x01(\t\x1a\x66\n\x17MapStringToMessageEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12:\n\x05value\x18\x02 \x01(\x0b\x32+.tensorflow.test.TestAllTypes.NestedMessage:\x02\x38\x01\x1a\x65\n\x16MapInt32ToMessageEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12:\n\x05value\x18\x02 \x01(\x0b\x32+.tensorflow.test.TestAllTypes.NestedMessage:\x02\x38\x01\x1a\x65\n\x16MapInt64ToMessageEntry\x12\x0b\n\x03key\x18\x01 \x01(\x03\x12:\n\x05value\x18\x02 \x01(\x0b\x32+.tensorflow.test.TestAllTypes.NestedMessage:\x02\x38\x01\x1a\x64\n\x15MapBoolToMessageEntry\x12\x0b\n\x03key\x18\x01 \x01(\x08\x12:\n\x05value\x18\x02 \x01(\x0b\x32+.tensorflow.test.TestAllTypes.NestedMessage:\x02\x38\x01\x1a\x37\n\x15MapStringToInt64Entry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a\x37\n\x15MapInt64ToStringEntry\x12\x0b\n\x03key\x18\x01 \x01(\x03\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1am\n\x1e\x41notherMapStringToMessageEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12:\n\x05value\x18\x02 \x01(\x0b\x32+.tensorflow.test.TestAllTypes.NestedMessage:\x02\x38\x01\"C\n\nNestedEnum\x12\x08\n\x04ZERO\x10\x00\x12\x07\n\x03\x46OO\x10\x01\x12\x07\n\x03\x42\x41R\x10\x02\x12\x07\n\x03\x42\x41Z\x10\x03\x12\x10\n\x03NEG\x10\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\x42\r\n\x0boneof_field\"\x89\x02\n\x12NestedTestAllTypes\x12\x32\n\x05\x63hild\x18\x01 \x01(\x0b\x32#.tensorflow.test.NestedTestAllTypes\x12.\n\x07payload\x18\x02 \x01(\x0b\x32\x1d.tensorflow.test.TestAllTypes\x12V\n\x13map_string_to_int64\x18\x03 \x03(\x0b\x32\x39.tensorflow.test.NestedTestAllTypes.MapStringToInt64Entry\x1a\x37\n\x15MapStringToInt64Entry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\"\x1b\n\x0e\x46oreignMessage\x12\t\n\x01\x63\x18\x01 \x01(\x05\"\x12\n\x10TestEmptyMessage*R\n\x0b\x46oreignEnum\x12\x10\n\x0c\x46OREIGN_ZERO\x10\x00\x12\x0f\n\x0b\x46OREIGN_FOO\x10\x04\x12\x0f\n\x0b\x46OREIGN_BAR\x10\x05\x12\x0f\n\x0b\x46OREIGN_BAZ\x10\x06\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_FOREIGNENUM = _descriptor.EnumDescriptor(
  name='ForeignEnum',
  full_name='tensorflow.test.ForeignEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FOREIGN_ZERO', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FOREIGN_FOO', index=1, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FOREIGN_BAR', index=2, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FOREIGN_BAZ', index=3, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3404,
  serialized_end=3486,
)
_sym_db.RegisterEnumDescriptor(_FOREIGNENUM)

ForeignEnum = enum_type_wrapper.EnumTypeWrapper(_FOREIGNENUM)
FOREIGN_ZERO = 0
FOREIGN_FOO = 4
FOREIGN_BAR = 5
FOREIGN_BAZ = 6


_TESTALLTYPES_NESTEDENUM = _descriptor.EnumDescriptor(
  name='NestedEnum',
  full_name='tensorflow.test.TestAllTypes.NestedEnum',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ZERO', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FOO', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BAR', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BAZ', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NEG', index=4, number=-1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3003,
  serialized_end=3070,
)
_sym_db.RegisterEnumDescriptor(_TESTALLTYPES_NESTEDENUM)


_TESTALLTYPES_NESTEDMESSAGE_DOUBLENESTEDMESSAGE = _descriptor.Descriptor(
  name='DoubleNestedMessage',
  full_name='tensorflow.test.TestAllTypes.NestedMessage.DoubleNestedMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='optional_string', full_name='tensorflow.test.TestAllTypes.NestedMessage.DoubleNestedMessage.optional_string', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2318,
  serialized_end=2364,
)

_TESTALLTYPES_NESTEDMESSAGE = _descriptor.Descriptor(
  name='NestedMessage',
  full_name='tensorflow.test.TestAllTypes.NestedMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='optional_int32', full_name='tensorflow.test.TestAllTypes.NestedMessage.optional_int32', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_int32', full_name='tensorflow.test.TestAllTypes.NestedMessage.repeated_int32', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='msg', full_name='tensorflow.test.TestAllTypes.NestedMessage.msg', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_int64', full_name='tensorflow.test.TestAllTypes.NestedMessage.optional_int64', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_TESTALLTYPES_NESTEDMESSAGE_DOUBLENESTEDMESSAGE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2151,
  serialized_end=2364,
)

_TESTALLTYPES_MAPSTRINGTOMESSAGEENTRY = _descriptor.Descriptor(
  name='MapStringToMessageEntry',
  full_name='tensorflow.test.TestAllTypes.MapStringToMessageEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='tensorflow.test.TestAllTypes.MapStringToMessageEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='tensorflow.test.TestAllTypes.MapStringToMessageEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2366,
  serialized_end=2468,
)

_TESTALLTYPES_MAPINT32TOMESSAGEENTRY = _descriptor.Descriptor(
  name='MapInt32ToMessageEntry',
  full_name='tensorflow.test.TestAllTypes.MapInt32ToMessageEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='tensorflow.test.TestAllTypes.MapInt32ToMessageEntry.key', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='tensorflow.test.TestAllTypes.MapInt32ToMessageEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2470,
  serialized_end=2571,
)

_TESTALLTYPES_MAPINT64TOMESSAGEENTRY = _descriptor.Descriptor(
  name='MapInt64ToMessageEntry',
  full_name='tensorflow.test.TestAllTypes.MapInt64ToMessageEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='tensorflow.test.TestAllTypes.MapInt64ToMessageEntry.key', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='tensorflow.test.TestAllTypes.MapInt64ToMessageEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2573,
  serialized_end=2674,
)

_TESTALLTYPES_MAPBOOLTOMESSAGEENTRY = _descriptor.Descriptor(
  name='MapBoolToMessageEntry',
  full_name='tensorflow.test.TestAllTypes.MapBoolToMessageEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='tensorflow.test.TestAllTypes.MapBoolToMessageEntry.key', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='tensorflow.test.TestAllTypes.MapBoolToMessageEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2676,
  serialized_end=2776,
)

_TESTALLTYPES_MAPSTRINGTOINT64ENTRY = _descriptor.Descriptor(
  name='MapStringToInt64Entry',
  full_name='tensorflow.test.TestAllTypes.MapStringToInt64Entry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='tensorflow.test.TestAllTypes.MapStringToInt64Entry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='tensorflow.test.TestAllTypes.MapStringToInt64Entry.value', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2778,
  serialized_end=2833,
)

_TESTALLTYPES_MAPINT64TOSTRINGENTRY = _descriptor.Descriptor(
  name='MapInt64ToStringEntry',
  full_name='tensorflow.test.TestAllTypes.MapInt64ToStringEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='tensorflow.test.TestAllTypes.MapInt64ToStringEntry.key', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='tensorflow.test.TestAllTypes.MapInt64ToStringEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2835,
  serialized_end=2890,
)

_TESTALLTYPES_ANOTHERMAPSTRINGTOMESSAGEENTRY = _descriptor.Descriptor(
  name='AnotherMapStringToMessageEntry',
  full_name='tensorflow.test.TestAllTypes.AnotherMapStringToMessageEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='tensorflow.test.TestAllTypes.AnotherMapStringToMessageEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='tensorflow.test.TestAllTypes.AnotherMapStringToMessageEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2892,
  serialized_end=3001,
)

_TESTALLTYPES = _descriptor.Descriptor(
  name='TestAllTypes',
  full_name='tensorflow.test.TestAllTypes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='optional_int32', full_name='tensorflow.test.TestAllTypes.optional_int32', index=0,
      number=1000, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_int64', full_name='tensorflow.test.TestAllTypes.optional_int64', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_uint32', full_name='tensorflow.test.TestAllTypes.optional_uint32', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_uint64', full_name='tensorflow.test.TestAllTypes.optional_uint64', index=3,
      number=999, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_sint32', full_name='tensorflow.test.TestAllTypes.optional_sint32', index=4,
      number=5, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_sint64', full_name='tensorflow.test.TestAllTypes.optional_sint64', index=5,
      number=6, type=18, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_fixed32', full_name='tensorflow.test.TestAllTypes.optional_fixed32', index=6,
      number=7, type=7, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_fixed64', full_name='tensorflow.test.TestAllTypes.optional_fixed64', index=7,
      number=8, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_sfixed32', full_name='tensorflow.test.TestAllTypes.optional_sfixed32', index=8,
      number=9, type=15, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_sfixed64', full_name='tensorflow.test.TestAllTypes.optional_sfixed64', index=9,
      number=10, type=16, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_float', full_name='tensorflow.test.TestAllTypes.optional_float', index=10,
      number=11, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_double', full_name='tensorflow.test.TestAllTypes.optional_double', index=11,
      number=12, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_bool', full_name='tensorflow.test.TestAllTypes.optional_bool', index=12,
      number=13, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_string', full_name='tensorflow.test.TestAllTypes.optional_string', index=13,
      number=14, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_bytes', full_name='tensorflow.test.TestAllTypes.optional_bytes', index=14,
      number=15, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_nested_message', full_name='tensorflow.test.TestAllTypes.optional_nested_message', index=15,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_foreign_message', full_name='tensorflow.test.TestAllTypes.optional_foreign_message', index=16,
      number=19, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_nested_enum', full_name='tensorflow.test.TestAllTypes.optional_nested_enum', index=17,
      number=21, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_foreign_enum', full_name='tensorflow.test.TestAllTypes.optional_foreign_enum', index=18,
      number=22, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optional_cord', full_name='tensorflow.test.TestAllTypes.optional_cord', index=19,
      number=25, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_int32', full_name='tensorflow.test.TestAllTypes.repeated_int32', index=20,
      number=31, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_int64', full_name='tensorflow.test.TestAllTypes.repeated_int64', index=21,
      number=32, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_uint32', full_name='tensorflow.test.TestAllTypes.repeated_uint32', index=22,
      number=33, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_uint64', full_name='tensorflow.test.TestAllTypes.repeated_uint64', index=23,
      number=34, type=4, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_sint32', full_name='tensorflow.test.TestAllTypes.repeated_sint32', index=24,
      number=35, type=17, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_sint64', full_name='tensorflow.test.TestAllTypes.repeated_sint64', index=25,
      number=36, type=18, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_fixed32', full_name='tensorflow.test.TestAllTypes.repeated_fixed32', index=26,
      number=37, type=7, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_fixed64', full_name='tensorflow.test.TestAllTypes.repeated_fixed64', index=27,
      number=38, type=6, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_sfixed32', full_name='tensorflow.test.TestAllTypes.repeated_sfixed32', index=28,
      number=39, type=15, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_sfixed64', full_name='tensorflow.test.TestAllTypes.repeated_sfixed64', index=29,
      number=40, type=16, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_float', full_name='tensorflow.test.TestAllTypes.repeated_float', index=30,
      number=41, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_double', full_name='tensorflow.test.TestAllTypes.repeated_double', index=31,
      number=42, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_bool', full_name='tensorflow.test.TestAllTypes.repeated_bool', index=32,
      number=43, type=8, cpp_type=7, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_string', full_name='tensorflow.test.TestAllTypes.repeated_string', index=33,
      number=44, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_bytes', full_name='tensorflow.test.TestAllTypes.repeated_bytes', index=34,
      number=45, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_nested_message', full_name='tensorflow.test.TestAllTypes.repeated_nested_message', index=35,
      number=48, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_nested_enum', full_name='tensorflow.test.TestAllTypes.repeated_nested_enum', index=36,
      number=51, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_cord', full_name='tensorflow.test.TestAllTypes.repeated_cord', index=37,
      number=55, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='oneof_uint32', full_name='tensorflow.test.TestAllTypes.oneof_uint32', index=38,
      number=111, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='oneof_nested_message', full_name='tensorflow.test.TestAllTypes.oneof_nested_message', index=39,
      number=112, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='oneof_string', full_name='tensorflow.test.TestAllTypes.oneof_string', index=40,
      number=113, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='oneof_bytes', full_name='tensorflow.test.TestAllTypes.oneof_bytes', index=41,
      number=114, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='oneof_enum', full_name='tensorflow.test.TestAllTypes.oneof_enum', index=42,
      number=100, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='map_string_to_message', full_name='tensorflow.test.TestAllTypes.map_string_to_message', index=43,
      number=58, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='map_int32_to_message', full_name='tensorflow.test.TestAllTypes.map_int32_to_message', index=44,
      number=59, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='map_int64_to_message', full_name='tensorflow.test.TestAllTypes.map_int64_to_message', index=45,
      number=60, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='map_bool_to_message', full_name='tensorflow.test.TestAllTypes.map_bool_to_message', index=46,
      number=61, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='map_string_to_int64', full_name='tensorflow.test.TestAllTypes.map_string_to_int64', index=47,
      number=62, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='map_int64_to_string', full_name='tensorflow.test.TestAllTypes.map_int64_to_string', index=48,
      number=63, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='another_map_string_to_message', full_name='tensorflow.test.TestAllTypes.another_map_string_to_message', index=49,
      number=65, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='packed_repeated_int64', full_name='tensorflow.test.TestAllTypes.packed_repeated_int64', index=50,
      number=64, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
  ],
  extensions=[
  ],
  nested_types=[_TESTALLTYPES_NESTEDMESSAGE, _TESTALLTYPES_MAPSTRINGTOMESSAGEENTRY, _TESTALLTYPES_MAPINT32TOMESSAGEENTRY, _TESTALLTYPES_MAPINT64TOMESSAGEENTRY, _TESTALLTYPES_MAPBOOLTOMESSAGEENTRY, _TESTALLTYPES_MAPSTRINGTOINT64ENTRY, _TESTALLTYPES_MAPINT64TOSTRINGENTRY, _TESTALLTYPES_ANOTHERMAPSTRINGTOMESSAGEENTRY, ],
  enum_types=[
    _TESTALLTYPES_NESTEDENUM,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='oneof_field', full_name='tensorflow.test.TestAllTypes.oneof_field',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=60,
  serialized_end=3085,
)


_NESTEDTESTALLTYPES_MAPSTRINGTOINT64ENTRY = _descriptor.Descriptor(
  name='MapStringToInt64Entry',
  full_name='tensorflow.test.NestedTestAllTypes.MapStringToInt64Entry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='tensorflow.test.NestedTestAllTypes.MapStringToInt64Entry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='tensorflow.test.NestedTestAllTypes.MapStringToInt64Entry.value', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2778,
  serialized_end=2833,
)

_NESTEDTESTALLTYPES = _descriptor.Descriptor(
  name='NestedTestAllTypes',
  full_name='tensorflow.test.NestedTestAllTypes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='child', full_name='tensorflow.test.NestedTestAllTypes.child', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='payload', full_name='tensorflow.test.NestedTestAllTypes.payload', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='map_string_to_int64', full_name='tensorflow.test.NestedTestAllTypes.map_string_to_int64', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_NESTEDTESTALLTYPES_MAPSTRINGTOINT64ENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3088,
  serialized_end=3353,
)


_FOREIGNMESSAGE = _descriptor.Descriptor(
  name='ForeignMessage',
  full_name='tensorflow.test.ForeignMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='c', full_name='tensorflow.test.ForeignMessage.c', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3355,
  serialized_end=3382,
)


_TESTEMPTYMESSAGE = _descriptor.Descriptor(
  name='TestEmptyMessage',
  full_name='tensorflow.test.TestEmptyMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3384,
  serialized_end=3402,
)

_TESTALLTYPES_NESTEDMESSAGE_DOUBLENESTEDMESSAGE.containing_type = _TESTALLTYPES_NESTEDMESSAGE
_TESTALLTYPES_NESTEDMESSAGE.fields_by_name['msg'].message_type = _TESTALLTYPES_NESTEDMESSAGE_DOUBLENESTEDMESSAGE
_TESTALLTYPES_NESTEDMESSAGE.containing_type = _TESTALLTYPES
_TESTALLTYPES_MAPSTRINGTOMESSAGEENTRY.fields_by_name['value'].message_type = _TESTALLTYPES_NESTEDMESSAGE
_TESTALLTYPES_MAPSTRINGTOMESSAGEENTRY.containing_type = _TESTALLTYPES
_TESTALLTYPES_MAPINT32TOMESSAGEENTRY.fields_by_name['value'].message_type = _TESTALLTYPES_NESTEDMESSAGE
_TESTALLTYPES_MAPINT32TOMESSAGEENTRY.containing_type = _TESTALLTYPES
_TESTALLTYPES_MAPINT64TOMESSAGEENTRY.fields_by_name['value'].message_type = _TESTALLTYPES_NESTEDMESSAGE
_TESTALLTYPES_MAPINT64TOMESSAGEENTRY.containing_type = _TESTALLTYPES
_TESTALLTYPES_MAPBOOLTOMESSAGEENTRY.fields_by_name['value'].message_type = _TESTALLTYPES_NESTEDMESSAGE
_TESTALLTYPES_MAPBOOLTOMESSAGEENTRY.containing_type = _TESTALLTYPES
_TESTALLTYPES_MAPSTRINGTOINT64ENTRY.containing_type = _TESTALLTYPES
_TESTALLTYPES_MAPINT64TOSTRINGENTRY.containing_type = _TESTALLTYPES
_TESTALLTYPES_ANOTHERMAPSTRINGTOMESSAGEENTRY.fields_by_name['value'].message_type = _TESTALLTYPES_NESTEDMESSAGE
_TESTALLTYPES_ANOTHERMAPSTRINGTOMESSAGEENTRY.containing_type = _TESTALLTYPES
_TESTALLTYPES.fields_by_name['optional_nested_message'].message_type = _TESTALLTYPES_NESTEDMESSAGE
_TESTALLTYPES.fields_by_name['optional_foreign_message'].message_type = _FOREIGNMESSAGE
_TESTALLTYPES.fields_by_name['optional_nested_enum'].enum_type = _TESTALLTYPES_NESTEDENUM
_TESTALLTYPES.fields_by_name['optional_foreign_enum'].enum_type = _FOREIGNENUM
_TESTALLTYPES.fields_by_name['repeated_nested_message'].message_type = _TESTALLTYPES_NESTEDMESSAGE
_TESTALLTYPES.fields_by_name['repeated_nested_enum'].enum_type = _TESTALLTYPES_NESTEDENUM
_TESTALLTYPES.fields_by_name['oneof_nested_message'].message_type = _TESTALLTYPES_NESTEDMESSAGE
_TESTALLTYPES.fields_by_name['oneof_enum'].enum_type = _TESTALLTYPES_NESTEDENUM
_TESTALLTYPES.fields_by_name['map_string_to_message'].message_type = _TESTALLTYPES_MAPSTRINGTOMESSAGEENTRY
_TESTALLTYPES.fields_by_name['map_int32_to_message'].message_type = _TESTALLTYPES_MAPINT32TOMESSAGEENTRY
_TESTALLTYPES.fields_by_name['map_int64_to_message'].message_type = _TESTALLTYPES_MAPINT64TOMESSAGEENTRY
_TESTALLTYPES.fields_by_name['map_bool_to_message'].message_type = _TESTALLTYPES_MAPBOOLTOMESSAGEENTRY
_TESTALLTYPES.fields_by_name['map_string_to_int64'].message_type = _TESTALLTYPES_MAPSTRINGTOINT64ENTRY
_TESTALLTYPES.fields_by_name['map_int64_to_string'].message_type = _TESTALLTYPES_MAPINT64TOSTRINGENTRY
_TESTALLTYPES.fields_by_name['another_map_string_to_message'].message_type = _TESTALLTYPES_ANOTHERMAPSTRINGTOMESSAGEENTRY
_TESTALLTYPES_NESTEDENUM.containing_type = _TESTALLTYPES
_TESTALLTYPES.oneofs_by_name['oneof_field'].fields.append(
  _TESTALLTYPES.fields_by_name['oneof_uint32'])
_TESTALLTYPES.fields_by_name['oneof_uint32'].containing_oneof = _TESTALLTYPES.oneofs_by_name['oneof_field']
_TESTALLTYPES.oneofs_by_name['oneof_field'].fields.append(
  _TESTALLTYPES.fields_by_name['oneof_nested_message'])
_TESTALLTYPES.fields_by_name['oneof_nested_message'].containing_oneof = _TESTALLTYPES.oneofs_by_name['oneof_field']
_TESTALLTYPES.oneofs_by_name['oneof_field'].fields.append(
  _TESTALLTYPES.fields_by_name['oneof_string'])
_TESTALLTYPES.fields_by_name['oneof_string'].containing_oneof = _TESTALLTYPES.oneofs_by_name['oneof_field']
_TESTALLTYPES.oneofs_by_name['oneof_field'].fields.append(
  _TESTALLTYPES.fields_by_name['oneof_bytes'])
_TESTALLTYPES.fields_by_name['oneof_bytes'].containing_oneof = _TESTALLTYPES.oneofs_by_name['oneof_field']
_TESTALLTYPES.oneofs_by_name['oneof_field'].fields.append(
  _TESTALLTYPES.fields_by_name['oneof_enum'])
_TESTALLTYPES.fields_by_name['oneof_enum'].containing_oneof = _TESTALLTYPES.oneofs_by_name['oneof_field']
_NESTEDTESTALLTYPES_MAPSTRINGTOINT64ENTRY.containing_type = _NESTEDTESTALLTYPES
_NESTEDTESTALLTYPES.fields_by_name['child'].message_type = _NESTEDTESTALLTYPES
_NESTEDTESTALLTYPES.fields_by_name['payload'].message_type = _TESTALLTYPES
_NESTEDTESTALLTYPES.fields_by_name['map_string_to_int64'].message_type = _NESTEDTESTALLTYPES_MAPSTRINGTOINT64ENTRY
DESCRIPTOR.message_types_by_name['TestAllTypes'] = _TESTALLTYPES
DESCRIPTOR.message_types_by_name['NestedTestAllTypes'] = _NESTEDTESTALLTYPES
DESCRIPTOR.message_types_by_name['ForeignMessage'] = _FOREIGNMESSAGE
DESCRIPTOR.message_types_by_name['TestEmptyMessage'] = _TESTEMPTYMESSAGE
DESCRIPTOR.enum_types_by_name['ForeignEnum'] = _FOREIGNENUM

TestAllTypes = _reflection.GeneratedProtocolMessageType('TestAllTypes', (_message.Message,), dict(

  NestedMessage = _reflection.GeneratedProtocolMessageType('NestedMessage', (_message.Message,), dict(

    DoubleNestedMessage = _reflection.GeneratedProtocolMessageType('DoubleNestedMessage', (_message.Message,), dict(
      DESCRIPTOR = _TESTALLTYPES_NESTEDMESSAGE_DOUBLENESTEDMESSAGE,
      __module__ = 'tensorflow.tools.proto_text.test_pb2'
      # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes.NestedMessage.DoubleNestedMessage)
      ))
    ,
    DESCRIPTOR = _TESTALLTYPES_NESTEDMESSAGE,
    __module__ = 'tensorflow.tools.proto_text.test_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes.NestedMessage)
    ))
  ,

  MapStringToMessageEntry = _reflection.GeneratedProtocolMessageType('MapStringToMessageEntry', (_message.Message,), dict(
    DESCRIPTOR = _TESTALLTYPES_MAPSTRINGTOMESSAGEENTRY,
    __module__ = 'tensorflow.tools.proto_text.test_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes.MapStringToMessageEntry)
    ))
  ,

  MapInt32ToMessageEntry = _reflection.GeneratedProtocolMessageType('MapInt32ToMessageEntry', (_message.Message,), dict(
    DESCRIPTOR = _TESTALLTYPES_MAPINT32TOMESSAGEENTRY,
    __module__ = 'tensorflow.tools.proto_text.test_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes.MapInt32ToMessageEntry)
    ))
  ,

  MapInt64ToMessageEntry = _reflection.GeneratedProtocolMessageType('MapInt64ToMessageEntry', (_message.Message,), dict(
    DESCRIPTOR = _TESTALLTYPES_MAPINT64TOMESSAGEENTRY,
    __module__ = 'tensorflow.tools.proto_text.test_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes.MapInt64ToMessageEntry)
    ))
  ,

  MapBoolToMessageEntry = _reflection.GeneratedProtocolMessageType('MapBoolToMessageEntry', (_message.Message,), dict(
    DESCRIPTOR = _TESTALLTYPES_MAPBOOLTOMESSAGEENTRY,
    __module__ = 'tensorflow.tools.proto_text.test_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes.MapBoolToMessageEntry)
    ))
  ,

  MapStringToInt64Entry = _reflection.GeneratedProtocolMessageType('MapStringToInt64Entry', (_message.Message,), dict(
    DESCRIPTOR = _TESTALLTYPES_MAPSTRINGTOINT64ENTRY,
    __module__ = 'tensorflow.tools.proto_text.test_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes.MapStringToInt64Entry)
    ))
  ,

  MapInt64ToStringEntry = _reflection.GeneratedProtocolMessageType('MapInt64ToStringEntry', (_message.Message,), dict(
    DESCRIPTOR = _TESTALLTYPES_MAPINT64TOSTRINGENTRY,
    __module__ = 'tensorflow.tools.proto_text.test_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes.MapInt64ToStringEntry)
    ))
  ,

  AnotherMapStringToMessageEntry = _reflection.GeneratedProtocolMessageType('AnotherMapStringToMessageEntry', (_message.Message,), dict(
    DESCRIPTOR = _TESTALLTYPES_ANOTHERMAPSTRINGTOMESSAGEENTRY,
    __module__ = 'tensorflow.tools.proto_text.test_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes.AnotherMapStringToMessageEntry)
    ))
  ,
  DESCRIPTOR = _TESTALLTYPES,
  __module__ = 'tensorflow.tools.proto_text.test_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes)
  ))
_sym_db.RegisterMessage(TestAllTypes)
_sym_db.RegisterMessage(TestAllTypes.NestedMessage)
_sym_db.RegisterMessage(TestAllTypes.NestedMessage.DoubleNestedMessage)
_sym_db.RegisterMessage(TestAllTypes.MapStringToMessageEntry)
_sym_db.RegisterMessage(TestAllTypes.MapInt32ToMessageEntry)
_sym_db.RegisterMessage(TestAllTypes.MapInt64ToMessageEntry)
_sym_db.RegisterMessage(TestAllTypes.MapBoolToMessageEntry)
_sym_db.RegisterMessage(TestAllTypes.MapStringToInt64Entry)
_sym_db.RegisterMessage(TestAllTypes.MapInt64ToStringEntry)
_sym_db.RegisterMessage(TestAllTypes.AnotherMapStringToMessageEntry)

NestedTestAllTypes = _reflection.GeneratedProtocolMessageType('NestedTestAllTypes', (_message.Message,), dict(

  MapStringToInt64Entry = _reflection.GeneratedProtocolMessageType('MapStringToInt64Entry', (_message.Message,), dict(
    DESCRIPTOR = _NESTEDTESTALLTYPES_MAPSTRINGTOINT64ENTRY,
    __module__ = 'tensorflow.tools.proto_text.test_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.test.NestedTestAllTypes.MapStringToInt64Entry)
    ))
  ,
  DESCRIPTOR = _NESTEDTESTALLTYPES,
  __module__ = 'tensorflow.tools.proto_text.test_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.test.NestedTestAllTypes)
  ))
_sym_db.RegisterMessage(NestedTestAllTypes)
_sym_db.RegisterMessage(NestedTestAllTypes.MapStringToInt64Entry)

ForeignMessage = _reflection.GeneratedProtocolMessageType('ForeignMessage', (_message.Message,), dict(
  DESCRIPTOR = _FOREIGNMESSAGE,
  __module__ = 'tensorflow.tools.proto_text.test_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.test.ForeignMessage)
  ))
_sym_db.RegisterMessage(ForeignMessage)

TestEmptyMessage = _reflection.GeneratedProtocolMessageType('TestEmptyMessage', (_message.Message,), dict(
  DESCRIPTOR = _TESTEMPTYMESSAGE,
  __module__ = 'tensorflow.tools.proto_text.test_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.test.TestEmptyMessage)
  ))
_sym_db.RegisterMessage(TestEmptyMessage)


_TESTALLTYPES_MAPSTRINGTOMESSAGEENTRY.has_options = True
_TESTALLTYPES_MAPSTRINGTOMESSAGEENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_TESTALLTYPES_MAPINT32TOMESSAGEENTRY.has_options = True
_TESTALLTYPES_MAPINT32TOMESSAGEENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_TESTALLTYPES_MAPINT64TOMESSAGEENTRY.has_options = True
_TESTALLTYPES_MAPINT64TOMESSAGEENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_TESTALLTYPES_MAPBOOLTOMESSAGEENTRY.has_options = True
_TESTALLTYPES_MAPBOOLTOMESSAGEENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_TESTALLTYPES_MAPSTRINGTOINT64ENTRY.has_options = True
_TESTALLTYPES_MAPSTRINGTOINT64ENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_TESTALLTYPES_MAPINT64TOSTRINGENTRY.has_options = True
_TESTALLTYPES_MAPINT64TOSTRINGENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_TESTALLTYPES_ANOTHERMAPSTRINGTOMESSAGEENTRY.has_options = True
_TESTALLTYPES_ANOTHERMAPSTRINGTOMESSAGEENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_TESTALLTYPES.fields_by_name['packed_repeated_int64'].has_options = True
_TESTALLTYPES.fields_by_name['packed_repeated_int64']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_NESTEDTESTALLTYPES_MAPSTRINGTOINT64ENTRY.has_options = True
_NESTEDTESTALLTYPES_MAPSTRINGTOINT64ENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
