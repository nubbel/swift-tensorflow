# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tensorflow/tools/tfprof/tfprof_log.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='tensorflow/tools/tfprof/tfprof_log.proto',
  package='tensorflow.tfprof',
  syntax='proto2',
  serialized_pb=_b('\n(tensorflow/tools/tfprof/tfprof_log.proto\x12\x11tensorflow.tfprof\"<\n\nOpLogEntry\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\tfloat_ops\x18\x02 \x01(\x03\x12\r\n\x05types\x18\x03 \x03(\t\";\n\x05OpLog\x12\x32\n\x0blog_entries\x18\x01 \x03(\x0b\x32\x1d.tensorflow.tfprof.OpLogEntry')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_OPLOGENTRY = _descriptor.Descriptor(
  name='OpLogEntry',
  full_name='tensorflow.tfprof.OpLogEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='tensorflow.tfprof.OpLogEntry.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='float_ops', full_name='tensorflow.tfprof.OpLogEntry.float_ops', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='types', full_name='tensorflow.tfprof.OpLogEntry.types', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=63,
  serialized_end=123,
)


_OPLOG = _descriptor.Descriptor(
  name='OpLog',
  full_name='tensorflow.tfprof.OpLog',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_entries', full_name='tensorflow.tfprof.OpLog.log_entries', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=125,
  serialized_end=184,
)

_OPLOG.fields_by_name['log_entries'].message_type = _OPLOGENTRY
DESCRIPTOR.message_types_by_name['OpLogEntry'] = _OPLOGENTRY
DESCRIPTOR.message_types_by_name['OpLog'] = _OPLOG

OpLogEntry = _reflection.GeneratedProtocolMessageType('OpLogEntry', (_message.Message,), dict(
  DESCRIPTOR = _OPLOGENTRY,
  __module__ = 'tensorflow.tools.tfprof.tfprof_log_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.tfprof.OpLogEntry)
  ))
_sym_db.RegisterMessage(OpLogEntry)

OpLog = _reflection.GeneratedProtocolMessageType('OpLog', (_message.Message,), dict(
  DESCRIPTOR = _OPLOG,
  __module__ = 'tensorflow.tools.tfprof.tfprof_log_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.tfprof.OpLog)
  ))
_sym_db.RegisterMessage(OpLog)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
