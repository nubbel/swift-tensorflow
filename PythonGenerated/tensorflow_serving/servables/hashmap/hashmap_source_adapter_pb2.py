# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tensorflow_serving/servables/hashmap/hashmap_source_adapter.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='tensorflow_serving/servables/hashmap/hashmap_source_adapter.proto',
  package='tensorflow.serving',
  syntax='proto3',
  serialized_pb=_b('\nAtensorflow_serving/servables/hashmap/hashmap_source_adapter.proto\x12\x12tensorflow.serving\"}\n\x1aHashmapSourceAdapterConfig\x12\x45\n\x06\x66ormat\x18\x01 \x01(\x0e\x32\x35.tensorflow.serving.HashmapSourceAdapterConfig.Format\"\x18\n\x06\x46ormat\x12\x0e\n\nSIMPLE_CSV\x10\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_HASHMAPSOURCEADAPTERCONFIG_FORMAT = _descriptor.EnumDescriptor(
  name='Format',
  full_name='tensorflow.serving.HashmapSourceAdapterConfig.Format',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SIMPLE_CSV', index=0, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=190,
  serialized_end=214,
)
_sym_db.RegisterEnumDescriptor(_HASHMAPSOURCEADAPTERCONFIG_FORMAT)


_HASHMAPSOURCEADAPTERCONFIG = _descriptor.Descriptor(
  name='HashmapSourceAdapterConfig',
  full_name='tensorflow.serving.HashmapSourceAdapterConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='format', full_name='tensorflow.serving.HashmapSourceAdapterConfig.format', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _HASHMAPSOURCEADAPTERCONFIG_FORMAT,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=89,
  serialized_end=214,
)

_HASHMAPSOURCEADAPTERCONFIG.fields_by_name['format'].enum_type = _HASHMAPSOURCEADAPTERCONFIG_FORMAT
_HASHMAPSOURCEADAPTERCONFIG_FORMAT.containing_type = _HASHMAPSOURCEADAPTERCONFIG
DESCRIPTOR.message_types_by_name['HashmapSourceAdapterConfig'] = _HASHMAPSOURCEADAPTERCONFIG

HashmapSourceAdapterConfig = _reflection.GeneratedProtocolMessageType('HashmapSourceAdapterConfig', (_message.Message,), dict(
  DESCRIPTOR = _HASHMAPSOURCEADAPTERCONFIG,
  __module__ = 'tensorflow_serving.servables.hashmap.hashmap_source_adapter_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.serving.HashmapSourceAdapterConfig)
  ))
_sym_db.RegisterMessage(HashmapSourceAdapterConfig)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
