/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: tensorflow_serving/sources/storage_path/static_storage_path_source.proto
 *
 */

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _1: SwiftProtobuf.ProtobufAPIVersion_1 {}
  typealias Version = _1
}

/// Config proto for StaticStoragePathSource.
public struct Tensorflow_Serving_StaticStoragePathSourceConfig: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".StaticStoragePathSourceConfig"

  /// The single servable name, version number and path to supply statically.
  public var servableName: String = String()

  public var versionNum: Int64 = 0

  public var versionPath: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.servableName)
      case 2: try decoder.decodeSingularInt64Field(value: &self.versionNum)
      case 3: try decoder.decodeSingularStringField(value: &self.versionPath)
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.servableName.isEmpty {
      try visitor.visitSingularStringField(value: self.servableName, fieldNumber: 1)
    }
    if self.versionNum != 0 {
      try visitor.visitSingularInt64Field(value: self.versionNum, fieldNumber: 2)
    }
    if !self.versionPath.isEmpty {
      try visitor.visitSingularStringField(value: self.versionPath, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "tensorflow.serving"

extension Tensorflow_Serving_StaticStoragePathSourceConfig: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "servable_name"),
    2: .standard(proto: "version_num"),
    3: .standard(proto: "version_path"),
  ]

  public func _protobuf_generated_isEqualTo(other: Tensorflow_Serving_StaticStoragePathSourceConfig) -> Bool {
    if self.servableName != other.servableName {return false}
    if self.versionNum != other.versionNum {return false}
    if self.versionPath != other.versionPath {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
