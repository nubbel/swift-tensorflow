// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/apis/regression.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow_serving/apis/regression.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {
namespace serving {
class RegressionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Regression> {
} _Regression_default_instance_;
class RegressionResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegressionResult> {
} _RegressionResult_default_instance_;
class RegressionRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegressionRequest> {
} _RegressionRequest_default_instance_;
class RegressionResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegressionResponse> {
} _RegressionResponse_default_instance_;

namespace protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Regression, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Regression, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegressionResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegressionResult, regressions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegressionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegressionRequest, model_spec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegressionRequest, input_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegressionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegressionResponse, result_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Regression)},
  { 5, -1, sizeof(RegressionResult)},
  { 10, -1, sizeof(RegressionRequest)},
  { 16, -1, sizeof(RegressionResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Regression_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegressionResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegressionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegressionResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tensorflow_serving/apis/regression.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _Regression_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _RegressionResult_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _RegressionRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _RegressionResponse_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::tensorflow::serving::protobuf_tensorflow_5fserving_2fapis_2finput_2eproto::InitDefaults();
  ::tensorflow::serving::protobuf_tensorflow_5fserving_2fapis_2fmodel_2eproto::InitDefaults();
  _Regression_default_instance_.DefaultConstruct();
  _RegressionResult_default_instance_.DefaultConstruct();
  _RegressionRequest_default_instance_.DefaultConstruct();
  _RegressionResponse_default_instance_.DefaultConstruct();
  _RegressionRequest_default_instance_.get_mutable()->model_spec_ = const_cast< ::tensorflow::serving::ModelSpec*>(
      ::tensorflow::serving::ModelSpec::internal_default_instance());
  _RegressionRequest_default_instance_.get_mutable()->input_ = const_cast< ::tensorflow::serving::Input*>(
      ::tensorflow::serving::Input::internal_default_instance());
  _RegressionResponse_default_instance_.get_mutable()->result_ = const_cast< ::tensorflow::serving::RegressionResult*>(
      ::tensorflow::serving::RegressionResult::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n(tensorflow_serving/apis/regression.pro"
      "to\022\022tensorflow.serving\032#tensorflow_servi"
      "ng/apis/input.proto\032#tensorflow_serving/"
      "apis/model.proto\"\033\n\nRegression\022\r\n\005value\030"
      "\001 \001(\002\"G\n\020RegressionResult\0223\n\013regressions"
      "\030\001 \003(\0132\036.tensorflow.serving.Regression\"p"
      "\n\021RegressionRequest\0221\n\nmodel_spec\030\001 \001(\0132"
      "\035.tensorflow.serving.ModelSpec\022(\n\005input\030"
      "\002 \001(\0132\031.tensorflow.serving.Input\"J\n\022Regr"
      "essionResponse\0224\n\006result\030\001 \001(\0132$.tensorf"
      "low.serving.RegressionResultB\003\370\001\001b\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 441);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow_serving/apis/regression.proto", &protobuf_RegisterTypes);
  ::tensorflow::serving::protobuf_tensorflow_5fserving_2fapis_2finput_2eproto::AddDescriptors();
  ::tensorflow::serving::protobuf_tensorflow_5fserving_2fapis_2fmodel_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Regression::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Regression::Regression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.Regression)
}
Regression::Regression(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.Regression)
}
Regression::Regression(const Regression& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.Regression)
}

void Regression::SharedCtor() {
  value_ = 0;
  _cached_size_ = 0;
}

Regression::~Regression() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.Regression)
  SharedDtor();
}

void Regression::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void Regression::ArenaDtor(void* object) {
  Regression* _this = reinterpret_cast< Regression* >(object);
  (void)_this;
}
void Regression::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Regression::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Regression::descriptor() {
  protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::file_level_metadata[0].descriptor;
}

const Regression& Regression::default_instance() {
  protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::InitDefaults();
  return *internal_default_instance();
}

Regression* Regression::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Regression>(arena);
}

void Regression::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.Regression)
  value_ = 0;
}

bool Regression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.Regression)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float value = 1;
      case 1: {
        if (tag == 13u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.Regression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.Regression)
  return false;
#undef DO_
}

void Regression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.Regression)
  // float value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.serving.Regression)
}

::google::protobuf::uint8* Regression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.Regression)
  // float value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.Regression)
  return target;
}

size_t Regression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.Regression)
  size_t total_size = 0;

  // float value = 1;
  if (this->value() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Regression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.Regression)
  GOOGLE_DCHECK_NE(&from, this);
  const Regression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Regression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.Regression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.Regression)
    MergeFrom(*source);
  }
}

void Regression::MergeFrom(const Regression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.Regression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Regression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.Regression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Regression::CopyFrom(const Regression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.Regression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Regression::IsInitialized() const {
  return true;
}

void Regression::Swap(Regression* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Regression* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Regression::UnsafeArenaSwap(Regression* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Regression::InternalSwap(Regression* other) {
  std::swap(value_, other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Regression::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Regression

// float value = 1;
void Regression::clear_value() {
  value_ = 0;
}
float Regression::value() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.Regression.value)
  return value_;
}
void Regression::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.serving.Regression.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegressionResult::kRegressionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegressionResult::RegressionResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.RegressionResult)
}
RegressionResult::RegressionResult(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  regressions_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.RegressionResult)
}
RegressionResult::RegressionResult(const RegressionResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      regressions_(from.regressions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.RegressionResult)
}

void RegressionResult::SharedCtor() {
  _cached_size_ = 0;
}

RegressionResult::~RegressionResult() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.RegressionResult)
  SharedDtor();
}

void RegressionResult::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void RegressionResult::ArenaDtor(void* object) {
  RegressionResult* _this = reinterpret_cast< RegressionResult* >(object);
  (void)_this;
}
void RegressionResult::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RegressionResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegressionResult::descriptor() {
  protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::file_level_metadata[1].descriptor;
}

const RegressionResult& RegressionResult::default_instance() {
  protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegressionResult* RegressionResult::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<RegressionResult>(arena);
}

void RegressionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.RegressionResult)
  regressions_.Clear();
}

bool RegressionResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.RegressionResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.serving.Regression regressions = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_regressions()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.RegressionResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.RegressionResult)
  return false;
#undef DO_
}

void RegressionResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.RegressionResult)
  // repeated .tensorflow.serving.Regression regressions = 1;
  for (unsigned int i = 0, n = this->regressions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->regressions(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.serving.RegressionResult)
}

::google::protobuf::uint8* RegressionResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.RegressionResult)
  // repeated .tensorflow.serving.Regression regressions = 1;
  for (unsigned int i = 0, n = this->regressions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->regressions(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.RegressionResult)
  return target;
}

size_t RegressionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.RegressionResult)
  size_t total_size = 0;

  // repeated .tensorflow.serving.Regression regressions = 1;
  {
    unsigned int count = this->regressions_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->regressions(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegressionResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.RegressionResult)
  GOOGLE_DCHECK_NE(&from, this);
  const RegressionResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegressionResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.RegressionResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.RegressionResult)
    MergeFrom(*source);
  }
}

void RegressionResult::MergeFrom(const RegressionResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.RegressionResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  regressions_.MergeFrom(from.regressions_);
}

void RegressionResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.RegressionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegressionResult::CopyFrom(const RegressionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.RegressionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegressionResult::IsInitialized() const {
  return true;
}

void RegressionResult::Swap(RegressionResult* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RegressionResult* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RegressionResult::UnsafeArenaSwap(RegressionResult* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RegressionResult::InternalSwap(RegressionResult* other) {
  regressions_.UnsafeArenaSwap(&other->regressions_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegressionResult::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegressionResult

// repeated .tensorflow.serving.Regression regressions = 1;
int RegressionResult::regressions_size() const {
  return regressions_.size();
}
void RegressionResult::clear_regressions() {
  regressions_.Clear();
}
const ::tensorflow::serving::Regression& RegressionResult::regressions(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.RegressionResult.regressions)
  return regressions_.Get(index);
}
::tensorflow::serving::Regression* RegressionResult::mutable_regressions(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.RegressionResult.regressions)
  return regressions_.Mutable(index);
}
::tensorflow::serving::Regression* RegressionResult::add_regressions() {
  // @@protoc_insertion_point(field_add:tensorflow.serving.RegressionResult.regressions)
  return regressions_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::serving::Regression >*
RegressionResult::mutable_regressions() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.serving.RegressionResult.regressions)
  return &regressions_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::serving::Regression >&
RegressionResult::regressions() const {
  // @@protoc_insertion_point(field_list:tensorflow.serving.RegressionResult.regressions)
  return regressions_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void RegressionRequest::_slow_mutable_model_spec() {
  model_spec_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::serving::ModelSpec >(
      GetArenaNoVirtual());
}
::tensorflow::serving::ModelSpec* RegressionRequest::_slow_release_model_spec() {
  if (model_spec_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::serving::ModelSpec* temp = new ::tensorflow::serving::ModelSpec(*model_spec_);
    model_spec_ = NULL;
    return temp;
  }
}
::tensorflow::serving::ModelSpec* RegressionRequest::unsafe_arena_release_model_spec() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.serving.RegressionRequest.model_spec)
  
  ::tensorflow::serving::ModelSpec* temp = model_spec_;
  model_spec_ = NULL;
  return temp;
}
void RegressionRequest::_slow_set_allocated_model_spec(
    ::google::protobuf::Arena* message_arena, ::tensorflow::serving::ModelSpec** model_spec) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*model_spec) == NULL) {
      message_arena->Own(*model_spec);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*model_spec)) {
      ::tensorflow::serving::ModelSpec* new_model_spec = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::serving::ModelSpec >(
            message_arena);
      new_model_spec->CopyFrom(**model_spec);
      *model_spec = new_model_spec;
    }
}
void RegressionRequest::unsafe_arena_set_allocated_model_spec(
    ::tensorflow::serving::ModelSpec* model_spec) {
  if (GetArenaNoVirtual() == NULL) {
    delete model_spec_;
  }
  model_spec_ = model_spec;
  if (model_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.RegressionRequest.model_spec)
}
void RegressionRequest::_slow_mutable_input() {
  input_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::serving::Input >(
      GetArenaNoVirtual());
}
::tensorflow::serving::Input* RegressionRequest::_slow_release_input() {
  if (input_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::serving::Input* temp = new ::tensorflow::serving::Input(*input_);
    input_ = NULL;
    return temp;
  }
}
::tensorflow::serving::Input* RegressionRequest::unsafe_arena_release_input() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.serving.RegressionRequest.input)
  
  ::tensorflow::serving::Input* temp = input_;
  input_ = NULL;
  return temp;
}
void RegressionRequest::_slow_set_allocated_input(
    ::google::protobuf::Arena* message_arena, ::tensorflow::serving::Input** input) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*input) == NULL) {
      message_arena->Own(*input);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*input)) {
      ::tensorflow::serving::Input* new_input = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::serving::Input >(
            message_arena);
      new_input->CopyFrom(**input);
      *input = new_input;
    }
}
void RegressionRequest::unsafe_arena_set_allocated_input(
    ::tensorflow::serving::Input* input) {
  if (GetArenaNoVirtual() == NULL) {
    delete input_;
  }
  input_ = input;
  if (input) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.RegressionRequest.input)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegressionRequest::kModelSpecFieldNumber;
const int RegressionRequest::kInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegressionRequest::RegressionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.RegressionRequest)
}
RegressionRequest::RegressionRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.RegressionRequest)
}
RegressionRequest::RegressionRequest(const RegressionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_model_spec()) {
    model_spec_ = new ::tensorflow::serving::ModelSpec(*from.model_spec_);
  } else {
    model_spec_ = NULL;
  }
  if (from.has_input()) {
    input_ = new ::tensorflow::serving::Input(*from.input_);
  } else {
    input_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.RegressionRequest)
}

void RegressionRequest::SharedCtor() {
  ::memset(&model_spec_, 0, reinterpret_cast<char*>(&input_) -
    reinterpret_cast<char*>(&model_spec_) + sizeof(input_));
  _cached_size_ = 0;
}

RegressionRequest::~RegressionRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.RegressionRequest)
  SharedDtor();
}

void RegressionRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) {
    delete model_spec_;
  }
  if (this != internal_default_instance()) {
    delete input_;
  }
}

void RegressionRequest::ArenaDtor(void* object) {
  RegressionRequest* _this = reinterpret_cast< RegressionRequest* >(object);
  (void)_this;
}
void RegressionRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RegressionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegressionRequest::descriptor() {
  protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::file_level_metadata[2].descriptor;
}

const RegressionRequest& RegressionRequest::default_instance() {
  protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegressionRequest* RegressionRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<RegressionRequest>(arena);
}

void RegressionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.RegressionRequest)
  if (GetArenaNoVirtual() == NULL && model_spec_ != NULL) {
    delete model_spec_;
  }
  model_spec_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_ != NULL) {
    delete input_;
  }
  input_ = NULL;
}

bool RegressionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.RegressionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.serving.ModelSpec model_spec = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_model_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.serving.Input input = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.RegressionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.RegressionRequest)
  return false;
#undef DO_
}

void RegressionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.RegressionRequest)
  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->has_model_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->model_spec_, output);
  }

  // .tensorflow.serving.Input input = 2;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->input_, output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.serving.RegressionRequest)
}

::google::protobuf::uint8* RegressionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.RegressionRequest)
  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->has_model_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->model_spec_, false, target);
  }

  // .tensorflow.serving.Input input = 2;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->input_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.RegressionRequest)
  return target;
}

size_t RegressionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.RegressionRequest)
  size_t total_size = 0;

  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->has_model_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->model_spec_);
  }

  // .tensorflow.serving.Input input = 2;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->input_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegressionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.RegressionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegressionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegressionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.RegressionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.RegressionRequest)
    MergeFrom(*source);
  }
}

void RegressionRequest::MergeFrom(const RegressionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.RegressionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_model_spec()) {
    mutable_model_spec()->::tensorflow::serving::ModelSpec::MergeFrom(from.model_spec());
  }
  if (from.has_input()) {
    mutable_input()->::tensorflow::serving::Input::MergeFrom(from.input());
  }
}

void RegressionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.RegressionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegressionRequest::CopyFrom(const RegressionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.RegressionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegressionRequest::IsInitialized() const {
  return true;
}

void RegressionRequest::Swap(RegressionRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RegressionRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RegressionRequest::UnsafeArenaSwap(RegressionRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RegressionRequest::InternalSwap(RegressionRequest* other) {
  std::swap(model_spec_, other->model_spec_);
  std::swap(input_, other->input_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegressionRequest::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegressionRequest

// .tensorflow.serving.ModelSpec model_spec = 1;
bool RegressionRequest::has_model_spec() const {
  return this != internal_default_instance() && model_spec_ != NULL;
}
void RegressionRequest::clear_model_spec() {
  if (GetArenaNoVirtual() == NULL && model_spec_ != NULL) delete model_spec_;
  model_spec_ = NULL;
}
const ::tensorflow::serving::ModelSpec& RegressionRequest::model_spec() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.RegressionRequest.model_spec)
  return model_spec_ != NULL ? *model_spec_
                         : *::tensorflow::serving::ModelSpec::internal_default_instance();
}
::tensorflow::serving::ModelSpec* RegressionRequest::mutable_model_spec() {
  
  if (model_spec_ == NULL) {
    _slow_mutable_model_spec();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.RegressionRequest.model_spec)
  return model_spec_;
}
::tensorflow::serving::ModelSpec* RegressionRequest::release_model_spec() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.RegressionRequest.model_spec)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_model_spec();
  } else {
    ::tensorflow::serving::ModelSpec* temp = model_spec_;
    model_spec_ = NULL;
    return temp;
  }
}
 void RegressionRequest::set_allocated_model_spec(::tensorflow::serving::ModelSpec* model_spec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete model_spec_;
  }
  if (model_spec != NULL) {
    _slow_set_allocated_model_spec(message_arena, &model_spec);
  }
  model_spec_ = model_spec;
  if (model_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.RegressionRequest.model_spec)
}

// .tensorflow.serving.Input input = 2;
bool RegressionRequest::has_input() const {
  return this != internal_default_instance() && input_ != NULL;
}
void RegressionRequest::clear_input() {
  if (GetArenaNoVirtual() == NULL && input_ != NULL) delete input_;
  input_ = NULL;
}
const ::tensorflow::serving::Input& RegressionRequest::input() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.RegressionRequest.input)
  return input_ != NULL ? *input_
                         : *::tensorflow::serving::Input::internal_default_instance();
}
::tensorflow::serving::Input* RegressionRequest::mutable_input() {
  
  if (input_ == NULL) {
    _slow_mutable_input();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.RegressionRequest.input)
  return input_;
}
::tensorflow::serving::Input* RegressionRequest::release_input() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.RegressionRequest.input)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_input();
  } else {
    ::tensorflow::serving::Input* temp = input_;
    input_ = NULL;
    return temp;
  }
}
 void RegressionRequest::set_allocated_input(::tensorflow::serving::Input* input) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete input_;
  }
  if (input != NULL) {
    _slow_set_allocated_input(message_arena, &input);
  }
  input_ = input;
  if (input) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.RegressionRequest.input)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void RegressionResponse::_slow_mutable_result() {
  result_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::serving::RegressionResult >(
      GetArenaNoVirtual());
}
::tensorflow::serving::RegressionResult* RegressionResponse::_slow_release_result() {
  if (result_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::serving::RegressionResult* temp = new ::tensorflow::serving::RegressionResult(*result_);
    result_ = NULL;
    return temp;
  }
}
::tensorflow::serving::RegressionResult* RegressionResponse::unsafe_arena_release_result() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.serving.RegressionResponse.result)
  
  ::tensorflow::serving::RegressionResult* temp = result_;
  result_ = NULL;
  return temp;
}
void RegressionResponse::_slow_set_allocated_result(
    ::google::protobuf::Arena* message_arena, ::tensorflow::serving::RegressionResult** result) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*result) == NULL) {
      message_arena->Own(*result);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*result)) {
      ::tensorflow::serving::RegressionResult* new_result = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::serving::RegressionResult >(
            message_arena);
      new_result->CopyFrom(**result);
      *result = new_result;
    }
}
void RegressionResponse::unsafe_arena_set_allocated_result(
    ::tensorflow::serving::RegressionResult* result) {
  if (GetArenaNoVirtual() == NULL) {
    delete result_;
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.RegressionResponse.result)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegressionResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegressionResponse::RegressionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.RegressionResponse)
}
RegressionResponse::RegressionResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.RegressionResponse)
}
RegressionResponse::RegressionResponse(const RegressionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_result()) {
    result_ = new ::tensorflow::serving::RegressionResult(*from.result_);
  } else {
    result_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.RegressionResponse)
}

void RegressionResponse::SharedCtor() {
  result_ = NULL;
  _cached_size_ = 0;
}

RegressionResponse::~RegressionResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.RegressionResponse)
  SharedDtor();
}

void RegressionResponse::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) {
    delete result_;
  }
}

void RegressionResponse::ArenaDtor(void* object) {
  RegressionResponse* _this = reinterpret_cast< RegressionResponse* >(object);
  (void)_this;
}
void RegressionResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RegressionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegressionResponse::descriptor() {
  protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::file_level_metadata[3].descriptor;
}

const RegressionResponse& RegressionResponse::default_instance() {
  protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegressionResponse* RegressionResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<RegressionResponse>(arena);
}

void RegressionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.RegressionResponse)
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
}

bool RegressionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.RegressionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.serving.RegressionResult result = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.RegressionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.RegressionResponse)
  return false;
#undef DO_
}

void RegressionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.RegressionResponse)
  // .tensorflow.serving.RegressionResult result = 1;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->result_, output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.serving.RegressionResponse)
}

::google::protobuf::uint8* RegressionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.RegressionResponse)
  // .tensorflow.serving.RegressionResult result = 1;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->result_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.RegressionResponse)
  return target;
}

size_t RegressionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.RegressionResponse)
  size_t total_size = 0;

  // .tensorflow.serving.RegressionResult result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegressionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.RegressionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegressionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegressionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.RegressionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.RegressionResponse)
    MergeFrom(*source);
  }
}

void RegressionResponse::MergeFrom(const RegressionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.RegressionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_result()) {
    mutable_result()->::tensorflow::serving::RegressionResult::MergeFrom(from.result());
  }
}

void RegressionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.RegressionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegressionResponse::CopyFrom(const RegressionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.RegressionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegressionResponse::IsInitialized() const {
  return true;
}

void RegressionResponse::Swap(RegressionResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RegressionResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RegressionResponse::UnsafeArenaSwap(RegressionResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RegressionResponse::InternalSwap(RegressionResponse* other) {
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegressionResponse::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2fapis_2fregression_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegressionResponse

// .tensorflow.serving.RegressionResult result = 1;
bool RegressionResponse::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
void RegressionResponse::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
const ::tensorflow::serving::RegressionResult& RegressionResponse::result() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.RegressionResponse.result)
  return result_ != NULL ? *result_
                         : *::tensorflow::serving::RegressionResult::internal_default_instance();
}
::tensorflow::serving::RegressionResult* RegressionResponse::mutable_result() {
  
  if (result_ == NULL) {
    _slow_mutable_result();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.RegressionResponse.result)
  return result_;
}
::tensorflow::serving::RegressionResult* RegressionResponse::release_result() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.RegressionResponse.result)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_result();
  } else {
    ::tensorflow::serving::RegressionResult* temp = result_;
    result_ = NULL;
    return temp;
  }
}
 void RegressionResponse::set_allocated_result(::tensorflow::serving::RegressionResult* result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete result_;
  }
  if (result != NULL) {
    _slow_set_allocated_result(message_arena, &result);
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.RegressionResponse.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace serving
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
