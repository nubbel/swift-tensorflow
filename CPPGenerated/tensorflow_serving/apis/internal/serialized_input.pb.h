// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/apis/internal/serialized_input.proto

#ifndef PROTOBUF_tensorflow_5fserving_2fapis_2finternal_2fserialized_5finput_2eproto__INCLUDED
#define PROTOBUF_tensorflow_5fserving_2fapis_2finternal_2fserialized_5finput_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace tensorflow {
namespace serving {
namespace internal {
class SerializedExampleList;
class SerializedExampleListDefaultTypeInternal;
extern SerializedExampleListDefaultTypeInternal _SerializedExampleList_default_instance_;
class SerializedExampleListWithContext;
class SerializedExampleListWithContextDefaultTypeInternal;
extern SerializedExampleListWithContextDefaultTypeInternal _SerializedExampleListWithContext_default_instance_;
class SerializedInput;
class SerializedInputDefaultTypeInternal;
extern SerializedInputDefaultTypeInternal _SerializedInput_default_instance_;
}  // namespace internal
}  // namespace serving
}  // namespace tensorflow

namespace tensorflow {
namespace serving {
namespace internal {

namespace protobuf_tensorflow_5fserving_2fapis_2finternal_2fserialized_5finput_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_tensorflow_5fserving_2fapis_2finternal_2fserialized_5finput_2eproto

// ===================================================================

class SerializedExampleList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.internal.SerializedExampleList) */ {
 public:
  SerializedExampleList();
  virtual ~SerializedExampleList();

  SerializedExampleList(const SerializedExampleList& from);

  inline SerializedExampleList& operator=(const SerializedExampleList& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedExampleList& default_instance();

  static inline const SerializedExampleList* internal_default_instance() {
    return reinterpret_cast<const SerializedExampleList*>(
               &_SerializedExampleList_default_instance_);
  }

  void UnsafeArenaSwap(SerializedExampleList* other);
  void Swap(SerializedExampleList* other);

  // implements Message ----------------------------------------------

  inline SerializedExampleList* New() const PROTOBUF_FINAL { return New(NULL); }

  SerializedExampleList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SerializedExampleList& from);
  void MergeFrom(const SerializedExampleList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SerializedExampleList* other);
  protected:
  explicit SerializedExampleList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes examples = 1;
  int examples_size() const;
  void clear_examples();
  static const int kExamplesFieldNumber = 1;
  const ::std::string& examples(int index) const;
  ::std::string* mutable_examples(int index);
  void set_examples(int index, const ::std::string& value);
  void set_examples(int index, const char* value);
  void set_examples(int index, const void* value, size_t size);
  ::std::string* add_examples();
  void add_examples(const ::std::string& value);
  void add_examples(const char* value);
  void add_examples(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& examples() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_examples();

  // @@protoc_insertion_point(class_scope:tensorflow.serving.internal.SerializedExampleList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> examples_;
  mutable int _cached_size_;
  friend struct  protobuf_tensorflow_5fserving_2fapis_2finternal_2fserialized_5finput_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedExampleListWithContext : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.internal.SerializedExampleListWithContext) */ {
 public:
  SerializedExampleListWithContext();
  virtual ~SerializedExampleListWithContext();

  SerializedExampleListWithContext(const SerializedExampleListWithContext& from);

  inline SerializedExampleListWithContext& operator=(const SerializedExampleListWithContext& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedExampleListWithContext& default_instance();

  static inline const SerializedExampleListWithContext* internal_default_instance() {
    return reinterpret_cast<const SerializedExampleListWithContext*>(
               &_SerializedExampleListWithContext_default_instance_);
  }

  void UnsafeArenaSwap(SerializedExampleListWithContext* other);
  void Swap(SerializedExampleListWithContext* other);

  // implements Message ----------------------------------------------

  inline SerializedExampleListWithContext* New() const PROTOBUF_FINAL { return New(NULL); }

  SerializedExampleListWithContext* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SerializedExampleListWithContext& from);
  void MergeFrom(const SerializedExampleListWithContext& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SerializedExampleListWithContext* other);
  protected:
  explicit SerializedExampleListWithContext(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes examples = 1;
  int examples_size() const;
  void clear_examples();
  static const int kExamplesFieldNumber = 1;
  const ::std::string& examples(int index) const;
  ::std::string* mutable_examples(int index);
  void set_examples(int index, const ::std::string& value);
  void set_examples(int index, const char* value);
  void set_examples(int index, const void* value, size_t size);
  ::std::string* add_examples();
  void add_examples(const ::std::string& value);
  void add_examples(const char* value);
  void add_examples(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& examples() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_examples();

  // bytes context = 2;
  void clear_context();
  static const int kContextFieldNumber = 2;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  void set_context(const char* value);
  void set_context(const void* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);
  ::std::string* unsafe_arena_release_context();
  void unsafe_arena_set_allocated_context(
      ::std::string* context);

  // @@protoc_insertion_point(class_scope:tensorflow.serving.internal.SerializedExampleListWithContext)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> examples_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  mutable int _cached_size_;
  friend struct  protobuf_tensorflow_5fserving_2fapis_2finternal_2fserialized_5finput_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.internal.SerializedInput) */ {
 public:
  SerializedInput();
  virtual ~SerializedInput();

  SerializedInput(const SerializedInput& from);

  inline SerializedInput& operator=(const SerializedInput& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedInput& default_instance();

  enum KindCase {
    kExampleList = 1,
    kExampleListWithContext = 2,
    KIND_NOT_SET = 0,
  };

  static inline const SerializedInput* internal_default_instance() {
    return reinterpret_cast<const SerializedInput*>(
               &_SerializedInput_default_instance_);
  }

  void UnsafeArenaSwap(SerializedInput* other);
  void Swap(SerializedInput* other);

  // implements Message ----------------------------------------------

  inline SerializedInput* New() const PROTOBUF_FINAL { return New(NULL); }

  SerializedInput* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SerializedInput& from);
  void MergeFrom(const SerializedInput& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SerializedInput* other);
  protected:
  explicit SerializedInput(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .tensorflow.serving.internal.SerializedExampleList example_list = 1;
  bool has_example_list() const;
  void clear_example_list();
  static const int kExampleListFieldNumber = 1;
  private:
  void _slow_mutable_example_list();
  void _slow_set_allocated_example_list(
      ::google::protobuf::Arena* message_arena, ::tensorflow::serving::internal::SerializedExampleList** example_list);
  ::tensorflow::serving::internal::SerializedExampleList* _slow_release_example_list();
  public:
  const ::tensorflow::serving::internal::SerializedExampleList& example_list() const;
  ::tensorflow::serving::internal::SerializedExampleList* mutable_example_list();
  ::tensorflow::serving::internal::SerializedExampleList* release_example_list();
  void set_allocated_example_list(::tensorflow::serving::internal::SerializedExampleList* example_list);
  ::tensorflow::serving::internal::SerializedExampleList* unsafe_arena_release_example_list();
  void unsafe_arena_set_allocated_example_list(
      ::tensorflow::serving::internal::SerializedExampleList* example_list);

  // .tensorflow.serving.internal.SerializedExampleListWithContext example_list_with_context = 2;
  bool has_example_list_with_context() const;
  void clear_example_list_with_context();
  static const int kExampleListWithContextFieldNumber = 2;
  private:
  void _slow_mutable_example_list_with_context();
  void _slow_set_allocated_example_list_with_context(
      ::google::protobuf::Arena* message_arena, ::tensorflow::serving::internal::SerializedExampleListWithContext** example_list_with_context);
  ::tensorflow::serving::internal::SerializedExampleListWithContext* _slow_release_example_list_with_context();
  public:
  const ::tensorflow::serving::internal::SerializedExampleListWithContext& example_list_with_context() const;
  ::tensorflow::serving::internal::SerializedExampleListWithContext* mutable_example_list_with_context();
  ::tensorflow::serving::internal::SerializedExampleListWithContext* release_example_list_with_context();
  void set_allocated_example_list_with_context(::tensorflow::serving::internal::SerializedExampleListWithContext* example_list_with_context);
  ::tensorflow::serving::internal::SerializedExampleListWithContext* unsafe_arena_release_example_list_with_context();
  void unsafe_arena_set_allocated_example_list_with_context(
      ::tensorflow::serving::internal::SerializedExampleListWithContext* example_list_with_context);

  KindCase kind_case() const;
  // @@protoc_insertion_point(class_scope:tensorflow.serving.internal.SerializedInput)
 private:
  void set_has_example_list();
  void set_has_example_list_with_context();

  inline bool has_kind() const;
  void clear_kind();
  inline void clear_has_kind();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union KindUnion {
    KindUnion() {}
    ::tensorflow::serving::internal::SerializedExampleList* example_list_;
    ::tensorflow::serving::internal::SerializedExampleListWithContext* example_list_with_context_;
  } kind_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_tensorflow_5fserving_2fapis_2finternal_2fserialized_5finput_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SerializedExampleList

// repeated bytes examples = 1;
inline int SerializedExampleList::examples_size() const {
  return examples_.size();
}
inline void SerializedExampleList::clear_examples() {
  examples_.Clear();
}
inline const ::std::string& SerializedExampleList::examples(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.internal.SerializedExampleList.examples)
  return examples_.Get(index);
}
inline ::std::string* SerializedExampleList::mutable_examples(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.internal.SerializedExampleList.examples)
  return examples_.Mutable(index);
}
inline void SerializedExampleList::set_examples(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.serving.internal.SerializedExampleList.examples)
  examples_.Mutable(index)->assign(value);
}
inline void SerializedExampleList::set_examples(int index, const char* value) {
  examples_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.internal.SerializedExampleList.examples)
}
inline void SerializedExampleList::set_examples(int index, const void* value, size_t size) {
  examples_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.internal.SerializedExampleList.examples)
}
inline ::std::string* SerializedExampleList::add_examples() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.serving.internal.SerializedExampleList.examples)
  return examples_.Add();
}
inline void SerializedExampleList::add_examples(const ::std::string& value) {
  examples_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.serving.internal.SerializedExampleList.examples)
}
inline void SerializedExampleList::add_examples(const char* value) {
  examples_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.serving.internal.SerializedExampleList.examples)
}
inline void SerializedExampleList::add_examples(const void* value, size_t size) {
  examples_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.serving.internal.SerializedExampleList.examples)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SerializedExampleList::examples() const {
  // @@protoc_insertion_point(field_list:tensorflow.serving.internal.SerializedExampleList.examples)
  return examples_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SerializedExampleList::mutable_examples() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.serving.internal.SerializedExampleList.examples)
  return &examples_;
}

// -------------------------------------------------------------------

// SerializedExampleListWithContext

// repeated bytes examples = 1;
inline int SerializedExampleListWithContext::examples_size() const {
  return examples_.size();
}
inline void SerializedExampleListWithContext::clear_examples() {
  examples_.Clear();
}
inline const ::std::string& SerializedExampleListWithContext::examples(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.internal.SerializedExampleListWithContext.examples)
  return examples_.Get(index);
}
inline ::std::string* SerializedExampleListWithContext::mutable_examples(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.internal.SerializedExampleListWithContext.examples)
  return examples_.Mutable(index);
}
inline void SerializedExampleListWithContext::set_examples(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.serving.internal.SerializedExampleListWithContext.examples)
  examples_.Mutable(index)->assign(value);
}
inline void SerializedExampleListWithContext::set_examples(int index, const char* value) {
  examples_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.internal.SerializedExampleListWithContext.examples)
}
inline void SerializedExampleListWithContext::set_examples(int index, const void* value, size_t size) {
  examples_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.internal.SerializedExampleListWithContext.examples)
}
inline ::std::string* SerializedExampleListWithContext::add_examples() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.serving.internal.SerializedExampleListWithContext.examples)
  return examples_.Add();
}
inline void SerializedExampleListWithContext::add_examples(const ::std::string& value) {
  examples_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.serving.internal.SerializedExampleListWithContext.examples)
}
inline void SerializedExampleListWithContext::add_examples(const char* value) {
  examples_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.serving.internal.SerializedExampleListWithContext.examples)
}
inline void SerializedExampleListWithContext::add_examples(const void* value, size_t size) {
  examples_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.serving.internal.SerializedExampleListWithContext.examples)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SerializedExampleListWithContext::examples() const {
  // @@protoc_insertion_point(field_list:tensorflow.serving.internal.SerializedExampleListWithContext.examples)
  return examples_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SerializedExampleListWithContext::mutable_examples() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.serving.internal.SerializedExampleListWithContext.examples)
  return &examples_;
}

// bytes context = 2;
inline void SerializedExampleListWithContext::clear_context() {
  context_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SerializedExampleListWithContext::context() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.internal.SerializedExampleListWithContext.context)
  return context_.Get();
}
inline void SerializedExampleListWithContext::set_context(const ::std::string& value) {
  
  context_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.serving.internal.SerializedExampleListWithContext.context)
}
inline void SerializedExampleListWithContext::set_context(const char* value) {
  
  context_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.internal.SerializedExampleListWithContext.context)
}
inline void SerializedExampleListWithContext::set_context(const void* value,
    size_t size) {
  
  context_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.internal.SerializedExampleListWithContext.context)
}
inline ::std::string* SerializedExampleListWithContext::mutable_context() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.internal.SerializedExampleListWithContext.context)
  return context_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SerializedExampleListWithContext::release_context() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.internal.SerializedExampleListWithContext.context)
  
  return context_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SerializedExampleListWithContext::unsafe_arena_release_context() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.serving.internal.SerializedExampleListWithContext.context)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return context_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SerializedExampleListWithContext::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    
  } else {
    
  }
  context_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.internal.SerializedExampleListWithContext.context)
}
inline void SerializedExampleListWithContext::unsafe_arena_set_allocated_context(
    ::std::string* context) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (context != NULL) {
    
  } else {
    
  }
  context_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      context, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.internal.SerializedExampleListWithContext.context)
}

// -------------------------------------------------------------------

// SerializedInput

// .tensorflow.serving.internal.SerializedExampleList example_list = 1;
inline bool SerializedInput::has_example_list() const {
  return kind_case() == kExampleList;
}
inline void SerializedInput::set_has_example_list() {
  _oneof_case_[0] = kExampleList;
}
inline void SerializedInput::clear_example_list() {
  if (has_example_list()) {
    if (GetArenaNoVirtual() == NULL) {
      delete kind_.example_list_;
    }
    clear_has_kind();
  }
}
inline  const ::tensorflow::serving::internal::SerializedExampleList& SerializedInput::example_list() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.internal.SerializedInput.example_list)
  return has_example_list()
      ? *kind_.example_list_
      : ::tensorflow::serving::internal::SerializedExampleList::default_instance();
}
inline ::tensorflow::serving::internal::SerializedExampleList* SerializedInput::mutable_example_list() {
  if (!has_example_list()) {
    clear_kind();
    set_has_example_list();
    kind_.example_list_ = 
      ::google::protobuf::Arena::CreateMessage< ::tensorflow::serving::internal::SerializedExampleList >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.internal.SerializedInput.example_list)
  return kind_.example_list_;
}
inline ::tensorflow::serving::internal::SerializedExampleList* SerializedInput::release_example_list() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.internal.SerializedInput.example_list)
  if (has_example_list()) {
    clear_has_kind();
    if (GetArenaNoVirtual() != NULL) {
      ::tensorflow::serving::internal::SerializedExampleList* temp = new ::tensorflow::serving::internal::SerializedExampleList(*kind_.example_list_);
      kind_.example_list_ = NULL;
      return temp;
    } else {
      ::tensorflow::serving::internal::SerializedExampleList* temp = kind_.example_list_;
      kind_.example_list_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
inline void SerializedInput::set_allocated_example_list(::tensorflow::serving::internal::SerializedExampleList* example_list) {
  clear_kind();
  if (example_list) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(example_list) == NULL) {
      GetArenaNoVirtual()->Own(example_list);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(example_list)) {
      ::tensorflow::serving::internal::SerializedExampleList* new_example_list = 
          ::google::protobuf::Arena::CreateMessage< ::tensorflow::serving::internal::SerializedExampleList >(
          GetArenaNoVirtual());
      new_example_list->CopyFrom(*example_list);
      example_list = new_example_list;
    }
    set_has_example_list();
    kind_.example_list_ = example_list;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.internal.SerializedInput.example_list)
}
inline  ::tensorflow::serving::internal::SerializedExampleList* SerializedInput::unsafe_arena_release_example_list() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.serving.internal.SerializedInput.example_list)
  if (has_example_list()) {
    clear_has_kind();
    ::tensorflow::serving::internal::SerializedExampleList* temp = kind_.example_list_;
    kind_.example_list_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline  void SerializedInput::unsafe_arena_set_allocated_example_list(::tensorflow::serving::internal::SerializedExampleList* example_list) {
  clear_kind();
  if (example_list) {
    set_has_example_list();
    kind_.example_list_ = example_list;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.internal.SerializedInput.example_list)
}

// .tensorflow.serving.internal.SerializedExampleListWithContext example_list_with_context = 2;
inline bool SerializedInput::has_example_list_with_context() const {
  return kind_case() == kExampleListWithContext;
}
inline void SerializedInput::set_has_example_list_with_context() {
  _oneof_case_[0] = kExampleListWithContext;
}
inline void SerializedInput::clear_example_list_with_context() {
  if (has_example_list_with_context()) {
    if (GetArenaNoVirtual() == NULL) {
      delete kind_.example_list_with_context_;
    }
    clear_has_kind();
  }
}
inline  const ::tensorflow::serving::internal::SerializedExampleListWithContext& SerializedInput::example_list_with_context() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.internal.SerializedInput.example_list_with_context)
  return has_example_list_with_context()
      ? *kind_.example_list_with_context_
      : ::tensorflow::serving::internal::SerializedExampleListWithContext::default_instance();
}
inline ::tensorflow::serving::internal::SerializedExampleListWithContext* SerializedInput::mutable_example_list_with_context() {
  if (!has_example_list_with_context()) {
    clear_kind();
    set_has_example_list_with_context();
    kind_.example_list_with_context_ = 
      ::google::protobuf::Arena::CreateMessage< ::tensorflow::serving::internal::SerializedExampleListWithContext >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.internal.SerializedInput.example_list_with_context)
  return kind_.example_list_with_context_;
}
inline ::tensorflow::serving::internal::SerializedExampleListWithContext* SerializedInput::release_example_list_with_context() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.internal.SerializedInput.example_list_with_context)
  if (has_example_list_with_context()) {
    clear_has_kind();
    if (GetArenaNoVirtual() != NULL) {
      ::tensorflow::serving::internal::SerializedExampleListWithContext* temp = new ::tensorflow::serving::internal::SerializedExampleListWithContext(*kind_.example_list_with_context_);
      kind_.example_list_with_context_ = NULL;
      return temp;
    } else {
      ::tensorflow::serving::internal::SerializedExampleListWithContext* temp = kind_.example_list_with_context_;
      kind_.example_list_with_context_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
inline void SerializedInput::set_allocated_example_list_with_context(::tensorflow::serving::internal::SerializedExampleListWithContext* example_list_with_context) {
  clear_kind();
  if (example_list_with_context) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(example_list_with_context) == NULL) {
      GetArenaNoVirtual()->Own(example_list_with_context);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(example_list_with_context)) {
      ::tensorflow::serving::internal::SerializedExampleListWithContext* new_example_list_with_context = 
          ::google::protobuf::Arena::CreateMessage< ::tensorflow::serving::internal::SerializedExampleListWithContext >(
          GetArenaNoVirtual());
      new_example_list_with_context->CopyFrom(*example_list_with_context);
      example_list_with_context = new_example_list_with_context;
    }
    set_has_example_list_with_context();
    kind_.example_list_with_context_ = example_list_with_context;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.internal.SerializedInput.example_list_with_context)
}
inline  ::tensorflow::serving::internal::SerializedExampleListWithContext* SerializedInput::unsafe_arena_release_example_list_with_context() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.serving.internal.SerializedInput.example_list_with_context)
  if (has_example_list_with_context()) {
    clear_has_kind();
    ::tensorflow::serving::internal::SerializedExampleListWithContext* temp = kind_.example_list_with_context_;
    kind_.example_list_with_context_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline  void SerializedInput::unsafe_arena_set_allocated_example_list_with_context(::tensorflow::serving::internal::SerializedExampleListWithContext* example_list_with_context) {
  clear_kind();
  if (example_list_with_context) {
    set_has_example_list_with_context();
    kind_.example_list_with_context_ = example_list_with_context;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.internal.SerializedInput.example_list_with_context)
}

inline bool SerializedInput::has_kind() const {
  return kind_case() != KIND_NOT_SET;
}
inline void SerializedInput::clear_has_kind() {
  _oneof_case_[0] = KIND_NOT_SET;
}
inline SerializedInput::KindCase SerializedInput::kind_case() const {
  return SerializedInput::KindCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace internal
}  // namespace serving
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tensorflow_5fserving_2fapis_2finternal_2fserialized_5finput_2eproto__INCLUDED
