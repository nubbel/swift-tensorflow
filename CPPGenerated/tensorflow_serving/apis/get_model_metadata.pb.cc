// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/apis/get_model_metadata.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow_serving/apis/get_model_metadata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {
namespace serving {
class SignatureDefMapDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SignatureDefMap> {
} _SignatureDefMap_default_instance_;
class GetModelMetadataRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetModelMetadataRequest> {
} _GetModelMetadataRequest_default_instance_;
class GetModelMetadataResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetModelMetadataResponse> {
} _GetModelMetadataResponse_default_instance_;

namespace protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignatureDefMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignatureDefMap, signature_def_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModelMetadataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModelMetadataRequest, model_spec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModelMetadataRequest, metadata_field_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModelMetadataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModelMetadataResponse, model_spec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetModelMetadataResponse, metadata_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(SignatureDefMap)},
  { 5, -1, sizeof(GetModelMetadataRequest)},
  { 11, -1, sizeof(GetModelMetadataResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SignatureDefMap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetModelMetadataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetModelMetadataResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tensorflow_serving/apis/get_model_metadata.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
  const ::google::protobuf::Descriptor* SignatureDefMap_SignatureDefEntry_descriptor = protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::file_level_metadata[0].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        SignatureDefMap_SignatureDefEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::tensorflow::SignatureDef,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                SignatureDefMap_SignatureDefEntry_descriptor));
  const ::google::protobuf::Descriptor* GetModelMetadataResponse_MetadataEntry_descriptor = protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::file_level_metadata[3].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        GetModelMetadataResponse_MetadataEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::google::protobuf::Any,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                GetModelMetadataResponse_MetadataEntry_descriptor));
}

}  // namespace

void TableStruct::Shutdown() {
  _SignatureDefMap_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _GetModelMetadataRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _GetModelMetadataResponse_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::InitDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::InitDefaults();
  ::tensorflow::serving::protobuf_tensorflow_5fserving_2fapis_2fmodel_2eproto::InitDefaults();
  _SignatureDefMap_default_instance_.DefaultConstruct();
  _GetModelMetadataRequest_default_instance_.DefaultConstruct();
  _GetModelMetadataResponse_default_instance_.DefaultConstruct();
  _GetModelMetadataRequest_default_instance_.get_mutable()->model_spec_ = const_cast< ::tensorflow::serving::ModelSpec*>(
      ::tensorflow::serving::ModelSpec::internal_default_instance());
  _GetModelMetadataResponse_default_instance_.get_mutable()->model_spec_ = const_cast< ::tensorflow::serving::ModelSpec*>(
      ::tensorflow::serving::ModelSpec::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n0tensorflow_serving/apis/get_model_meta"
      "data.proto\022\022tensorflow.serving\032\031google/p"
      "rotobuf/any.proto\032)tensorflow/core/proto"
      "buf/meta_graph.proto\032#tensorflow_serving"
      "/apis/model.proto\"\256\001\n\017SignatureDefMap\022L\n"
      "\rsignature_def\030\001 \003(\01325.tensorflow.servin"
      "g.SignatureDefMap.SignatureDefEntry\032M\n\021S"
      "ignatureDefEntry\022\013\n\003key\030\001 \001(\t\022\'\n\005value\030\002"
      " \001(\0132\030.tensorflow.SignatureDef:\0028\001\"d\n\027Ge"
      "tModelMetadataRequest\0221\n\nmodel_spec\030\001 \001("
      "\0132\035.tensorflow.serving.ModelSpec\022\026\n\016meta"
      "data_field\030\002 \003(\t\"\342\001\n\030GetModelMetadataRes"
      "ponse\0221\n\nmodel_spec\030\001 \001(\0132\035.tensorflow.s"
      "erving.ModelSpec\022L\n\010metadata\030\002 \003(\0132:.ten"
      "sorflow.serving.GetModelMetadataResponse"
      ".MetadataEntry\032E\n\rMetadataEntry\022\013\n\003key\030\001"
      " \001(\t\022#\n\005value\030\002 \001(\0132\024.google.protobuf.An"
      "y:\0028\001B\003\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 698);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow_serving/apis/get_model_metadata.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::AddDescriptors();
  ::tensorflow::serving::protobuf_tensorflow_5fserving_2fapis_2fmodel_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto


// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignatureDefMap::kSignatureDefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignatureDefMap::SignatureDefMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.SignatureDefMap)
}
SignatureDefMap::SignatureDefMap(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  signature_def_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.SignatureDefMap)
}
SignatureDefMap::SignatureDefMap(const SignatureDefMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& SignatureDefMap_SignatureDefEntry_descriptor = protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::file_level_metadata[0].descriptor;
  signature_def_.SetAssignDescriptorCallback(
      protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::protobuf_AssignDescriptorsOnce);
  signature_def_.SetEntryDescriptor(
      &SignatureDefMap_SignatureDefEntry_descriptor);
  signature_def_.MergeFrom(from.signature_def_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.SignatureDefMap)
}

void SignatureDefMap::SharedCtor() {
  const ::google::protobuf::Descriptor*& SignatureDefMap_SignatureDefEntry_descriptor = protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::file_level_metadata[0].descriptor;
  signature_def_.SetAssignDescriptorCallback(
      protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::protobuf_AssignDescriptorsOnce);
  signature_def_.SetEntryDescriptor(
      &SignatureDefMap_SignatureDefEntry_descriptor);
  _cached_size_ = 0;
}

SignatureDefMap::~SignatureDefMap() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.SignatureDefMap)
  SharedDtor();
}

void SignatureDefMap::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void SignatureDefMap::ArenaDtor(void* object) {
  SignatureDefMap* _this = reinterpret_cast< SignatureDefMap* >(object);
  (void)_this;
}
void SignatureDefMap::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SignatureDefMap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignatureDefMap::descriptor() {
  protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::file_level_metadata[1].descriptor;
}

const SignatureDefMap& SignatureDefMap::default_instance() {
  protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

SignatureDefMap* SignatureDefMap::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<SignatureDefMap>(arena);
}

void SignatureDefMap::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.SignatureDefMap)
  signature_def_.Clear();
}

bool SignatureDefMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.SignatureDefMap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .tensorflow.SignatureDef> signature_def = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          SignatureDefMap_SignatureDefEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::tensorflow::SignatureDef,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef > > parser(&signature_def_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.SignatureDefMap.SignatureDefEntry.key"));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.SignatureDefMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.SignatureDefMap)
  return false;
#undef DO_
}

void SignatureDefMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.SignatureDefMap)
  // map<string, .tensorflow.SignatureDef> signature_def = 1;
  if (!this->signature_def().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.serving.SignatureDefMap.SignatureDefEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->signature_def().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->signature_def().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >::const_iterator
          it = this->signature_def().begin();
          it != this->signature_def().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SignatureDefMap_SignatureDefEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(signature_def_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SignatureDefMap_SignatureDefEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >::const_iterator
          it = this->signature_def().begin();
          it != this->signature_def().end(); ++it) {
        entry.reset(signature_def_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.serving.SignatureDefMap)
}

::google::protobuf::uint8* SignatureDefMap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.SignatureDefMap)
  // map<string, .tensorflow.SignatureDef> signature_def = 1;
  if (!this->signature_def().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.serving.SignatureDefMap.SignatureDefEntry.key");
      }
    };

    if (deterministic &&
        this->signature_def().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->signature_def().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >::const_iterator
          it = this->signature_def().begin();
          it != this->signature_def().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<SignatureDefMap_SignatureDefEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(signature_def_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SignatureDefMap_SignatureDefEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >::const_iterator
          it = this->signature_def().begin();
          it != this->signature_def().end(); ++it) {
        entry.reset(signature_def_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.SignatureDefMap)
  return target;
}

size_t SignatureDefMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.SignatureDefMap)
  size_t total_size = 0;

  // map<string, .tensorflow.SignatureDef> signature_def = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->signature_def_size());
  {
    ::google::protobuf::scoped_ptr<SignatureDefMap_SignatureDefEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >::const_iterator
        it = this->signature_def().begin();
        it != this->signature_def().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(signature_def_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignatureDefMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.SignatureDefMap)
  GOOGLE_DCHECK_NE(&from, this);
  const SignatureDefMap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignatureDefMap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.SignatureDefMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.SignatureDefMap)
    MergeFrom(*source);
  }
}

void SignatureDefMap::MergeFrom(const SignatureDefMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.SignatureDefMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_def_.MergeFrom(from.signature_def_);
}

void SignatureDefMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.SignatureDefMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignatureDefMap::CopyFrom(const SignatureDefMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.SignatureDefMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignatureDefMap::IsInitialized() const {
  return true;
}

void SignatureDefMap::Swap(SignatureDefMap* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SignatureDefMap* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SignatureDefMap::UnsafeArenaSwap(SignatureDefMap* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SignatureDefMap::InternalSwap(SignatureDefMap* other) {
  signature_def_.Swap(&other->signature_def_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SignatureDefMap::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SignatureDefMap

// map<string, .tensorflow.SignatureDef> signature_def = 1;
int SignatureDefMap::signature_def_size() const {
  return signature_def_.size();
}
void SignatureDefMap::clear_signature_def() {
  signature_def_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >&
SignatureDefMap::signature_def() const {
  // @@protoc_insertion_point(field_map:tensorflow.serving.SignatureDefMap.signature_def)
  return signature_def_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::tensorflow::SignatureDef >*
SignatureDefMap::mutable_signature_def() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.serving.SignatureDefMap.signature_def)
  return signature_def_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void GetModelMetadataRequest::_slow_mutable_model_spec() {
  model_spec_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::serving::ModelSpec >(
      GetArenaNoVirtual());
}
::tensorflow::serving::ModelSpec* GetModelMetadataRequest::_slow_release_model_spec() {
  if (model_spec_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::serving::ModelSpec* temp = new ::tensorflow::serving::ModelSpec(*model_spec_);
    model_spec_ = NULL;
    return temp;
  }
}
::tensorflow::serving::ModelSpec* GetModelMetadataRequest::unsafe_arena_release_model_spec() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.serving.GetModelMetadataRequest.model_spec)
  
  ::tensorflow::serving::ModelSpec* temp = model_spec_;
  model_spec_ = NULL;
  return temp;
}
void GetModelMetadataRequest::_slow_set_allocated_model_spec(
    ::google::protobuf::Arena* message_arena, ::tensorflow::serving::ModelSpec** model_spec) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*model_spec) == NULL) {
      message_arena->Own(*model_spec);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*model_spec)) {
      ::tensorflow::serving::ModelSpec* new_model_spec = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::serving::ModelSpec >(
            message_arena);
      new_model_spec->CopyFrom(**model_spec);
      *model_spec = new_model_spec;
    }
}
void GetModelMetadataRequest::unsafe_arena_set_allocated_model_spec(
    ::tensorflow::serving::ModelSpec* model_spec) {
  if (GetArenaNoVirtual() == NULL) {
    delete model_spec_;
  }
  model_spec_ = model_spec;
  if (model_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.GetModelMetadataRequest.model_spec)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetModelMetadataRequest::kModelSpecFieldNumber;
const int GetModelMetadataRequest::kMetadataFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetModelMetadataRequest::GetModelMetadataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.GetModelMetadataRequest)
}
GetModelMetadataRequest::GetModelMetadataRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  metadata_field_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.GetModelMetadataRequest)
}
GetModelMetadataRequest::GetModelMetadataRequest(const GetModelMetadataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      metadata_field_(from.metadata_field_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_model_spec()) {
    model_spec_ = new ::tensorflow::serving::ModelSpec(*from.model_spec_);
  } else {
    model_spec_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.GetModelMetadataRequest)
}

void GetModelMetadataRequest::SharedCtor() {
  model_spec_ = NULL;
  _cached_size_ = 0;
}

GetModelMetadataRequest::~GetModelMetadataRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.GetModelMetadataRequest)
  SharedDtor();
}

void GetModelMetadataRequest::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) {
    delete model_spec_;
  }
}

void GetModelMetadataRequest::ArenaDtor(void* object) {
  GetModelMetadataRequest* _this = reinterpret_cast< GetModelMetadataRequest* >(object);
  (void)_this;
}
void GetModelMetadataRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GetModelMetadataRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetModelMetadataRequest::descriptor() {
  protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::file_level_metadata[2].descriptor;
}

const GetModelMetadataRequest& GetModelMetadataRequest::default_instance() {
  protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetModelMetadataRequest* GetModelMetadataRequest::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<GetModelMetadataRequest>(arena);
}

void GetModelMetadataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.GetModelMetadataRequest)
  metadata_field_.Clear();
  if (GetArenaNoVirtual() == NULL && model_spec_ != NULL) {
    delete model_spec_;
  }
  model_spec_ = NULL;
}

bool GetModelMetadataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.GetModelMetadataRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.serving.ModelSpec model_spec = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_model_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string metadata_field = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_metadata_field()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->metadata_field(this->metadata_field_size() - 1).data(),
            this->metadata_field(this->metadata_field_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.GetModelMetadataRequest.metadata_field"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.GetModelMetadataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.GetModelMetadataRequest)
  return false;
#undef DO_
}

void GetModelMetadataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.GetModelMetadataRequest)
  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->has_model_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->model_spec_, output);
  }

  // repeated string metadata_field = 2;
  for (int i = 0; i < this->metadata_field_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metadata_field(i).data(), this->metadata_field(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.GetModelMetadataRequest.metadata_field");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->metadata_field(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.serving.GetModelMetadataRequest)
}

::google::protobuf::uint8* GetModelMetadataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.GetModelMetadataRequest)
  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->has_model_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->model_spec_, false, target);
  }

  // repeated string metadata_field = 2;
  for (int i = 0; i < this->metadata_field_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->metadata_field(i).data(), this->metadata_field(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.GetModelMetadataRequest.metadata_field");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->metadata_field(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.GetModelMetadataRequest)
  return target;
}

size_t GetModelMetadataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.GetModelMetadataRequest)
  size_t total_size = 0;

  // repeated string metadata_field = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metadata_field_size());
  for (int i = 0; i < this->metadata_field_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->metadata_field(i));
  }

  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->has_model_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->model_spec_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetModelMetadataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.GetModelMetadataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetModelMetadataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetModelMetadataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.GetModelMetadataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.GetModelMetadataRequest)
    MergeFrom(*source);
  }
}

void GetModelMetadataRequest::MergeFrom(const GetModelMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.GetModelMetadataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_field_.MergeFrom(from.metadata_field_);
  if (from.has_model_spec()) {
    mutable_model_spec()->::tensorflow::serving::ModelSpec::MergeFrom(from.model_spec());
  }
}

void GetModelMetadataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.GetModelMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetModelMetadataRequest::CopyFrom(const GetModelMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.GetModelMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModelMetadataRequest::IsInitialized() const {
  return true;
}

void GetModelMetadataRequest::Swap(GetModelMetadataRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetModelMetadataRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GetModelMetadataRequest::UnsafeArenaSwap(GetModelMetadataRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetModelMetadataRequest::InternalSwap(GetModelMetadataRequest* other) {
  metadata_field_.UnsafeArenaSwap(&other->metadata_field_);
  std::swap(model_spec_, other->model_spec_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetModelMetadataRequest::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetModelMetadataRequest

// .tensorflow.serving.ModelSpec model_spec = 1;
bool GetModelMetadataRequest::has_model_spec() const {
  return this != internal_default_instance() && model_spec_ != NULL;
}
void GetModelMetadataRequest::clear_model_spec() {
  if (GetArenaNoVirtual() == NULL && model_spec_ != NULL) delete model_spec_;
  model_spec_ = NULL;
}
const ::tensorflow::serving::ModelSpec& GetModelMetadataRequest::model_spec() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.GetModelMetadataRequest.model_spec)
  return model_spec_ != NULL ? *model_spec_
                         : *::tensorflow::serving::ModelSpec::internal_default_instance();
}
::tensorflow::serving::ModelSpec* GetModelMetadataRequest::mutable_model_spec() {
  
  if (model_spec_ == NULL) {
    _slow_mutable_model_spec();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.GetModelMetadataRequest.model_spec)
  return model_spec_;
}
::tensorflow::serving::ModelSpec* GetModelMetadataRequest::release_model_spec() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.GetModelMetadataRequest.model_spec)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_model_spec();
  } else {
    ::tensorflow::serving::ModelSpec* temp = model_spec_;
    model_spec_ = NULL;
    return temp;
  }
}
 void GetModelMetadataRequest::set_allocated_model_spec(::tensorflow::serving::ModelSpec* model_spec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete model_spec_;
  }
  if (model_spec != NULL) {
    _slow_set_allocated_model_spec(message_arena, &model_spec);
  }
  model_spec_ = model_spec;
  if (model_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.GetModelMetadataRequest.model_spec)
}

// repeated string metadata_field = 2;
int GetModelMetadataRequest::metadata_field_size() const {
  return metadata_field_.size();
}
void GetModelMetadataRequest::clear_metadata_field() {
  metadata_field_.Clear();
}
const ::std::string& GetModelMetadataRequest::metadata_field(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.GetModelMetadataRequest.metadata_field)
  return metadata_field_.Get(index);
}
::std::string* GetModelMetadataRequest::mutable_metadata_field(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.GetModelMetadataRequest.metadata_field)
  return metadata_field_.Mutable(index);
}
void GetModelMetadataRequest::set_metadata_field(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.serving.GetModelMetadataRequest.metadata_field)
  metadata_field_.Mutable(index)->assign(value);
}
void GetModelMetadataRequest::set_metadata_field(int index, const char* value) {
  metadata_field_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.GetModelMetadataRequest.metadata_field)
}
void GetModelMetadataRequest::set_metadata_field(int index, const char* value, size_t size) {
  metadata_field_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.GetModelMetadataRequest.metadata_field)
}
::std::string* GetModelMetadataRequest::add_metadata_field() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.serving.GetModelMetadataRequest.metadata_field)
  return metadata_field_.Add();
}
void GetModelMetadataRequest::add_metadata_field(const ::std::string& value) {
  metadata_field_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.serving.GetModelMetadataRequest.metadata_field)
}
void GetModelMetadataRequest::add_metadata_field(const char* value) {
  metadata_field_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.serving.GetModelMetadataRequest.metadata_field)
}
void GetModelMetadataRequest::add_metadata_field(const char* value, size_t size) {
  metadata_field_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.serving.GetModelMetadataRequest.metadata_field)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetModelMetadataRequest::metadata_field() const {
  // @@protoc_insertion_point(field_list:tensorflow.serving.GetModelMetadataRequest.metadata_field)
  return metadata_field_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
GetModelMetadataRequest::mutable_metadata_field() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.serving.GetModelMetadataRequest.metadata_field)
  return &metadata_field_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void GetModelMetadataResponse::_slow_mutable_model_spec() {
  model_spec_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::serving::ModelSpec >(
      GetArenaNoVirtual());
}
::tensorflow::serving::ModelSpec* GetModelMetadataResponse::_slow_release_model_spec() {
  if (model_spec_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::serving::ModelSpec* temp = new ::tensorflow::serving::ModelSpec(*model_spec_);
    model_spec_ = NULL;
    return temp;
  }
}
::tensorflow::serving::ModelSpec* GetModelMetadataResponse::unsafe_arena_release_model_spec() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.serving.GetModelMetadataResponse.model_spec)
  
  ::tensorflow::serving::ModelSpec* temp = model_spec_;
  model_spec_ = NULL;
  return temp;
}
void GetModelMetadataResponse::_slow_set_allocated_model_spec(
    ::google::protobuf::Arena* message_arena, ::tensorflow::serving::ModelSpec** model_spec) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*model_spec) == NULL) {
      message_arena->Own(*model_spec);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*model_spec)) {
      ::tensorflow::serving::ModelSpec* new_model_spec = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::serving::ModelSpec >(
            message_arena);
      new_model_spec->CopyFrom(**model_spec);
      *model_spec = new_model_spec;
    }
}
void GetModelMetadataResponse::unsafe_arena_set_allocated_model_spec(
    ::tensorflow::serving::ModelSpec* model_spec) {
  if (GetArenaNoVirtual() == NULL) {
    delete model_spec_;
  }
  model_spec_ = model_spec;
  if (model_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.GetModelMetadataResponse.model_spec)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetModelMetadataResponse::kModelSpecFieldNumber;
const int GetModelMetadataResponse::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetModelMetadataResponse::GetModelMetadataResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.GetModelMetadataResponse)
}
GetModelMetadataResponse::GetModelMetadataResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.GetModelMetadataResponse)
}
GetModelMetadataResponse::GetModelMetadataResponse(const GetModelMetadataResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& GetModelMetadataResponse_MetadataEntry_descriptor = protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::file_level_metadata[3].descriptor;
  metadata_.SetAssignDescriptorCallback(
      protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::protobuf_AssignDescriptorsOnce);
  metadata_.SetEntryDescriptor(
      &GetModelMetadataResponse_MetadataEntry_descriptor);
  metadata_.MergeFrom(from.metadata_);
  if (from.has_model_spec()) {
    model_spec_ = new ::tensorflow::serving::ModelSpec(*from.model_spec_);
  } else {
    model_spec_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.GetModelMetadataResponse)
}

void GetModelMetadataResponse::SharedCtor() {
  const ::google::protobuf::Descriptor*& GetModelMetadataResponse_MetadataEntry_descriptor = protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::file_level_metadata[3].descriptor;
  metadata_.SetAssignDescriptorCallback(
      protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::protobuf_AssignDescriptorsOnce);
  metadata_.SetEntryDescriptor(
      &GetModelMetadataResponse_MetadataEntry_descriptor);
  model_spec_ = NULL;
  _cached_size_ = 0;
}

GetModelMetadataResponse::~GetModelMetadataResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.GetModelMetadataResponse)
  SharedDtor();
}

void GetModelMetadataResponse::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) {
    delete model_spec_;
  }
}

void GetModelMetadataResponse::ArenaDtor(void* object) {
  GetModelMetadataResponse* _this = reinterpret_cast< GetModelMetadataResponse* >(object);
  (void)_this;
}
void GetModelMetadataResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GetModelMetadataResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetModelMetadataResponse::descriptor() {
  protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::file_level_metadata[4].descriptor;
}

const GetModelMetadataResponse& GetModelMetadataResponse::default_instance() {
  protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetModelMetadataResponse* GetModelMetadataResponse::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<GetModelMetadataResponse>(arena);
}

void GetModelMetadataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.GetModelMetadataResponse)
  metadata_.Clear();
  if (GetArenaNoVirtual() == NULL && model_spec_ != NULL) {
    delete model_spec_;
  }
  model_spec_ = NULL;
}

bool GetModelMetadataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.GetModelMetadataResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.serving.ModelSpec model_spec = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_model_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.protobuf.Any> metadata = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          GetModelMetadataResponse_MetadataEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::google::protobuf::Any,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::Any > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.GetModelMetadataResponse.MetadataEntry.key"));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.GetModelMetadataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.GetModelMetadataResponse)
  return false;
#undef DO_
}

void GetModelMetadataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.GetModelMetadataResponse)
  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->has_model_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->model_spec_, output);
  }

  // map<string, .google.protobuf.Any> metadata = 2;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.serving.GetModelMetadataResponse.MetadataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<GetModelMetadataResponse_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GetModelMetadataResponse_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.serving.GetModelMetadataResponse)
}

::google::protobuf::uint8* GetModelMetadataResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.GetModelMetadataResponse)
  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->has_model_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->model_spec_, false, target);
  }

  // map<string, .google.protobuf.Any> metadata = 2;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.serving.GetModelMetadataResponse.MetadataEntry.key");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<GetModelMetadataResponse_MetadataEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GetModelMetadataResponse_MetadataEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.GetModelMetadataResponse)
  return target;
}

size_t GetModelMetadataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.GetModelMetadataResponse)
  size_t total_size = 0;

  // map<string, .google.protobuf.Any> metadata = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metadata_size());
  {
    ::google::protobuf::scoped_ptr<GetModelMetadataResponse_MetadataEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->has_model_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->model_spec_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetModelMetadataResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.GetModelMetadataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetModelMetadataResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetModelMetadataResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.GetModelMetadataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.GetModelMetadataResponse)
    MergeFrom(*source);
  }
}

void GetModelMetadataResponse::MergeFrom(const GetModelMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.GetModelMetadataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  if (from.has_model_spec()) {
    mutable_model_spec()->::tensorflow::serving::ModelSpec::MergeFrom(from.model_spec());
  }
}

void GetModelMetadataResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.GetModelMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetModelMetadataResponse::CopyFrom(const GetModelMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.GetModelMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModelMetadataResponse::IsInitialized() const {
  return true;
}

void GetModelMetadataResponse::Swap(GetModelMetadataResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GetModelMetadataResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GetModelMetadataResponse::UnsafeArenaSwap(GetModelMetadataResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GetModelMetadataResponse::InternalSwap(GetModelMetadataResponse* other) {
  metadata_.Swap(&other->metadata_);
  std::swap(model_spec_, other->model_spec_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetModelMetadataResponse::GetMetadata() const {
  protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetModelMetadataResponse

// .tensorflow.serving.ModelSpec model_spec = 1;
bool GetModelMetadataResponse::has_model_spec() const {
  return this != internal_default_instance() && model_spec_ != NULL;
}
void GetModelMetadataResponse::clear_model_spec() {
  if (GetArenaNoVirtual() == NULL && model_spec_ != NULL) delete model_spec_;
  model_spec_ = NULL;
}
const ::tensorflow::serving::ModelSpec& GetModelMetadataResponse::model_spec() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.GetModelMetadataResponse.model_spec)
  return model_spec_ != NULL ? *model_spec_
                         : *::tensorflow::serving::ModelSpec::internal_default_instance();
}
::tensorflow::serving::ModelSpec* GetModelMetadataResponse::mutable_model_spec() {
  
  if (model_spec_ == NULL) {
    _slow_mutable_model_spec();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.GetModelMetadataResponse.model_spec)
  return model_spec_;
}
::tensorflow::serving::ModelSpec* GetModelMetadataResponse::release_model_spec() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.GetModelMetadataResponse.model_spec)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_model_spec();
  } else {
    ::tensorflow::serving::ModelSpec* temp = model_spec_;
    model_spec_ = NULL;
    return temp;
  }
}
 void GetModelMetadataResponse::set_allocated_model_spec(::tensorflow::serving::ModelSpec* model_spec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete model_spec_;
  }
  if (model_spec != NULL) {
    _slow_set_allocated_model_spec(message_arena, &model_spec);
  }
  model_spec_ = model_spec;
  if (model_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.GetModelMetadataResponse.model_spec)
}

// map<string, .google.protobuf.Any> metadata = 2;
int GetModelMetadataResponse::metadata_size() const {
  return metadata_.size();
}
void GetModelMetadataResponse::clear_metadata() {
  metadata_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >&
GetModelMetadataResponse::metadata() const {
  // @@protoc_insertion_point(field_map:tensorflow.serving.GetModelMetadataResponse.metadata)
  return metadata_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >*
GetModelMetadataResponse::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.serving.GetModelMetadataResponse.metadata)
  return metadata_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace serving
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
