// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/util/class_registration_test.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow_serving/util/class_registration_test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {
namespace serving {
class Config1DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Config1> {
} _Config1_default_instance_;
class Config2DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Config2> {
} _Config2_default_instance_;
class MessageWithAnyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageWithAny> {
} _MessageWithAny_default_instance_;

namespace protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config1, string_field_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config2, string_field_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageWithAny, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageWithAny, any_field_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Config1)},
  { 5, -1, sizeof(Config2)},
  { 10, -1, sizeof(MessageWithAny)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Config1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Config2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageWithAny_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tensorflow_serving/util/class_registration_test.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _Config1_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Config2_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _MessageWithAny_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::InitDefaults();
  _Config1_default_instance_.DefaultConstruct();
  _Config2_default_instance_.DefaultConstruct();
  _MessageWithAny_default_instance_.DefaultConstruct();
  _MessageWithAny_default_instance_.get_mutable()->any_field_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n5tensorflow_serving/util/class_registra"
      "tion_test.proto\022\022tensorflow.serving\032\031goo"
      "gle/protobuf/any.proto\"\037\n\007Config1\022\024\n\014str"
      "ing_field\030\001 \001(\t\"\037\n\007Config2\022\024\n\014string_fie"
      "ld\030\001 \001(\t\"9\n\016MessageWithAny\022\'\n\tany_field\030"
      "\001 \001(\0132\024.google.protobuf.Anyb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 235);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow_serving/util/class_registration_test.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Config1::kStringFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Config1::Config1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.Config1)
}
Config1::Config1(const Config1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  string_field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.string_field().size() > 0) {
    string_field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_field_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.Config1)
}

void Config1::SharedCtor() {
  string_field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Config1::~Config1() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.Config1)
  SharedDtor();
}

void Config1::SharedDtor() {
  string_field_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Config1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Config1::descriptor() {
  protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::file_level_metadata[0].descriptor;
}

const Config1& Config1::default_instance() {
  protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::InitDefaults();
  return *internal_default_instance();
}

Config1* Config1::New(::google::protobuf::Arena* arena) const {
  Config1* n = new Config1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Config1::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.Config1)
  string_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Config1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.Config1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string string_field = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_field()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_field().data(), this->string_field().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.Config1.string_field"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.Config1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.Config1)
  return false;
#undef DO_
}

void Config1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.Config1)
  // string string_field = 1;
  if (this->string_field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_field().data(), this->string_field().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.Config1.string_field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->string_field(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.serving.Config1)
}

::google::protobuf::uint8* Config1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.Config1)
  // string string_field = 1;
  if (this->string_field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_field().data(), this->string_field().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.Config1.string_field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->string_field(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.Config1)
  return target;
}

size_t Config1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.Config1)
  size_t total_size = 0;

  // string string_field = 1;
  if (this->string_field().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->string_field());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Config1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.Config1)
  GOOGLE_DCHECK_NE(&from, this);
  const Config1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Config1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.Config1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.Config1)
    MergeFrom(*source);
  }
}

void Config1::MergeFrom(const Config1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.Config1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.string_field().size() > 0) {

    string_field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_field_);
  }
}

void Config1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.Config1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Config1::CopyFrom(const Config1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.Config1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Config1::IsInitialized() const {
  return true;
}

void Config1::Swap(Config1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Config1::InternalSwap(Config1* other) {
  string_field_.Swap(&other->string_field_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Config1::GetMetadata() const {
  protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Config1

// string string_field = 1;
void Config1::clear_string_field() {
  string_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Config1::string_field() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.Config1.string_field)
  return string_field_.GetNoArena();
}
void Config1::set_string_field(const ::std::string& value) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.Config1.string_field)
}
#if LANG_CXX11
void Config1::set_string_field(::std::string&& value) {
  
  string_field_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.serving.Config1.string_field)
}
#endif
void Config1::set_string_field(const char* value) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.Config1.string_field)
}
void Config1::set_string_field(const char* value, size_t size) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.Config1.string_field)
}
::std::string* Config1::mutable_string_field() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.Config1.string_field)
  return string_field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Config1::release_string_field() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.Config1.string_field)
  
  return string_field_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Config1::set_allocated_string_field(::std::string* string_field) {
  if (string_field != NULL) {
    
  } else {
    
  }
  string_field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_field);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.Config1.string_field)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Config2::kStringFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Config2::Config2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.Config2)
}
Config2::Config2(const Config2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  string_field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.string_field().size() > 0) {
    string_field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_field_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.Config2)
}

void Config2::SharedCtor() {
  string_field_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Config2::~Config2() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.Config2)
  SharedDtor();
}

void Config2::SharedDtor() {
  string_field_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Config2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Config2::descriptor() {
  protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::file_level_metadata[1].descriptor;
}

const Config2& Config2::default_instance() {
  protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::InitDefaults();
  return *internal_default_instance();
}

Config2* Config2::New(::google::protobuf::Arena* arena) const {
  Config2* n = new Config2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Config2::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.Config2)
  string_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Config2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.Config2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string string_field = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_field()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_field().data(), this->string_field().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.serving.Config2.string_field"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.Config2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.Config2)
  return false;
#undef DO_
}

void Config2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.Config2)
  // string string_field = 1;
  if (this->string_field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_field().data(), this->string_field().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.Config2.string_field");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->string_field(), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.serving.Config2)
}

::google::protobuf::uint8* Config2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.Config2)
  // string string_field = 1;
  if (this->string_field().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_field().data(), this->string_field().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.Config2.string_field");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->string_field(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.Config2)
  return target;
}

size_t Config2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.Config2)
  size_t total_size = 0;

  // string string_field = 1;
  if (this->string_field().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->string_field());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Config2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.Config2)
  GOOGLE_DCHECK_NE(&from, this);
  const Config2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Config2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.Config2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.Config2)
    MergeFrom(*source);
  }
}

void Config2::MergeFrom(const Config2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.Config2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.string_field().size() > 0) {

    string_field_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_field_);
  }
}

void Config2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.Config2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Config2::CopyFrom(const Config2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.Config2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Config2::IsInitialized() const {
  return true;
}

void Config2::Swap(Config2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Config2::InternalSwap(Config2* other) {
  string_field_.Swap(&other->string_field_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Config2::GetMetadata() const {
  protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Config2

// string string_field = 1;
void Config2::clear_string_field() {
  string_field_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Config2::string_field() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.Config2.string_field)
  return string_field_.GetNoArena();
}
void Config2::set_string_field(const ::std::string& value) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.Config2.string_field)
}
#if LANG_CXX11
void Config2::set_string_field(::std::string&& value) {
  
  string_field_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.serving.Config2.string_field)
}
#endif
void Config2::set_string_field(const char* value) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.Config2.string_field)
}
void Config2::set_string_field(const char* value, size_t size) {
  
  string_field_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.Config2.string_field)
}
::std::string* Config2::mutable_string_field() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.Config2.string_field)
  return string_field_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Config2::release_string_field() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.Config2.string_field)
  
  return string_field_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Config2::set_allocated_string_field(::std::string* string_field) {
  if (string_field != NULL) {
    
  } else {
    
  }
  string_field_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_field);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.Config2.string_field)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageWithAny::kAnyFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageWithAny::MessageWithAny()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.serving.MessageWithAny)
}
MessageWithAny::MessageWithAny(const MessageWithAny& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_any_field()) {
    any_field_ = new ::google::protobuf::Any(*from.any_field_);
  } else {
    any_field_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.MessageWithAny)
}

void MessageWithAny::SharedCtor() {
  any_field_ = NULL;
  _cached_size_ = 0;
}

MessageWithAny::~MessageWithAny() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.MessageWithAny)
  SharedDtor();
}

void MessageWithAny::SharedDtor() {
  if (this != internal_default_instance()) {
    delete any_field_;
  }
}

void MessageWithAny::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageWithAny::descriptor() {
  protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::file_level_metadata[2].descriptor;
}

const MessageWithAny& MessageWithAny::default_instance() {
  protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageWithAny* MessageWithAny::New(::google::protobuf::Arena* arena) const {
  MessageWithAny* n = new MessageWithAny;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageWithAny::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.MessageWithAny)
  if (GetArenaNoVirtual() == NULL && any_field_ != NULL) {
    delete any_field_;
  }
  any_field_ = NULL;
}

bool MessageWithAny::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.serving.MessageWithAny)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Any any_field = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_any_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.serving.MessageWithAny)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.serving.MessageWithAny)
  return false;
#undef DO_
}

void MessageWithAny::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.serving.MessageWithAny)
  // .google.protobuf.Any any_field = 1;
  if (this->has_any_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->any_field_, output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.serving.MessageWithAny)
}

::google::protobuf::uint8* MessageWithAny::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.MessageWithAny)
  // .google.protobuf.Any any_field = 1;
  if (this->has_any_field()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->any_field_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.MessageWithAny)
  return target;
}

size_t MessageWithAny::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.MessageWithAny)
  size_t total_size = 0;

  // .google.protobuf.Any any_field = 1;
  if (this->has_any_field()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->any_field_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageWithAny::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.MessageWithAny)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageWithAny* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageWithAny>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.MessageWithAny)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.MessageWithAny)
    MergeFrom(*source);
  }
}

void MessageWithAny::MergeFrom(const MessageWithAny& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.MessageWithAny)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_any_field()) {
    mutable_any_field()->::google::protobuf::Any::MergeFrom(from.any_field());
  }
}

void MessageWithAny::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.MessageWithAny)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageWithAny::CopyFrom(const MessageWithAny& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.MessageWithAny)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageWithAny::IsInitialized() const {
  return true;
}

void MessageWithAny::Swap(MessageWithAny* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageWithAny::InternalSwap(MessageWithAny* other) {
  std::swap(any_field_, other->any_field_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageWithAny::GetMetadata() const {
  protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_5fserving_2futil_2fclass_5fregistration_5ftest_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageWithAny

// .google.protobuf.Any any_field = 1;
bool MessageWithAny::has_any_field() const {
  return this != internal_default_instance() && any_field_ != NULL;
}
void MessageWithAny::clear_any_field() {
  if (GetArenaNoVirtual() == NULL && any_field_ != NULL) delete any_field_;
  any_field_ = NULL;
}
const ::google::protobuf::Any& MessageWithAny::any_field() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.MessageWithAny.any_field)
  return any_field_ != NULL ? *any_field_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* MessageWithAny::mutable_any_field() {
  
  if (any_field_ == NULL) {
    any_field_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.MessageWithAny.any_field)
  return any_field_;
}
::google::protobuf::Any* MessageWithAny::release_any_field() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.MessageWithAny.any_field)
  
  ::google::protobuf::Any* temp = any_field_;
  any_field_ = NULL;
  return temp;
}
void MessageWithAny::set_allocated_any_field(::google::protobuf::Any* any_field) {
  delete any_field_;
  any_field_ = any_field;
  if (any_field) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.MessageWithAny.any_field)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace serving
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
