// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/config/model_server_config.proto

#ifndef PROTOBUF_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto__INCLUDED
#define PROTOBUF_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include "tensorflow_serving/config/logging_config.pb.h"
#include "tensorflow_serving/sources/storage_path/file_system_storage_path_source.pb.h"
// @@protoc_insertion_point(includes)
namespace google {
namespace protobuf {
class Any;
class AnyDefaultTypeInternal;
extern AnyDefaultTypeInternal _Any_default_instance_;
}  // namespace protobuf
}  // namespace google
namespace tensorflow {
namespace serving {
class FileSystemStoragePathSourceConfig;
class FileSystemStoragePathSourceConfigDefaultTypeInternal;
extern FileSystemStoragePathSourceConfigDefaultTypeInternal _FileSystemStoragePathSourceConfig_default_instance_;
class FileSystemStoragePathSourceConfig_ServableToMonitor;
class FileSystemStoragePathSourceConfig_ServableToMonitorDefaultTypeInternal;
extern FileSystemStoragePathSourceConfig_ServableToMonitorDefaultTypeInternal _FileSystemStoragePathSourceConfig_ServableToMonitor_default_instance_;
class LoggingConfig;
class LoggingConfigDefaultTypeInternal;
extern LoggingConfigDefaultTypeInternal _LoggingConfig_default_instance_;
class ModelConfig;
class ModelConfigDefaultTypeInternal;
extern ModelConfigDefaultTypeInternal _ModelConfig_default_instance_;
class ModelConfigList;
class ModelConfigListDefaultTypeInternal;
extern ModelConfigListDefaultTypeInternal _ModelConfigList_default_instance_;
class ModelServerConfig;
class ModelServerConfigDefaultTypeInternal;
extern ModelServerConfigDefaultTypeInternal _ModelServerConfig_default_instance_;
class SamplingConfig;
class SamplingConfigDefaultTypeInternal;
extern SamplingConfigDefaultTypeInternal _SamplingConfig_default_instance_;
}  // namespace serving
}  // namespace tensorflow

namespace tensorflow {
namespace serving {

namespace protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto

enum ModelType {
  MODEL_TYPE_UNSPECIFIED PROTOBUF_DEPRECATED = 0,
  TENSORFLOW PROTOBUF_DEPRECATED = 1,
  OTHER PROTOBUF_DEPRECATED = 2,
  ModelType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ModelType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ModelType_IsValid(int value);
const ModelType ModelType_MIN = MODEL_TYPE_UNSPECIFIED;
const ModelType ModelType_MAX = OTHER;
const int ModelType_ARRAYSIZE = ModelType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ModelType_descriptor();
inline const ::std::string& ModelType_Name(ModelType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ModelType_descriptor(), value);
}
inline bool ModelType_Parse(
    const ::std::string& name, ModelType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ModelType>(
    ModelType_descriptor(), name, value);
}
// ===================================================================

class ModelConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.ModelConfig) */ {
 public:
  ModelConfig();
  virtual ~ModelConfig();

  ModelConfig(const ModelConfig& from);

  inline ModelConfig& operator=(const ModelConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ModelConfig& default_instance();

  static inline const ModelConfig* internal_default_instance() {
    return reinterpret_cast<const ModelConfig*>(
               &_ModelConfig_default_instance_);
  }

  void UnsafeArenaSwap(ModelConfig* other);
  void Swap(ModelConfig* other);

  // implements Message ----------------------------------------------

  inline ModelConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  ModelConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModelConfig& from);
  void MergeFrom(const ModelConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModelConfig* other);
  protected:
  explicit ModelConfig(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  ::std::string* unsafe_arena_release_name();
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string base_path = 2;
  void clear_base_path();
  static const int kBasePathFieldNumber = 2;
  const ::std::string& base_path() const;
  void set_base_path(const ::std::string& value);
  void set_base_path(const char* value);
  void set_base_path(const char* value, size_t size);
  ::std::string* mutable_base_path();
  ::std::string* release_base_path();
  void set_allocated_base_path(::std::string* base_path);
  ::std::string* unsafe_arena_release_base_path();
  void unsafe_arena_set_allocated_base_path(
      ::std::string* base_path);

  // string model_platform = 4;
  void clear_model_platform();
  static const int kModelPlatformFieldNumber = 4;
  const ::std::string& model_platform() const;
  void set_model_platform(const ::std::string& value);
  void set_model_platform(const char* value);
  void set_model_platform(const char* value, size_t size);
  ::std::string* mutable_model_platform();
  ::std::string* release_model_platform();
  void set_allocated_model_platform(::std::string* model_platform);
  ::std::string* unsafe_arena_release_model_platform();
  void unsafe_arena_set_allocated_model_platform(
      ::std::string* model_platform);

  // .tensorflow.serving.LoggingConfig logging_config = 6;
  bool has_logging_config() const;
  void clear_logging_config();
  static const int kLoggingConfigFieldNumber = 6;
  private:
  void _slow_mutable_logging_config();
  void _slow_set_allocated_logging_config(
      ::google::protobuf::Arena* message_arena, ::tensorflow::serving::LoggingConfig** logging_config);
  ::tensorflow::serving::LoggingConfig* _slow_release_logging_config();
  public:
  const ::tensorflow::serving::LoggingConfig& logging_config() const;
  ::tensorflow::serving::LoggingConfig* mutable_logging_config();
  ::tensorflow::serving::LoggingConfig* release_logging_config();
  void set_allocated_logging_config(::tensorflow::serving::LoggingConfig* logging_config);
  ::tensorflow::serving::LoggingConfig* unsafe_arena_release_logging_config();
  void unsafe_arena_set_allocated_logging_config(
      ::tensorflow::serving::LoggingConfig* logging_config);

  // .tensorflow.serving.ModelType model_type = 3 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_model_type();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kModelTypeFieldNumber = 3;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::tensorflow::serving::ModelType model_type() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_model_type(::tensorflow::serving::ModelType value);

  // .tensorflow.serving.FileSystemStoragePathSourceConfig.VersionPolicy version_policy = 5;
  void clear_version_policy();
  static const int kVersionPolicyFieldNumber = 5;
  ::tensorflow::serving::FileSystemStoragePathSourceConfig_VersionPolicy version_policy() const;
  void set_version_policy(::tensorflow::serving::FileSystemStoragePathSourceConfig_VersionPolicy value);

  // @@protoc_insertion_point(class_scope:tensorflow.serving.ModelConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr base_path_;
  ::google::protobuf::internal::ArenaStringPtr model_platform_;
  ::tensorflow::serving::LoggingConfig* logging_config_;
  int model_type_;
  int version_policy_;
  mutable int _cached_size_;
  friend struct  protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModelConfigList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.ModelConfigList) */ {
 public:
  ModelConfigList();
  virtual ~ModelConfigList();

  ModelConfigList(const ModelConfigList& from);

  inline ModelConfigList& operator=(const ModelConfigList& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ModelConfigList& default_instance();

  static inline const ModelConfigList* internal_default_instance() {
    return reinterpret_cast<const ModelConfigList*>(
               &_ModelConfigList_default_instance_);
  }

  void UnsafeArenaSwap(ModelConfigList* other);
  void Swap(ModelConfigList* other);

  // implements Message ----------------------------------------------

  inline ModelConfigList* New() const PROTOBUF_FINAL { return New(NULL); }

  ModelConfigList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModelConfigList& from);
  void MergeFrom(const ModelConfigList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModelConfigList* other);
  protected:
  explicit ModelConfigList(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tensorflow.serving.ModelConfig config = 1;
  int config_size() const;
  void clear_config();
  static const int kConfigFieldNumber = 1;
  const ::tensorflow::serving::ModelConfig& config(int index) const;
  ::tensorflow::serving::ModelConfig* mutable_config(int index);
  ::tensorflow::serving::ModelConfig* add_config();
  ::google::protobuf::RepeatedPtrField< ::tensorflow::serving::ModelConfig >*
      mutable_config();
  const ::google::protobuf::RepeatedPtrField< ::tensorflow::serving::ModelConfig >&
      config() const;

  // @@protoc_insertion_point(class_scope:tensorflow.serving.ModelConfigList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::serving::ModelConfig > config_;
  mutable int _cached_size_;
  friend struct  protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModelServerConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.ModelServerConfig) */ {
 public:
  ModelServerConfig();
  virtual ~ModelServerConfig();

  ModelServerConfig(const ModelServerConfig& from);

  inline ModelServerConfig& operator=(const ModelServerConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ModelServerConfig& default_instance();

  enum ConfigCase {
    kModelConfigList = 1,
    kCustomModelConfig = 2,
    CONFIG_NOT_SET = 0,
  };

  static inline const ModelServerConfig* internal_default_instance() {
    return reinterpret_cast<const ModelServerConfig*>(
               &_ModelServerConfig_default_instance_);
  }

  void UnsafeArenaSwap(ModelServerConfig* other);
  void Swap(ModelServerConfig* other);

  // implements Message ----------------------------------------------

  inline ModelServerConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  ModelServerConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModelServerConfig& from);
  void MergeFrom(const ModelServerConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModelServerConfig* other);
  protected:
  explicit ModelServerConfig(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .tensorflow.serving.ModelConfigList model_config_list = 1;
  bool has_model_config_list() const;
  void clear_model_config_list();
  static const int kModelConfigListFieldNumber = 1;
  private:
  void _slow_mutable_model_config_list();
  void _slow_set_allocated_model_config_list(
      ::google::protobuf::Arena* message_arena, ::tensorflow::serving::ModelConfigList** model_config_list);
  ::tensorflow::serving::ModelConfigList* _slow_release_model_config_list();
  public:
  const ::tensorflow::serving::ModelConfigList& model_config_list() const;
  ::tensorflow::serving::ModelConfigList* mutable_model_config_list();
  ::tensorflow::serving::ModelConfigList* release_model_config_list();
  void set_allocated_model_config_list(::tensorflow::serving::ModelConfigList* model_config_list);
  ::tensorflow::serving::ModelConfigList* unsafe_arena_release_model_config_list();
  void unsafe_arena_set_allocated_model_config_list(
      ::tensorflow::serving::ModelConfigList* model_config_list);

  // .google.protobuf.Any custom_model_config = 2;
  bool has_custom_model_config() const;
  void clear_custom_model_config();
  static const int kCustomModelConfigFieldNumber = 2;
  private:
  void _slow_mutable_custom_model_config();
  ::google::protobuf::Any* _slow_release_custom_model_config();
  public:
  const ::google::protobuf::Any& custom_model_config() const;
  ::google::protobuf::Any* mutable_custom_model_config();
  ::google::protobuf::Any* release_custom_model_config();
  void set_allocated_custom_model_config(::google::protobuf::Any* custom_model_config);
  ::google::protobuf::Any* unsafe_arena_release_custom_model_config();
  void unsafe_arena_set_allocated_custom_model_config(
      ::google::protobuf::Any* custom_model_config);

  ConfigCase config_case() const;
  // @@protoc_insertion_point(class_scope:tensorflow.serving.ModelServerConfig)
 private:
  void set_has_model_config_list();
  void set_has_custom_model_config();

  inline bool has_config() const;
  void clear_config();
  inline void clear_has_config();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union ConfigUnion {
    ConfigUnion() {}
    ::tensorflow::serving::ModelConfigList* model_config_list_;
    ::google::protobuf::Any* custom_model_config_;
  } config_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ModelConfig

// string name = 1;
inline void ModelConfig::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ModelConfig::name() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ModelConfig.name)
  return name_.Get();
}
inline void ModelConfig::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.serving.ModelConfig.name)
}
inline void ModelConfig::set_name(const char* value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.ModelConfig.name)
}
inline void ModelConfig::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.ModelConfig.name)
}
inline ::std::string* ModelConfig::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.ModelConfig.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ModelConfig::release_name() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.ModelConfig.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ModelConfig::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.serving.ModelConfig.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ModelConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.ModelConfig.name)
}
inline void ModelConfig::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.ModelConfig.name)
}

// string base_path = 2;
inline void ModelConfig::clear_base_path() {
  base_path_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ModelConfig::base_path() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ModelConfig.base_path)
  return base_path_.Get();
}
inline void ModelConfig::set_base_path(const ::std::string& value) {
  
  base_path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.serving.ModelConfig.base_path)
}
inline void ModelConfig::set_base_path(const char* value) {
  
  base_path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.ModelConfig.base_path)
}
inline void ModelConfig::set_base_path(const char* value,
    size_t size) {
  
  base_path_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.ModelConfig.base_path)
}
inline ::std::string* ModelConfig::mutable_base_path() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.ModelConfig.base_path)
  return base_path_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ModelConfig::release_base_path() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.ModelConfig.base_path)
  
  return base_path_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ModelConfig::unsafe_arena_release_base_path() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.serving.ModelConfig.base_path)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return base_path_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ModelConfig::set_allocated_base_path(::std::string* base_path) {
  if (base_path != NULL) {
    
  } else {
    
  }
  base_path_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), base_path,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.ModelConfig.base_path)
}
inline void ModelConfig::unsafe_arena_set_allocated_base_path(
    ::std::string* base_path) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (base_path != NULL) {
    
  } else {
    
  }
  base_path_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      base_path, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.ModelConfig.base_path)
}

// .tensorflow.serving.ModelType model_type = 3 [deprecated = true];
inline void ModelConfig::clear_model_type() {
  model_type_ = 0;
}
inline ::tensorflow::serving::ModelType ModelConfig::model_type() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ModelConfig.model_type)
  return static_cast< ::tensorflow::serving::ModelType >(model_type_);
}
inline void ModelConfig::set_model_type(::tensorflow::serving::ModelType value) {
  
  model_type_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.serving.ModelConfig.model_type)
}

// string model_platform = 4;
inline void ModelConfig::clear_model_platform() {
  model_platform_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ModelConfig::model_platform() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ModelConfig.model_platform)
  return model_platform_.Get();
}
inline void ModelConfig::set_model_platform(const ::std::string& value) {
  
  model_platform_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.serving.ModelConfig.model_platform)
}
inline void ModelConfig::set_model_platform(const char* value) {
  
  model_platform_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.ModelConfig.model_platform)
}
inline void ModelConfig::set_model_platform(const char* value,
    size_t size) {
  
  model_platform_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.ModelConfig.model_platform)
}
inline ::std::string* ModelConfig::mutable_model_platform() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.ModelConfig.model_platform)
  return model_platform_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ModelConfig::release_model_platform() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.ModelConfig.model_platform)
  
  return model_platform_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ModelConfig::unsafe_arena_release_model_platform() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.serving.ModelConfig.model_platform)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return model_platform_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ModelConfig::set_allocated_model_platform(::std::string* model_platform) {
  if (model_platform != NULL) {
    
  } else {
    
  }
  model_platform_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_platform,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.ModelConfig.model_platform)
}
inline void ModelConfig::unsafe_arena_set_allocated_model_platform(
    ::std::string* model_platform) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (model_platform != NULL) {
    
  } else {
    
  }
  model_platform_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      model_platform, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.ModelConfig.model_platform)
}

// .tensorflow.serving.FileSystemStoragePathSourceConfig.VersionPolicy version_policy = 5;
inline void ModelConfig::clear_version_policy() {
  version_policy_ = 0;
}
inline ::tensorflow::serving::FileSystemStoragePathSourceConfig_VersionPolicy ModelConfig::version_policy() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ModelConfig.version_policy)
  return static_cast< ::tensorflow::serving::FileSystemStoragePathSourceConfig_VersionPolicy >(version_policy_);
}
inline void ModelConfig::set_version_policy(::tensorflow::serving::FileSystemStoragePathSourceConfig_VersionPolicy value) {
  
  version_policy_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.serving.ModelConfig.version_policy)
}

// .tensorflow.serving.LoggingConfig logging_config = 6;
inline bool ModelConfig::has_logging_config() const {
  return this != internal_default_instance() && logging_config_ != NULL;
}
inline void ModelConfig::clear_logging_config() {
  if (GetArenaNoVirtual() == NULL && logging_config_ != NULL) delete logging_config_;
  logging_config_ = NULL;
}
inline const ::tensorflow::serving::LoggingConfig& ModelConfig::logging_config() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ModelConfig.logging_config)
  return logging_config_ != NULL ? *logging_config_
                         : *::tensorflow::serving::LoggingConfig::internal_default_instance();
}
inline ::tensorflow::serving::LoggingConfig* ModelConfig::mutable_logging_config() {
  
  if (logging_config_ == NULL) {
    _slow_mutable_logging_config();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.ModelConfig.logging_config)
  return logging_config_;
}
inline ::tensorflow::serving::LoggingConfig* ModelConfig::release_logging_config() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.ModelConfig.logging_config)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_logging_config();
  } else {
    ::tensorflow::serving::LoggingConfig* temp = logging_config_;
    logging_config_ = NULL;
    return temp;
  }
}
inline  void ModelConfig::set_allocated_logging_config(::tensorflow::serving::LoggingConfig* logging_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete logging_config_;
  }
  if (logging_config != NULL) {
    _slow_set_allocated_logging_config(message_arena, &logging_config);
  }
  logging_config_ = logging_config;
  if (logging_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.ModelConfig.logging_config)
}

// -------------------------------------------------------------------

// ModelConfigList

// repeated .tensorflow.serving.ModelConfig config = 1;
inline int ModelConfigList::config_size() const {
  return config_.size();
}
inline void ModelConfigList::clear_config() {
  config_.Clear();
}
inline const ::tensorflow::serving::ModelConfig& ModelConfigList::config(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ModelConfigList.config)
  return config_.Get(index);
}
inline ::tensorflow::serving::ModelConfig* ModelConfigList::mutable_config(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.ModelConfigList.config)
  return config_.Mutable(index);
}
inline ::tensorflow::serving::ModelConfig* ModelConfigList::add_config() {
  // @@protoc_insertion_point(field_add:tensorflow.serving.ModelConfigList.config)
  return config_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tensorflow::serving::ModelConfig >*
ModelConfigList::mutable_config() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.serving.ModelConfigList.config)
  return &config_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tensorflow::serving::ModelConfig >&
ModelConfigList::config() const {
  // @@protoc_insertion_point(field_list:tensorflow.serving.ModelConfigList.config)
  return config_;
}

// -------------------------------------------------------------------

// ModelServerConfig

// .tensorflow.serving.ModelConfigList model_config_list = 1;
inline bool ModelServerConfig::has_model_config_list() const {
  return config_case() == kModelConfigList;
}
inline void ModelServerConfig::set_has_model_config_list() {
  _oneof_case_[0] = kModelConfigList;
}
inline void ModelServerConfig::clear_model_config_list() {
  if (has_model_config_list()) {
    if (GetArenaNoVirtual() == NULL) {
      delete config_.model_config_list_;
    }
    clear_has_config();
  }
}
inline  const ::tensorflow::serving::ModelConfigList& ModelServerConfig::model_config_list() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ModelServerConfig.model_config_list)
  return has_model_config_list()
      ? *config_.model_config_list_
      : ::tensorflow::serving::ModelConfigList::default_instance();
}
inline ::tensorflow::serving::ModelConfigList* ModelServerConfig::mutable_model_config_list() {
  if (!has_model_config_list()) {
    clear_config();
    set_has_model_config_list();
    config_.model_config_list_ = 
      ::google::protobuf::Arena::CreateMessage< ::tensorflow::serving::ModelConfigList >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.ModelServerConfig.model_config_list)
  return config_.model_config_list_;
}
inline ::tensorflow::serving::ModelConfigList* ModelServerConfig::release_model_config_list() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.ModelServerConfig.model_config_list)
  if (has_model_config_list()) {
    clear_has_config();
    if (GetArenaNoVirtual() != NULL) {
      ::tensorflow::serving::ModelConfigList* temp = new ::tensorflow::serving::ModelConfigList(*config_.model_config_list_);
      config_.model_config_list_ = NULL;
      return temp;
    } else {
      ::tensorflow::serving::ModelConfigList* temp = config_.model_config_list_;
      config_.model_config_list_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
inline void ModelServerConfig::set_allocated_model_config_list(::tensorflow::serving::ModelConfigList* model_config_list) {
  clear_config();
  if (model_config_list) {
    if (GetArenaNoVirtual() != NULL &&
        ::google::protobuf::Arena::GetArena(model_config_list) == NULL) {
      GetArenaNoVirtual()->Own(model_config_list);
    } else if (GetArenaNoVirtual() !=
               ::google::protobuf::Arena::GetArena(model_config_list)) {
      ::tensorflow::serving::ModelConfigList* new_model_config_list = 
          ::google::protobuf::Arena::CreateMessage< ::tensorflow::serving::ModelConfigList >(
          GetArenaNoVirtual());
      new_model_config_list->CopyFrom(*model_config_list);
      model_config_list = new_model_config_list;
    }
    set_has_model_config_list();
    config_.model_config_list_ = model_config_list;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.ModelServerConfig.model_config_list)
}
inline  ::tensorflow::serving::ModelConfigList* ModelServerConfig::unsafe_arena_release_model_config_list() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.serving.ModelServerConfig.model_config_list)
  if (has_model_config_list()) {
    clear_has_config();
    ::tensorflow::serving::ModelConfigList* temp = config_.model_config_list_;
    config_.model_config_list_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline  void ModelServerConfig::unsafe_arena_set_allocated_model_config_list(::tensorflow::serving::ModelConfigList* model_config_list) {
  clear_config();
  if (model_config_list) {
    set_has_model_config_list();
    config_.model_config_list_ = model_config_list;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.ModelServerConfig.model_config_list)
}

// .google.protobuf.Any custom_model_config = 2;
inline bool ModelServerConfig::has_custom_model_config() const {
  return config_case() == kCustomModelConfig;
}
inline void ModelServerConfig::set_has_custom_model_config() {
  _oneof_case_[0] = kCustomModelConfig;
}
inline void ModelServerConfig::clear_custom_model_config() {
  if (has_custom_model_config()) {
    if (GetArenaNoVirtual() == NULL) {
      delete config_.custom_model_config_;
    }
    clear_has_config();
  }
}
inline  const ::google::protobuf::Any& ModelServerConfig::custom_model_config() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ModelServerConfig.custom_model_config)
  return has_custom_model_config()
      ? *config_.custom_model_config_
      : ::google::protobuf::Any::default_instance();
}
inline ::google::protobuf::Any* ModelServerConfig::mutable_custom_model_config() {
  if (!has_custom_model_config()) {
    clear_config();
    set_has_custom_model_config();
    config_.custom_model_config_ = 
      ::google::protobuf::Arena::Create< ::google::protobuf::Any >(
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.ModelServerConfig.custom_model_config)
  return config_.custom_model_config_;
}
inline ::google::protobuf::Any* ModelServerConfig::release_custom_model_config() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.ModelServerConfig.custom_model_config)
  if (has_custom_model_config()) {
    clear_has_config();
    if (GetArenaNoVirtual() != NULL) {
      ::google::protobuf::Any* temp = new ::google::protobuf::Any(*config_.custom_model_config_);
      config_.custom_model_config_ = NULL;
      return temp;
    } else {
      ::google::protobuf::Any* temp = config_.custom_model_config_;
      config_.custom_model_config_ = NULL;
      return temp;
    }
  } else {
    return NULL;
  }
}
inline void ModelServerConfig::set_allocated_custom_model_config(::google::protobuf::Any* custom_model_config) {
  clear_config();
  if (custom_model_config) {
    if (GetArenaNoVirtual() != NULL) {
      GetArenaNoVirtual()->Own(custom_model_config);
    }
    set_has_custom_model_config();
    config_.custom_model_config_ = custom_model_config;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.ModelServerConfig.custom_model_config)
}
inline  ::google::protobuf::Any* ModelServerConfig::unsafe_arena_release_custom_model_config() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.serving.ModelServerConfig.custom_model_config)
  if (has_custom_model_config()) {
    clear_has_config();
    ::google::protobuf::Any* temp = config_.custom_model_config_;
    config_.custom_model_config_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline  void ModelServerConfig::unsafe_arena_set_allocated_custom_model_config(::google::protobuf::Any* custom_model_config) {
  clear_config();
  if (custom_model_config) {
    set_has_custom_model_config();
    config_.custom_model_config_ = custom_model_config;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.serving.ModelServerConfig.custom_model_config)
}

inline bool ModelServerConfig::has_config() const {
  return config_case() != CONFIG_NOT_SET;
}
inline void ModelServerConfig::clear_has_config() {
  _oneof_case_[0] = CONFIG_NOT_SET;
}
inline ModelServerConfig::ConfigCase ModelServerConfig::config_case() const {
  return ModelServerConfig::ConfigCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace serving
}  // namespace tensorflow

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::tensorflow::serving::ModelType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tensorflow::serving::ModelType>() {
  return ::tensorflow::serving::ModelType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto__INCLUDED
