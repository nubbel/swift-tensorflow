// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/resources/resources.proto

#ifndef PROTOBUF_tensorflow_5fserving_2fresources_2fresources_2eproto__INCLUDED
#define PROTOBUF_tensorflow_5fserving_2fresources_2fresources_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
namespace google {
namespace protobuf {
class BoolValue;
class BoolValueDefaultTypeInternal;
extern BoolValueDefaultTypeInternal _BoolValue_default_instance_;
class BytesValue;
class BytesValueDefaultTypeInternal;
extern BytesValueDefaultTypeInternal _BytesValue_default_instance_;
class DoubleValue;
class DoubleValueDefaultTypeInternal;
extern DoubleValueDefaultTypeInternal _DoubleValue_default_instance_;
class FloatValue;
class FloatValueDefaultTypeInternal;
extern FloatValueDefaultTypeInternal _FloatValue_default_instance_;
class Int32Value;
class Int32ValueDefaultTypeInternal;
extern Int32ValueDefaultTypeInternal _Int32Value_default_instance_;
class Int64Value;
class Int64ValueDefaultTypeInternal;
extern Int64ValueDefaultTypeInternal _Int64Value_default_instance_;
class StringValue;
class StringValueDefaultTypeInternal;
extern StringValueDefaultTypeInternal _StringValue_default_instance_;
class UInt32Value;
class UInt32ValueDefaultTypeInternal;
extern UInt32ValueDefaultTypeInternal _UInt32Value_default_instance_;
class UInt64Value;
class UInt64ValueDefaultTypeInternal;
extern UInt64ValueDefaultTypeInternal _UInt64Value_default_instance_;
}  // namespace protobuf
}  // namespace google
namespace tensorflow {
namespace serving {
class Resource;
class ResourceDefaultTypeInternal;
extern ResourceDefaultTypeInternal _Resource_default_instance_;
class ResourceAllocation;
class ResourceAllocationDefaultTypeInternal;
extern ResourceAllocationDefaultTypeInternal _ResourceAllocation_default_instance_;
class ResourceAllocation_Entry;
class ResourceAllocation_EntryDefaultTypeInternal;
extern ResourceAllocation_EntryDefaultTypeInternal _ResourceAllocation_Entry_default_instance_;
}  // namespace serving
}  // namespace tensorflow

namespace tensorflow {
namespace serving {

namespace protobuf_tensorflow_5fserving_2fresources_2fresources_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_tensorflow_5fserving_2fresources_2fresources_2eproto

// ===================================================================

class Resource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.Resource) */ {
 public:
  Resource();
  virtual ~Resource();

  Resource(const Resource& from);

  inline Resource& operator=(const Resource& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Resource& default_instance();

  static inline const Resource* internal_default_instance() {
    return reinterpret_cast<const Resource*>(
               &_Resource_default_instance_);
  }

  void Swap(Resource* other);

  // implements Message ----------------------------------------------

  inline Resource* New() const PROTOBUF_FINAL { return New(NULL); }

  Resource* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Resource& from);
  void MergeFrom(const Resource& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Resource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string device = 1;
  void clear_device();
  static const int kDeviceFieldNumber = 1;
  const ::std::string& device() const;
  void set_device(const ::std::string& value);
  #if LANG_CXX11
  void set_device(::std::string&& value);
  #endif
  void set_device(const char* value);
  void set_device(const char* value, size_t size);
  ::std::string* mutable_device();
  ::std::string* release_device();
  void set_allocated_device(::std::string* device);

  // string kind = 3;
  void clear_kind();
  static const int kKindFieldNumber = 3;
  const ::std::string& kind() const;
  void set_kind(const ::std::string& value);
  #if LANG_CXX11
  void set_kind(::std::string&& value);
  #endif
  void set_kind(const char* value);
  void set_kind(const char* value, size_t size);
  ::std::string* mutable_kind();
  ::std::string* release_kind();
  void set_allocated_kind(::std::string* kind);

  // .google.protobuf.UInt32Value device_instance = 2;
  bool has_device_instance() const;
  void clear_device_instance();
  static const int kDeviceInstanceFieldNumber = 2;
  const ::google::protobuf::UInt32Value& device_instance() const;
  ::google::protobuf::UInt32Value* mutable_device_instance();
  ::google::protobuf::UInt32Value* release_device_instance();
  void set_allocated_device_instance(::google::protobuf::UInt32Value* device_instance);

  // @@protoc_insertion_point(class_scope:tensorflow.serving.Resource)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr device_;
  ::google::protobuf::internal::ArenaStringPtr kind_;
  ::google::protobuf::UInt32Value* device_instance_;
  mutable int _cached_size_;
  friend struct  protobuf_tensorflow_5fserving_2fresources_2fresources_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResourceAllocation_Entry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.ResourceAllocation.Entry) */ {
 public:
  ResourceAllocation_Entry();
  virtual ~ResourceAllocation_Entry();

  ResourceAllocation_Entry(const ResourceAllocation_Entry& from);

  inline ResourceAllocation_Entry& operator=(const ResourceAllocation_Entry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceAllocation_Entry& default_instance();

  static inline const ResourceAllocation_Entry* internal_default_instance() {
    return reinterpret_cast<const ResourceAllocation_Entry*>(
               &_ResourceAllocation_Entry_default_instance_);
  }

  void Swap(ResourceAllocation_Entry* other);

  // implements Message ----------------------------------------------

  inline ResourceAllocation_Entry* New() const PROTOBUF_FINAL { return New(NULL); }

  ResourceAllocation_Entry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResourceAllocation_Entry& from);
  void MergeFrom(const ResourceAllocation_Entry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResourceAllocation_Entry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .tensorflow.serving.Resource resource = 1;
  bool has_resource() const;
  void clear_resource();
  static const int kResourceFieldNumber = 1;
  const ::tensorflow::serving::Resource& resource() const;
  ::tensorflow::serving::Resource* mutable_resource();
  ::tensorflow::serving::Resource* release_resource();
  void set_allocated_resource(::tensorflow::serving::Resource* resource);

  // uint64 quantity = 2;
  void clear_quantity();
  static const int kQuantityFieldNumber = 2;
  ::google::protobuf::uint64 quantity() const;
  void set_quantity(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:tensorflow.serving.ResourceAllocation.Entry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::tensorflow::serving::Resource* resource_;
  ::google::protobuf::uint64 quantity_;
  mutable int _cached_size_;
  friend struct  protobuf_tensorflow_5fserving_2fresources_2fresources_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResourceAllocation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.serving.ResourceAllocation) */ {
 public:
  ResourceAllocation();
  virtual ~ResourceAllocation();

  ResourceAllocation(const ResourceAllocation& from);

  inline ResourceAllocation& operator=(const ResourceAllocation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceAllocation& default_instance();

  static inline const ResourceAllocation* internal_default_instance() {
    return reinterpret_cast<const ResourceAllocation*>(
               &_ResourceAllocation_default_instance_);
  }

  void Swap(ResourceAllocation* other);

  // implements Message ----------------------------------------------

  inline ResourceAllocation* New() const PROTOBUF_FINAL { return New(NULL); }

  ResourceAllocation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResourceAllocation& from);
  void MergeFrom(const ResourceAllocation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResourceAllocation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ResourceAllocation_Entry Entry;

  // accessors -------------------------------------------------------

  // repeated .tensorflow.serving.ResourceAllocation.Entry resource_quantities = 1;
  int resource_quantities_size() const;
  void clear_resource_quantities();
  static const int kResourceQuantitiesFieldNumber = 1;
  const ::tensorflow::serving::ResourceAllocation_Entry& resource_quantities(int index) const;
  ::tensorflow::serving::ResourceAllocation_Entry* mutable_resource_quantities(int index);
  ::tensorflow::serving::ResourceAllocation_Entry* add_resource_quantities();
  ::google::protobuf::RepeatedPtrField< ::tensorflow::serving::ResourceAllocation_Entry >*
      mutable_resource_quantities();
  const ::google::protobuf::RepeatedPtrField< ::tensorflow::serving::ResourceAllocation_Entry >&
      resource_quantities() const;

  // @@protoc_insertion_point(class_scope:tensorflow.serving.ResourceAllocation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::serving::ResourceAllocation_Entry > resource_quantities_;
  mutable int _cached_size_;
  friend struct  protobuf_tensorflow_5fserving_2fresources_2fresources_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Resource

// string device = 1;
inline void Resource::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Resource::device() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.Resource.device)
  return device_.GetNoArena();
}
inline void Resource::set_device(const ::std::string& value) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.Resource.device)
}
#if LANG_CXX11
inline void Resource::set_device(::std::string&& value) {
  
  device_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.serving.Resource.device)
}
#endif
inline void Resource::set_device(const char* value) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.Resource.device)
}
inline void Resource::set_device(const char* value, size_t size) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.Resource.device)
}
inline ::std::string* Resource::mutable_device() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.Resource.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Resource::release_device() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.Resource.device)
  
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Resource::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    
  } else {
    
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.Resource.device)
}

// .google.protobuf.UInt32Value device_instance = 2;
inline bool Resource::has_device_instance() const {
  return this != internal_default_instance() && device_instance_ != NULL;
}
inline void Resource::clear_device_instance() {
  if (GetArenaNoVirtual() == NULL && device_instance_ != NULL) delete device_instance_;
  device_instance_ = NULL;
}
inline const ::google::protobuf::UInt32Value& Resource::device_instance() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.Resource.device_instance)
  return device_instance_ != NULL ? *device_instance_
                         : *::google::protobuf::UInt32Value::internal_default_instance();
}
inline ::google::protobuf::UInt32Value* Resource::mutable_device_instance() {
  
  if (device_instance_ == NULL) {
    device_instance_ = new ::google::protobuf::UInt32Value;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.Resource.device_instance)
  return device_instance_;
}
inline ::google::protobuf::UInt32Value* Resource::release_device_instance() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.Resource.device_instance)
  
  ::google::protobuf::UInt32Value* temp = device_instance_;
  device_instance_ = NULL;
  return temp;
}
inline void Resource::set_allocated_device_instance(::google::protobuf::UInt32Value* device_instance) {
  delete device_instance_;
  if (device_instance != NULL && device_instance->GetArena() != NULL) {
    ::google::protobuf::UInt32Value* new_device_instance = new ::google::protobuf::UInt32Value;
    new_device_instance->CopyFrom(*device_instance);
    device_instance = new_device_instance;
  }
  device_instance_ = device_instance;
  if (device_instance) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.Resource.device_instance)
}

// string kind = 3;
inline void Resource::clear_kind() {
  kind_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Resource::kind() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.Resource.kind)
  return kind_.GetNoArena();
}
inline void Resource::set_kind(const ::std::string& value) {
  
  kind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensorflow.serving.Resource.kind)
}
#if LANG_CXX11
inline void Resource::set_kind(::std::string&& value) {
  
  kind_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.serving.Resource.kind)
}
#endif
inline void Resource::set_kind(const char* value) {
  
  kind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensorflow.serving.Resource.kind)
}
inline void Resource::set_kind(const char* value, size_t size) {
  
  kind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensorflow.serving.Resource.kind)
}
inline ::std::string* Resource::mutable_kind() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.Resource.kind)
  return kind_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Resource::release_kind() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.Resource.kind)
  
  return kind_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Resource::set_allocated_kind(::std::string* kind) {
  if (kind != NULL) {
    
  } else {
    
  }
  kind_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), kind);
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.Resource.kind)
}

// -------------------------------------------------------------------

// ResourceAllocation_Entry

// .tensorflow.serving.Resource resource = 1;
inline bool ResourceAllocation_Entry::has_resource() const {
  return this != internal_default_instance() && resource_ != NULL;
}
inline void ResourceAllocation_Entry::clear_resource() {
  if (GetArenaNoVirtual() == NULL && resource_ != NULL) delete resource_;
  resource_ = NULL;
}
inline const ::tensorflow::serving::Resource& ResourceAllocation_Entry::resource() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ResourceAllocation.Entry.resource)
  return resource_ != NULL ? *resource_
                         : *::tensorflow::serving::Resource::internal_default_instance();
}
inline ::tensorflow::serving::Resource* ResourceAllocation_Entry::mutable_resource() {
  
  if (resource_ == NULL) {
    resource_ = new ::tensorflow::serving::Resource;
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.ResourceAllocation.Entry.resource)
  return resource_;
}
inline ::tensorflow::serving::Resource* ResourceAllocation_Entry::release_resource() {
  // @@protoc_insertion_point(field_release:tensorflow.serving.ResourceAllocation.Entry.resource)
  
  ::tensorflow::serving::Resource* temp = resource_;
  resource_ = NULL;
  return temp;
}
inline void ResourceAllocation_Entry::set_allocated_resource(::tensorflow::serving::Resource* resource) {
  delete resource_;
  resource_ = resource;
  if (resource) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.serving.ResourceAllocation.Entry.resource)
}

// uint64 quantity = 2;
inline void ResourceAllocation_Entry::clear_quantity() {
  quantity_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ResourceAllocation_Entry::quantity() const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ResourceAllocation.Entry.quantity)
  return quantity_;
}
inline void ResourceAllocation_Entry::set_quantity(::google::protobuf::uint64 value) {
  
  quantity_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.serving.ResourceAllocation.Entry.quantity)
}

// -------------------------------------------------------------------

// ResourceAllocation

// repeated .tensorflow.serving.ResourceAllocation.Entry resource_quantities = 1;
inline int ResourceAllocation::resource_quantities_size() const {
  return resource_quantities_.size();
}
inline void ResourceAllocation::clear_resource_quantities() {
  resource_quantities_.Clear();
}
inline const ::tensorflow::serving::ResourceAllocation_Entry& ResourceAllocation::resource_quantities(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.serving.ResourceAllocation.resource_quantities)
  return resource_quantities_.Get(index);
}
inline ::tensorflow::serving::ResourceAllocation_Entry* ResourceAllocation::mutable_resource_quantities(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.serving.ResourceAllocation.resource_quantities)
  return resource_quantities_.Mutable(index);
}
inline ::tensorflow::serving::ResourceAllocation_Entry* ResourceAllocation::add_resource_quantities() {
  // @@protoc_insertion_point(field_add:tensorflow.serving.ResourceAllocation.resource_quantities)
  return resource_quantities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tensorflow::serving::ResourceAllocation_Entry >*
ResourceAllocation::mutable_resource_quantities() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.serving.ResourceAllocation.resource_quantities)
  return &resource_quantities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tensorflow::serving::ResourceAllocation_Entry >&
ResourceAllocation::resource_quantities() const {
  // @@protoc_insertion_point(field_list:tensorflow.serving.ResourceAllocation.resource_quantities)
  return resource_quantities_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace serving
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tensorflow_5fserving_2fresources_2fresources_2eproto__INCLUDED
