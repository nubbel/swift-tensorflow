// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/compiler/xla/service/session.proto

#ifndef PROTOBUF_tensorflow_2fcompiler_2fxla_2fservice_2fsession_2eproto__INCLUDED
#define PROTOBUF_tensorflow_2fcompiler_2fxla_2fservice_2fsession_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "tensorflow/compiler/xla/xla_data.pb.h"
// @@protoc_insertion_point(includes)
namespace xla {
class BinaryOpRequest;
class BinaryOpRequestDefaultTypeInternal;
extern BinaryOpRequestDefaultTypeInternal _BinaryOpRequest_default_instance_;
class BroadcastRequest;
class BroadcastRequestDefaultTypeInternal;
extern BroadcastRequestDefaultTypeInternal _BroadcastRequest_default_instance_;
class CallRequest;
class CallRequestDefaultTypeInternal;
extern CallRequestDefaultTypeInternal _CallRequest_default_instance_;
class ChannelHandle;
class ChannelHandleDefaultTypeInternal;
extern ChannelHandleDefaultTypeInternal _ChannelHandle_default_instance_;
class ComputationDataHandle;
class ComputationDataHandleDefaultTypeInternal;
extern ComputationDataHandleDefaultTypeInternal _ComputationDataHandle_default_instance_;
class ComputationHandle;
class ComputationHandleDefaultTypeInternal;
extern ComputationHandleDefaultTypeInternal _ComputationHandle_default_instance_;
class ComputationStats;
class ComputationStatsDefaultTypeInternal;
extern ComputationStatsDefaultTypeInternal _ComputationStats_default_instance_;
class ConcatenateRequest;
class ConcatenateRequestDefaultTypeInternal;
extern ConcatenateRequestDefaultTypeInternal _ConcatenateRequest_default_instance_;
class ConstantRequest;
class ConstantRequestDefaultTypeInternal;
extern ConstantRequestDefaultTypeInternal _ConstantRequest_default_instance_;
class ConvertRequest;
class ConvertRequestDefaultTypeInternal;
extern ConvertRequestDefaultTypeInternal _ConvertRequest_default_instance_;
class ConvolutionDimensionNumbers;
class ConvolutionDimensionNumbersDefaultTypeInternal;
extern ConvolutionDimensionNumbersDefaultTypeInternal _ConvolutionDimensionNumbers_default_instance_;
class ConvolveRequest;
class ConvolveRequestDefaultTypeInternal;
extern ConvolveRequestDefaultTypeInternal _ConvolveRequest_default_instance_;
class CrossReplicaSumRequest;
class CrossReplicaSumRequestDefaultTypeInternal;
extern CrossReplicaSumRequestDefaultTypeInternal _CrossReplicaSumRequest_default_instance_;
class CustomCallRequest;
class CustomCallRequestDefaultTypeInternal;
extern CustomCallRequestDefaultTypeInternal _CustomCallRequest_default_instance_;
class DeviceHandle;
class DeviceHandleDefaultTypeInternal;
extern DeviceHandleDefaultTypeInternal _DeviceHandle_default_instance_;
class DynamicSliceRequest;
class DynamicSliceRequestDefaultTypeInternal;
extern DynamicSliceRequestDefaultTypeInternal _DynamicSliceRequest_default_instance_;
class DynamicUpdateSliceRequest;
class DynamicUpdateSliceRequestDefaultTypeInternal;
extern DynamicUpdateSliceRequestDefaultTypeInternal _DynamicUpdateSliceRequest_default_instance_;
class ExecutionHandle;
class ExecutionHandleDefaultTypeInternal;
extern ExecutionHandleDefaultTypeInternal _ExecutionHandle_default_instance_;
class ExecutionProfile;
class ExecutionProfileDefaultTypeInternal;
extern ExecutionProfileDefaultTypeInternal _ExecutionProfile_default_instance_;
class GetLocalShapeRequest;
class GetLocalShapeRequestDefaultTypeInternal;
extern GetLocalShapeRequestDefaultTypeInternal _GetLocalShapeRequest_default_instance_;
class GetLocalShapeResponse;
class GetLocalShapeResponseDefaultTypeInternal;
extern GetLocalShapeResponseDefaultTypeInternal _GetLocalShapeResponse_default_instance_;
class GetTupleElementRequest;
class GetTupleElementRequestDefaultTypeInternal;
extern GetTupleElementRequestDefaultTypeInternal _GetTupleElementRequest_default_instance_;
class GlobalDataHandle;
class GlobalDataHandleDefaultTypeInternal;
extern GlobalDataHandleDefaultTypeInternal _GlobalDataHandle_default_instance_;
class InfeedRequest;
class InfeedRequestDefaultTypeInternal;
extern InfeedRequestDefaultTypeInternal _InfeedRequest_default_instance_;
class Layout;
class LayoutDefaultTypeInternal;
extern LayoutDefaultTypeInternal _Layout_default_instance_;
class Literal;
class LiteralDefaultTypeInternal;
extern LiteralDefaultTypeInternal _Literal_default_instance_;
class MapRequest;
class MapRequestDefaultTypeInternal;
extern MapRequestDefaultTypeInternal _MapRequest_default_instance_;
class OpMetadata;
class OpMetadataDefaultTypeInternal;
extern OpMetadataDefaultTypeInternal _OpMetadata_default_instance_;
class OpRequest;
class OpRequestDefaultTypeInternal;
extern OpRequestDefaultTypeInternal _OpRequest_default_instance_;
class OpResponse;
class OpResponseDefaultTypeInternal;
extern OpResponseDefaultTypeInternal _OpResponse_default_instance_;
class OperationRequest;
class OperationRequestDefaultTypeInternal;
extern OperationRequestDefaultTypeInternal _OperationRequest_default_instance_;
class OutfeedRequest;
class OutfeedRequestDefaultTypeInternal;
extern OutfeedRequestDefaultTypeInternal _OutfeedRequest_default_instance_;
class PadRequest;
class PadRequestDefaultTypeInternal;
extern PadRequestDefaultTypeInternal _PadRequest_default_instance_;
class PaddingConfig;
class PaddingConfigDefaultTypeInternal;
extern PaddingConfigDefaultTypeInternal _PaddingConfig_default_instance_;
class PaddingConfig_PaddingConfigDimension;
class PaddingConfig_PaddingConfigDimensionDefaultTypeInternal;
extern PaddingConfig_PaddingConfigDimensionDefaultTypeInternal _PaddingConfig_PaddingConfigDimension_default_instance_;
class ParameterRequest;
class ParameterRequestDefaultTypeInternal;
extern ParameterRequestDefaultTypeInternal _ParameterRequest_default_instance_;
class ProgramShape;
class ProgramShapeDefaultTypeInternal;
extern ProgramShapeDefaultTypeInternal _ProgramShape_default_instance_;
class RecvRequest;
class RecvRequestDefaultTypeInternal;
extern RecvRequestDefaultTypeInternal _RecvRequest_default_instance_;
class ReduceRequest;
class ReduceRequestDefaultTypeInternal;
extern ReduceRequestDefaultTypeInternal _ReduceRequest_default_instance_;
class ReduceWindowRequest;
class ReduceWindowRequestDefaultTypeInternal;
extern ReduceWindowRequestDefaultTypeInternal _ReduceWindowRequest_default_instance_;
class ReshapeRequest;
class ReshapeRequestDefaultTypeInternal;
extern ReshapeRequestDefaultTypeInternal _ReshapeRequest_default_instance_;
class ReverseRequest;
class ReverseRequestDefaultTypeInternal;
extern ReverseRequestDefaultTypeInternal _ReverseRequest_default_instance_;
class RngRequest;
class RngRequestDefaultTypeInternal;
extern RngRequestDefaultTypeInternal _RngRequest_default_instance_;
class SelectAndScatterRequest;
class SelectAndScatterRequestDefaultTypeInternal;
extern SelectAndScatterRequestDefaultTypeInternal _SelectAndScatterRequest_default_instance_;
class SendRequest;
class SendRequestDefaultTypeInternal;
extern SendRequestDefaultTypeInternal _SendRequest_default_instance_;
class SessionComputation;
class SessionComputationDefaultTypeInternal;
extern SessionComputationDefaultTypeInternal _SessionComputation_default_instance_;
class SessionModule;
class SessionModuleDefaultTypeInternal;
extern SessionModuleDefaultTypeInternal _SessionModule_default_instance_;
class Shape;
class ShapeDefaultTypeInternal;
extern ShapeDefaultTypeInternal _Shape_default_instance_;
class SliceRequest;
class SliceRequestDefaultTypeInternal;
extern SliceRequestDefaultTypeInternal _SliceRequest_default_instance_;
class TernaryOpRequest;
class TernaryOpRequestDefaultTypeInternal;
extern TernaryOpRequestDefaultTypeInternal _TernaryOpRequest_default_instance_;
class TraceRequest;
class TraceRequestDefaultTypeInternal;
extern TraceRequestDefaultTypeInternal _TraceRequest_default_instance_;
class TransposeRequest;
class TransposeRequestDefaultTypeInternal;
extern TransposeRequestDefaultTypeInternal _TransposeRequest_default_instance_;
class UnaryOpRequest;
class UnaryOpRequestDefaultTypeInternal;
extern UnaryOpRequestDefaultTypeInternal _UnaryOpRequest_default_instance_;
class VariadicOpRequest;
class VariadicOpRequestDefaultTypeInternal;
extern VariadicOpRequestDefaultTypeInternal _VariadicOpRequest_default_instance_;
class WhileRequest;
class WhileRequestDefaultTypeInternal;
extern WhileRequestDefaultTypeInternal _WhileRequest_default_instance_;
class Window;
class WindowDefaultTypeInternal;
extern WindowDefaultTypeInternal _Window_default_instance_;
class WindowDimension;
class WindowDimensionDefaultTypeInternal;
extern WindowDimensionDefaultTypeInternal _WindowDimension_default_instance_;
}  // namespace xla

namespace xla {

namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fsession_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fsession_2eproto

// ===================================================================

class OperationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.OperationRequest) */ {
 public:
  OperationRequest();
  virtual ~OperationRequest();

  OperationRequest(const OperationRequest& from);

  inline OperationRequest& operator=(const OperationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationRequest& default_instance();

  static inline const OperationRequest* internal_default_instance() {
    return reinterpret_cast<const OperationRequest*>(
               &_OperationRequest_default_instance_);
  }

  void Swap(OperationRequest* other);

  // implements Message ----------------------------------------------

  inline OperationRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  OperationRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OperationRequest& from);
  void MergeFrom(const OperationRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OperationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 embedded_computation_versions = 3;
  int embedded_computation_versions_size() const;
  void clear_embedded_computation_versions();
  static const int kEmbeddedComputationVersionsFieldNumber = 3;
  ::google::protobuf::int64 embedded_computation_versions(int index) const;
  void set_embedded_computation_versions(int index, ::google::protobuf::int64 value);
  void add_embedded_computation_versions(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      embedded_computation_versions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_embedded_computation_versions();

  // .xla.ComputationDataHandle output_handle = 1;
  bool has_output_handle() const;
  void clear_output_handle();
  static const int kOutputHandleFieldNumber = 1;
  const ::xla::ComputationDataHandle& output_handle() const;
  ::xla::ComputationDataHandle* mutable_output_handle();
  ::xla::ComputationDataHandle* release_output_handle();
  void set_allocated_output_handle(::xla::ComputationDataHandle* output_handle);

  // .xla.Shape output_shape = 2;
  bool has_output_shape() const;
  void clear_output_shape();
  static const int kOutputShapeFieldNumber = 2;
  const ::xla::Shape& output_shape() const;
  ::xla::Shape* mutable_output_shape();
  ::xla::Shape* release_output_shape();
  void set_allocated_output_shape(::xla::Shape* output_shape);

  // .xla.OpRequest request = 4;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 4;
  const ::xla::OpRequest& request() const;
  ::xla::OpRequest* mutable_request();
  ::xla::OpRequest* release_request();
  void set_allocated_request(::xla::OpRequest* request);

  // @@protoc_insertion_point(class_scope:xla.OperationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > embedded_computation_versions_;
  mutable int _embedded_computation_versions_cached_byte_size_;
  ::xla::ComputationDataHandle* output_handle_;
  ::xla::Shape* output_shape_;
  ::xla::OpRequest* request_;
  mutable int _cached_size_;
  friend struct  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fsession_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SessionComputation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.SessionComputation) */ {
 public:
  SessionComputation();
  virtual ~SessionComputation();

  SessionComputation(const SessionComputation& from);

  inline SessionComputation& operator=(const SessionComputation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SessionComputation& default_instance();

  static inline const SessionComputation* internal_default_instance() {
    return reinterpret_cast<const SessionComputation*>(
               &_SessionComputation_default_instance_);
  }

  void Swap(SessionComputation* other);

  // implements Message ----------------------------------------------

  inline SessionComputation* New() const PROTOBUF_FINAL { return New(NULL); }

  SessionComputation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SessionComputation& from);
  void MergeFrom(const SessionComputation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SessionComputation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int64, .xla.OperationRequest> requests = 3;
  int requests_size() const;
  void clear_requests();
  static const int kRequestsFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::xla::OperationRequest >&
      requests() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::xla::OperationRequest >*
      mutable_requests();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .xla.ComputationHandle computation_handle = 2;
  bool has_computation_handle() const;
  void clear_computation_handle();
  static const int kComputationHandleFieldNumber = 2;
  const ::xla::ComputationHandle& computation_handle() const;
  ::xla::ComputationHandle* mutable_computation_handle();
  ::xla::ComputationHandle* release_computation_handle();
  void set_allocated_computation_handle(::xla::ComputationHandle* computation_handle);

  // @@protoc_insertion_point(class_scope:xla.SessionComputation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, ::xla::OperationRequest,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      SessionComputation_RequestsEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int64, ::xla::OperationRequest,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > requests_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::xla::ComputationHandle* computation_handle_;
  mutable int _cached_size_;
  friend struct  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fsession_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SessionModule : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xla.SessionModule) */ {
 public:
  SessionModule();
  virtual ~SessionModule();

  SessionModule(const SessionModule& from);

  inline SessionModule& operator=(const SessionModule& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SessionModule& default_instance();

  static inline const SessionModule* internal_default_instance() {
    return reinterpret_cast<const SessionModule*>(
               &_SessionModule_default_instance_);
  }

  void Swap(SessionModule* other);

  // implements Message ----------------------------------------------

  inline SessionModule* New() const PROTOBUF_FINAL { return New(NULL); }

  SessionModule* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SessionModule& from);
  void MergeFrom(const SessionModule& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SessionModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .xla.SessionComputation embedded_computations = 2;
  int embedded_computations_size() const;
  void clear_embedded_computations();
  static const int kEmbeddedComputationsFieldNumber = 2;
  const ::xla::SessionComputation& embedded_computations(int index) const;
  ::xla::SessionComputation* mutable_embedded_computations(int index);
  ::xla::SessionComputation* add_embedded_computations();
  ::google::protobuf::RepeatedPtrField< ::xla::SessionComputation >*
      mutable_embedded_computations();
  const ::google::protobuf::RepeatedPtrField< ::xla::SessionComputation >&
      embedded_computations() const;

  // repeated .xla.Literal arguments = 3;
  int arguments_size() const;
  void clear_arguments();
  static const int kArgumentsFieldNumber = 3;
  const ::xla::Literal& arguments(int index) const;
  ::xla::Literal* mutable_arguments(int index);
  ::xla::Literal* add_arguments();
  ::google::protobuf::RepeatedPtrField< ::xla::Literal >*
      mutable_arguments();
  const ::google::protobuf::RepeatedPtrField< ::xla::Literal >&
      arguments() const;

  // string execution_platform = 5;
  void clear_execution_platform();
  static const int kExecutionPlatformFieldNumber = 5;
  const ::std::string& execution_platform() const;
  void set_execution_platform(const ::std::string& value);
  #if LANG_CXX11
  void set_execution_platform(::std::string&& value);
  #endif
  void set_execution_platform(const char* value);
  void set_execution_platform(const char* value, size_t size);
  ::std::string* mutable_execution_platform();
  ::std::string* release_execution_platform();
  void set_allocated_execution_platform(::std::string* execution_platform);

  // .xla.SessionComputation entry = 1;
  bool has_entry() const;
  void clear_entry();
  static const int kEntryFieldNumber = 1;
  const ::xla::SessionComputation& entry() const;
  ::xla::SessionComputation* mutable_entry();
  ::xla::SessionComputation* release_entry();
  void set_allocated_entry(::xla::SessionComputation* entry);

  // .xla.Literal result = 4;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 4;
  const ::xla::Literal& result() const;
  ::xla::Literal* mutable_result();
  ::xla::Literal* release_result();
  void set_allocated_result(::xla::Literal* result);

  // @@protoc_insertion_point(class_scope:xla.SessionModule)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::xla::SessionComputation > embedded_computations_;
  ::google::protobuf::RepeatedPtrField< ::xla::Literal > arguments_;
  ::google::protobuf::internal::ArenaStringPtr execution_platform_;
  ::xla::SessionComputation* entry_;
  ::xla::Literal* result_;
  mutable int _cached_size_;
  friend struct  protobuf_tensorflow_2fcompiler_2fxla_2fservice_2fsession_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// OperationRequest

// .xla.ComputationDataHandle output_handle = 1;
inline bool OperationRequest::has_output_handle() const {
  return this != internal_default_instance() && output_handle_ != NULL;
}
inline void OperationRequest::clear_output_handle() {
  if (GetArenaNoVirtual() == NULL && output_handle_ != NULL) delete output_handle_;
  output_handle_ = NULL;
}
inline const ::xla::ComputationDataHandle& OperationRequest::output_handle() const {
  // @@protoc_insertion_point(field_get:xla.OperationRequest.output_handle)
  return output_handle_ != NULL ? *output_handle_
                         : *::xla::ComputationDataHandle::internal_default_instance();
}
inline ::xla::ComputationDataHandle* OperationRequest::mutable_output_handle() {
  
  if (output_handle_ == NULL) {
    output_handle_ = new ::xla::ComputationDataHandle;
  }
  // @@protoc_insertion_point(field_mutable:xla.OperationRequest.output_handle)
  return output_handle_;
}
inline ::xla::ComputationDataHandle* OperationRequest::release_output_handle() {
  // @@protoc_insertion_point(field_release:xla.OperationRequest.output_handle)
  
  ::xla::ComputationDataHandle* temp = output_handle_;
  output_handle_ = NULL;
  return temp;
}
inline void OperationRequest::set_allocated_output_handle(::xla::ComputationDataHandle* output_handle) {
  delete output_handle_;
  if (output_handle != NULL && output_handle->GetArena() != NULL) {
    ::xla::ComputationDataHandle* new_output_handle = new ::xla::ComputationDataHandle;
    new_output_handle->CopyFrom(*output_handle);
    output_handle = new_output_handle;
  }
  output_handle_ = output_handle;
  if (output_handle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xla.OperationRequest.output_handle)
}

// .xla.Shape output_shape = 2;
inline bool OperationRequest::has_output_shape() const {
  return this != internal_default_instance() && output_shape_ != NULL;
}
inline void OperationRequest::clear_output_shape() {
  if (GetArenaNoVirtual() == NULL && output_shape_ != NULL) delete output_shape_;
  output_shape_ = NULL;
}
inline const ::xla::Shape& OperationRequest::output_shape() const {
  // @@protoc_insertion_point(field_get:xla.OperationRequest.output_shape)
  return output_shape_ != NULL ? *output_shape_
                         : *::xla::Shape::internal_default_instance();
}
inline ::xla::Shape* OperationRequest::mutable_output_shape() {
  
  if (output_shape_ == NULL) {
    output_shape_ = new ::xla::Shape;
  }
  // @@protoc_insertion_point(field_mutable:xla.OperationRequest.output_shape)
  return output_shape_;
}
inline ::xla::Shape* OperationRequest::release_output_shape() {
  // @@protoc_insertion_point(field_release:xla.OperationRequest.output_shape)
  
  ::xla::Shape* temp = output_shape_;
  output_shape_ = NULL;
  return temp;
}
inline void OperationRequest::set_allocated_output_shape(::xla::Shape* output_shape) {
  delete output_shape_;
  if (output_shape != NULL && output_shape->GetArena() != NULL) {
    ::xla::Shape* new_output_shape = new ::xla::Shape;
    new_output_shape->CopyFrom(*output_shape);
    output_shape = new_output_shape;
  }
  output_shape_ = output_shape;
  if (output_shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xla.OperationRequest.output_shape)
}

// repeated int64 embedded_computation_versions = 3;
inline int OperationRequest::embedded_computation_versions_size() const {
  return embedded_computation_versions_.size();
}
inline void OperationRequest::clear_embedded_computation_versions() {
  embedded_computation_versions_.Clear();
}
inline ::google::protobuf::int64 OperationRequest::embedded_computation_versions(int index) const {
  // @@protoc_insertion_point(field_get:xla.OperationRequest.embedded_computation_versions)
  return embedded_computation_versions_.Get(index);
}
inline void OperationRequest::set_embedded_computation_versions(int index, ::google::protobuf::int64 value) {
  embedded_computation_versions_.Set(index, value);
  // @@protoc_insertion_point(field_set:xla.OperationRequest.embedded_computation_versions)
}
inline void OperationRequest::add_embedded_computation_versions(::google::protobuf::int64 value) {
  embedded_computation_versions_.Add(value);
  // @@protoc_insertion_point(field_add:xla.OperationRequest.embedded_computation_versions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
OperationRequest::embedded_computation_versions() const {
  // @@protoc_insertion_point(field_list:xla.OperationRequest.embedded_computation_versions)
  return embedded_computation_versions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
OperationRequest::mutable_embedded_computation_versions() {
  // @@protoc_insertion_point(field_mutable_list:xla.OperationRequest.embedded_computation_versions)
  return &embedded_computation_versions_;
}

// .xla.OpRequest request = 4;
inline bool OperationRequest::has_request() const {
  return this != internal_default_instance() && request_ != NULL;
}
inline void OperationRequest::clear_request() {
  if (GetArenaNoVirtual() == NULL && request_ != NULL) delete request_;
  request_ = NULL;
}
inline const ::xla::OpRequest& OperationRequest::request() const {
  // @@protoc_insertion_point(field_get:xla.OperationRequest.request)
  return request_ != NULL ? *request_
                         : *::xla::OpRequest::internal_default_instance();
}
inline ::xla::OpRequest* OperationRequest::mutable_request() {
  
  if (request_ == NULL) {
    request_ = new ::xla::OpRequest;
  }
  // @@protoc_insertion_point(field_mutable:xla.OperationRequest.request)
  return request_;
}
inline ::xla::OpRequest* OperationRequest::release_request() {
  // @@protoc_insertion_point(field_release:xla.OperationRequest.request)
  
  ::xla::OpRequest* temp = request_;
  request_ = NULL;
  return temp;
}
inline void OperationRequest::set_allocated_request(::xla::OpRequest* request) {
  delete request_;
  if (request != NULL && request->GetArena() != NULL) {
    ::xla::OpRequest* new_request = new ::xla::OpRequest;
    new_request->CopyFrom(*request);
    request = new_request;
  }
  request_ = request;
  if (request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xla.OperationRequest.request)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SessionComputation

// string name = 1;
inline void SessionComputation::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SessionComputation::name() const {
  // @@protoc_insertion_point(field_get:xla.SessionComputation.name)
  return name_.GetNoArena();
}
inline void SessionComputation::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xla.SessionComputation.name)
}
#if LANG_CXX11
inline void SessionComputation::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xla.SessionComputation.name)
}
#endif
inline void SessionComputation::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xla.SessionComputation.name)
}
inline void SessionComputation::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xla.SessionComputation.name)
}
inline ::std::string* SessionComputation::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:xla.SessionComputation.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SessionComputation::release_name() {
  // @@protoc_insertion_point(field_release:xla.SessionComputation.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionComputation::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:xla.SessionComputation.name)
}

// .xla.ComputationHandle computation_handle = 2;
inline bool SessionComputation::has_computation_handle() const {
  return this != internal_default_instance() && computation_handle_ != NULL;
}
inline void SessionComputation::clear_computation_handle() {
  if (GetArenaNoVirtual() == NULL && computation_handle_ != NULL) delete computation_handle_;
  computation_handle_ = NULL;
}
inline const ::xla::ComputationHandle& SessionComputation::computation_handle() const {
  // @@protoc_insertion_point(field_get:xla.SessionComputation.computation_handle)
  return computation_handle_ != NULL ? *computation_handle_
                         : *::xla::ComputationHandle::internal_default_instance();
}
inline ::xla::ComputationHandle* SessionComputation::mutable_computation_handle() {
  
  if (computation_handle_ == NULL) {
    computation_handle_ = new ::xla::ComputationHandle;
  }
  // @@protoc_insertion_point(field_mutable:xla.SessionComputation.computation_handle)
  return computation_handle_;
}
inline ::xla::ComputationHandle* SessionComputation::release_computation_handle() {
  // @@protoc_insertion_point(field_release:xla.SessionComputation.computation_handle)
  
  ::xla::ComputationHandle* temp = computation_handle_;
  computation_handle_ = NULL;
  return temp;
}
inline void SessionComputation::set_allocated_computation_handle(::xla::ComputationHandle* computation_handle) {
  delete computation_handle_;
  if (computation_handle != NULL && computation_handle->GetArena() != NULL) {
    ::xla::ComputationHandle* new_computation_handle = new ::xla::ComputationHandle;
    new_computation_handle->CopyFrom(*computation_handle);
    computation_handle = new_computation_handle;
  }
  computation_handle_ = computation_handle;
  if (computation_handle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xla.SessionComputation.computation_handle)
}

// map<int64, .xla.OperationRequest> requests = 3;
inline int SessionComputation::requests_size() const {
  return requests_.size();
}
inline void SessionComputation::clear_requests() {
  requests_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::xla::OperationRequest >&
SessionComputation::requests() const {
  // @@protoc_insertion_point(field_map:xla.SessionComputation.requests)
  return requests_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::xla::OperationRequest >*
SessionComputation::mutable_requests() {
  // @@protoc_insertion_point(field_mutable_map:xla.SessionComputation.requests)
  return requests_.MutableMap();
}

// -------------------------------------------------------------------

// SessionModule

// .xla.SessionComputation entry = 1;
inline bool SessionModule::has_entry() const {
  return this != internal_default_instance() && entry_ != NULL;
}
inline void SessionModule::clear_entry() {
  if (GetArenaNoVirtual() == NULL && entry_ != NULL) delete entry_;
  entry_ = NULL;
}
inline const ::xla::SessionComputation& SessionModule::entry() const {
  // @@protoc_insertion_point(field_get:xla.SessionModule.entry)
  return entry_ != NULL ? *entry_
                         : *::xla::SessionComputation::internal_default_instance();
}
inline ::xla::SessionComputation* SessionModule::mutable_entry() {
  
  if (entry_ == NULL) {
    entry_ = new ::xla::SessionComputation;
  }
  // @@protoc_insertion_point(field_mutable:xla.SessionModule.entry)
  return entry_;
}
inline ::xla::SessionComputation* SessionModule::release_entry() {
  // @@protoc_insertion_point(field_release:xla.SessionModule.entry)
  
  ::xla::SessionComputation* temp = entry_;
  entry_ = NULL;
  return temp;
}
inline void SessionModule::set_allocated_entry(::xla::SessionComputation* entry) {
  delete entry_;
  entry_ = entry;
  if (entry) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xla.SessionModule.entry)
}

// repeated .xla.SessionComputation embedded_computations = 2;
inline int SessionModule::embedded_computations_size() const {
  return embedded_computations_.size();
}
inline void SessionModule::clear_embedded_computations() {
  embedded_computations_.Clear();
}
inline const ::xla::SessionComputation& SessionModule::embedded_computations(int index) const {
  // @@protoc_insertion_point(field_get:xla.SessionModule.embedded_computations)
  return embedded_computations_.Get(index);
}
inline ::xla::SessionComputation* SessionModule::mutable_embedded_computations(int index) {
  // @@protoc_insertion_point(field_mutable:xla.SessionModule.embedded_computations)
  return embedded_computations_.Mutable(index);
}
inline ::xla::SessionComputation* SessionModule::add_embedded_computations() {
  // @@protoc_insertion_point(field_add:xla.SessionModule.embedded_computations)
  return embedded_computations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xla::SessionComputation >*
SessionModule::mutable_embedded_computations() {
  // @@protoc_insertion_point(field_mutable_list:xla.SessionModule.embedded_computations)
  return &embedded_computations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::SessionComputation >&
SessionModule::embedded_computations() const {
  // @@protoc_insertion_point(field_list:xla.SessionModule.embedded_computations)
  return embedded_computations_;
}

// repeated .xla.Literal arguments = 3;
inline int SessionModule::arguments_size() const {
  return arguments_.size();
}
inline void SessionModule::clear_arguments() {
  arguments_.Clear();
}
inline const ::xla::Literal& SessionModule::arguments(int index) const {
  // @@protoc_insertion_point(field_get:xla.SessionModule.arguments)
  return arguments_.Get(index);
}
inline ::xla::Literal* SessionModule::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:xla.SessionModule.arguments)
  return arguments_.Mutable(index);
}
inline ::xla::Literal* SessionModule::add_arguments() {
  // @@protoc_insertion_point(field_add:xla.SessionModule.arguments)
  return arguments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::xla::Literal >*
SessionModule::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:xla.SessionModule.arguments)
  return &arguments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::xla::Literal >&
SessionModule::arguments() const {
  // @@protoc_insertion_point(field_list:xla.SessionModule.arguments)
  return arguments_;
}

// .xla.Literal result = 4;
inline bool SessionModule::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
inline void SessionModule::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
inline const ::xla::Literal& SessionModule::result() const {
  // @@protoc_insertion_point(field_get:xla.SessionModule.result)
  return result_ != NULL ? *result_
                         : *::xla::Literal::internal_default_instance();
}
inline ::xla::Literal* SessionModule::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::xla::Literal;
  }
  // @@protoc_insertion_point(field_mutable:xla.SessionModule.result)
  return result_;
}
inline ::xla::Literal* SessionModule::release_result() {
  // @@protoc_insertion_point(field_release:xla.SessionModule.result)
  
  ::xla::Literal* temp = result_;
  result_ = NULL;
  return temp;
}
inline void SessionModule::set_allocated_result(::xla::Literal* result) {
  delete result_;
  if (result != NULL && result->GetArena() != NULL) {
    ::xla::Literal* new_result = new ::xla::Literal;
    new_result->CopyFrom(*result);
    result = new_result;
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:xla.SessionModule.result)
}

// string execution_platform = 5;
inline void SessionModule::clear_execution_platform() {
  execution_platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SessionModule::execution_platform() const {
  // @@protoc_insertion_point(field_get:xla.SessionModule.execution_platform)
  return execution_platform_.GetNoArena();
}
inline void SessionModule::set_execution_platform(const ::std::string& value) {
  
  execution_platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xla.SessionModule.execution_platform)
}
#if LANG_CXX11
inline void SessionModule::set_execution_platform(::std::string&& value) {
  
  execution_platform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xla.SessionModule.execution_platform)
}
#endif
inline void SessionModule::set_execution_platform(const char* value) {
  
  execution_platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xla.SessionModule.execution_platform)
}
inline void SessionModule::set_execution_platform(const char* value, size_t size) {
  
  execution_platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xla.SessionModule.execution_platform)
}
inline ::std::string* SessionModule::mutable_execution_platform() {
  
  // @@protoc_insertion_point(field_mutable:xla.SessionModule.execution_platform)
  return execution_platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SessionModule::release_execution_platform() {
  // @@protoc_insertion_point(field_release:xla.SessionModule.execution_platform)
  
  return execution_platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SessionModule::set_allocated_execution_platform(::std::string* execution_platform) {
  if (execution_platform != NULL) {
    
  } else {
    
  }
  execution_platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), execution_platform);
  // @@protoc_insertion_point(field_set_allocated:xla.SessionModule.execution_platform)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace xla

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tensorflow_2fcompiler_2fxla_2fservice_2fsession_2eproto__INCLUDED
