// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/python/framework/cpp_shape_inference.proto

#ifndef PROTOBUF_tensorflow_2fpython_2fframework_2fcpp_5fshape_5finference_2eproto__INCLUDED
#define PROTOBUF_tensorflow_2fpython_2fframework_2fcpp_5fshape_5finference_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "tensorflow/core/framework/types.pb.h"
#include "tensorflow/core/framework/tensor_shape.pb.h"
// @@protoc_insertion_point(includes)
namespace tensorflow {
class CppShapeInferenceInputsNeeded;
class CppShapeInferenceInputsNeededDefaultTypeInternal;
extern CppShapeInferenceInputsNeededDefaultTypeInternal _CppShapeInferenceInputsNeeded_default_instance_;
class CppShapeInferenceResult;
class CppShapeInferenceResultDefaultTypeInternal;
extern CppShapeInferenceResultDefaultTypeInternal _CppShapeInferenceResult_default_instance_;
class TensorShapeProto;
class TensorShapeProtoDefaultTypeInternal;
extern TensorShapeProtoDefaultTypeInternal _TensorShapeProto_default_instance_;
class TensorShapeProto_Dim;
class TensorShapeProto_DimDefaultTypeInternal;
extern TensorShapeProto_DimDefaultTypeInternal _TensorShapeProto_Dim_default_instance_;
}  // namespace tensorflow

namespace tensorflow {

namespace protobuf_tensorflow_2fpython_2fframework_2fcpp_5fshape_5finference_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_tensorflow_2fpython_2fframework_2fcpp_5fshape_5finference_2eproto

// ===================================================================

class CppShapeInferenceResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.CppShapeInferenceResult) */ {
 public:
  CppShapeInferenceResult();
  virtual ~CppShapeInferenceResult();

  CppShapeInferenceResult(const CppShapeInferenceResult& from);

  inline CppShapeInferenceResult& operator=(const CppShapeInferenceResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CppShapeInferenceResult& default_instance();

  static inline const CppShapeInferenceResult* internal_default_instance() {
    return reinterpret_cast<const CppShapeInferenceResult*>(
               &_CppShapeInferenceResult_default_instance_);
  }

  void UnsafeArenaSwap(CppShapeInferenceResult* other);
  void Swap(CppShapeInferenceResult* other);

  // implements Message ----------------------------------------------

  inline CppShapeInferenceResult* New() const PROTOBUF_FINAL { return New(NULL); }

  CppShapeInferenceResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CppShapeInferenceResult& from);
  void MergeFrom(const CppShapeInferenceResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CppShapeInferenceResult* other);
  protected:
  explicit CppShapeInferenceResult(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .tensorflow.TensorShapeProto shape = 1;
  bool has_shape() const;
  void clear_shape();
  static const int kShapeFieldNumber = 1;
  private:
  void _slow_mutable_shape();
  void _slow_set_allocated_shape(
      ::google::protobuf::Arena* message_arena, ::tensorflow::TensorShapeProto** shape);
  ::tensorflow::TensorShapeProto* _slow_release_shape();
  public:
  const ::tensorflow::TensorShapeProto& shape() const;
  ::tensorflow::TensorShapeProto* mutable_shape();
  ::tensorflow::TensorShapeProto* release_shape();
  void set_allocated_shape(::tensorflow::TensorShapeProto* shape);
  ::tensorflow::TensorShapeProto* unsafe_arena_release_shape();
  void unsafe_arena_set_allocated_shape(
      ::tensorflow::TensorShapeProto* shape);

  // .tensorflow.TensorShapeProto handle_shape = 2;
  bool has_handle_shape() const;
  void clear_handle_shape();
  static const int kHandleShapeFieldNumber = 2;
  private:
  void _slow_mutable_handle_shape();
  void _slow_set_allocated_handle_shape(
      ::google::protobuf::Arena* message_arena, ::tensorflow::TensorShapeProto** handle_shape);
  ::tensorflow::TensorShapeProto* _slow_release_handle_shape();
  public:
  const ::tensorflow::TensorShapeProto& handle_shape() const;
  ::tensorflow::TensorShapeProto* mutable_handle_shape();
  ::tensorflow::TensorShapeProto* release_handle_shape();
  void set_allocated_handle_shape(::tensorflow::TensorShapeProto* handle_shape);
  ::tensorflow::TensorShapeProto* unsafe_arena_release_handle_shape();
  void unsafe_arena_set_allocated_handle_shape(
      ::tensorflow::TensorShapeProto* handle_shape);

  // .tensorflow.DataType handle_dtype = 3;
  void clear_handle_dtype();
  static const int kHandleDtypeFieldNumber = 3;
  ::tensorflow::DataType handle_dtype() const;
  void set_handle_dtype(::tensorflow::DataType value);

  // @@protoc_insertion_point(class_scope:tensorflow.CppShapeInferenceResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::tensorflow::TensorShapeProto* shape_;
  ::tensorflow::TensorShapeProto* handle_shape_;
  int handle_dtype_;
  mutable int _cached_size_;
  friend struct  protobuf_tensorflow_2fpython_2fframework_2fcpp_5fshape_5finference_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CppShapeInferenceInputsNeeded : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.CppShapeInferenceInputsNeeded) */ {
 public:
  CppShapeInferenceInputsNeeded();
  virtual ~CppShapeInferenceInputsNeeded();

  CppShapeInferenceInputsNeeded(const CppShapeInferenceInputsNeeded& from);

  inline CppShapeInferenceInputsNeeded& operator=(const CppShapeInferenceInputsNeeded& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CppShapeInferenceInputsNeeded& default_instance();

  static inline const CppShapeInferenceInputsNeeded* internal_default_instance() {
    return reinterpret_cast<const CppShapeInferenceInputsNeeded*>(
               &_CppShapeInferenceInputsNeeded_default_instance_);
  }

  void UnsafeArenaSwap(CppShapeInferenceInputsNeeded* other);
  void Swap(CppShapeInferenceInputsNeeded* other);

  // implements Message ----------------------------------------------

  inline CppShapeInferenceInputsNeeded* New() const PROTOBUF_FINAL { return New(NULL); }

  CppShapeInferenceInputsNeeded* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CppShapeInferenceInputsNeeded& from);
  void MergeFrom(const CppShapeInferenceInputsNeeded& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CppShapeInferenceInputsNeeded* other);
  protected:
  explicit CppShapeInferenceInputsNeeded(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 input_tensors_needed = 1;
  int input_tensors_needed_size() const;
  void clear_input_tensors_needed();
  static const int kInputTensorsNeededFieldNumber = 1;
  ::google::protobuf::int32 input_tensors_needed(int index) const;
  void set_input_tensors_needed(int index, ::google::protobuf::int32 value);
  void add_input_tensors_needed(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      input_tensors_needed() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_input_tensors_needed();

  // repeated int32 input_tensors_as_shapes_needed = 2;
  int input_tensors_as_shapes_needed_size() const;
  void clear_input_tensors_as_shapes_needed();
  static const int kInputTensorsAsShapesNeededFieldNumber = 2;
  ::google::protobuf::int32 input_tensors_as_shapes_needed(int index) const;
  void set_input_tensors_as_shapes_needed(int index, ::google::protobuf::int32 value);
  void add_input_tensors_as_shapes_needed(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      input_tensors_as_shapes_needed() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_input_tensors_as_shapes_needed();

  // @@protoc_insertion_point(class_scope:tensorflow.CppShapeInferenceInputsNeeded)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > input_tensors_needed_;
  mutable int _input_tensors_needed_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > input_tensors_as_shapes_needed_;
  mutable int _input_tensors_as_shapes_needed_cached_byte_size_;
  mutable int _cached_size_;
  friend struct  protobuf_tensorflow_2fpython_2fframework_2fcpp_5fshape_5finference_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CppShapeInferenceResult

// .tensorflow.TensorShapeProto shape = 1;
inline bool CppShapeInferenceResult::has_shape() const {
  return this != internal_default_instance() && shape_ != NULL;
}
inline void CppShapeInferenceResult::clear_shape() {
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) delete shape_;
  shape_ = NULL;
}
inline const ::tensorflow::TensorShapeProto& CppShapeInferenceResult::shape() const {
  // @@protoc_insertion_point(field_get:tensorflow.CppShapeInferenceResult.shape)
  return shape_ != NULL ? *shape_
                         : *::tensorflow::TensorShapeProto::internal_default_instance();
}
inline ::tensorflow::TensorShapeProto* CppShapeInferenceResult::mutable_shape() {
  
  if (shape_ == NULL) {
    _slow_mutable_shape();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.CppShapeInferenceResult.shape)
  return shape_;
}
inline ::tensorflow::TensorShapeProto* CppShapeInferenceResult::release_shape() {
  // @@protoc_insertion_point(field_release:tensorflow.CppShapeInferenceResult.shape)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_shape();
  } else {
    ::tensorflow::TensorShapeProto* temp = shape_;
    shape_ = NULL;
    return temp;
  }
}
inline  void CppShapeInferenceResult::set_allocated_shape(::tensorflow::TensorShapeProto* shape) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete shape_;
  }
  if (shape != NULL) {
    _slow_set_allocated_shape(message_arena, &shape);
  }
  shape_ = shape;
  if (shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CppShapeInferenceResult.shape)
}

// .tensorflow.TensorShapeProto handle_shape = 2;
inline bool CppShapeInferenceResult::has_handle_shape() const {
  return this != internal_default_instance() && handle_shape_ != NULL;
}
inline void CppShapeInferenceResult::clear_handle_shape() {
  if (GetArenaNoVirtual() == NULL && handle_shape_ != NULL) delete handle_shape_;
  handle_shape_ = NULL;
}
inline const ::tensorflow::TensorShapeProto& CppShapeInferenceResult::handle_shape() const {
  // @@protoc_insertion_point(field_get:tensorflow.CppShapeInferenceResult.handle_shape)
  return handle_shape_ != NULL ? *handle_shape_
                         : *::tensorflow::TensorShapeProto::internal_default_instance();
}
inline ::tensorflow::TensorShapeProto* CppShapeInferenceResult::mutable_handle_shape() {
  
  if (handle_shape_ == NULL) {
    _slow_mutable_handle_shape();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.CppShapeInferenceResult.handle_shape)
  return handle_shape_;
}
inline ::tensorflow::TensorShapeProto* CppShapeInferenceResult::release_handle_shape() {
  // @@protoc_insertion_point(field_release:tensorflow.CppShapeInferenceResult.handle_shape)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_handle_shape();
  } else {
    ::tensorflow::TensorShapeProto* temp = handle_shape_;
    handle_shape_ = NULL;
    return temp;
  }
}
inline  void CppShapeInferenceResult::set_allocated_handle_shape(::tensorflow::TensorShapeProto* handle_shape) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete handle_shape_;
  }
  if (handle_shape != NULL) {
    _slow_set_allocated_handle_shape(message_arena, &handle_shape);
  }
  handle_shape_ = handle_shape;
  if (handle_shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CppShapeInferenceResult.handle_shape)
}

// .tensorflow.DataType handle_dtype = 3;
inline void CppShapeInferenceResult::clear_handle_dtype() {
  handle_dtype_ = 0;
}
inline ::tensorflow::DataType CppShapeInferenceResult::handle_dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.CppShapeInferenceResult.handle_dtype)
  return static_cast< ::tensorflow::DataType >(handle_dtype_);
}
inline void CppShapeInferenceResult::set_handle_dtype(::tensorflow::DataType value) {
  
  handle_dtype_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CppShapeInferenceResult.handle_dtype)
}

// -------------------------------------------------------------------

// CppShapeInferenceInputsNeeded

// repeated int32 input_tensors_needed = 1;
inline int CppShapeInferenceInputsNeeded::input_tensors_needed_size() const {
  return input_tensors_needed_.size();
}
inline void CppShapeInferenceInputsNeeded::clear_input_tensors_needed() {
  input_tensors_needed_.Clear();
}
inline ::google::protobuf::int32 CppShapeInferenceInputsNeeded::input_tensors_needed(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.CppShapeInferenceInputsNeeded.input_tensors_needed)
  return input_tensors_needed_.Get(index);
}
inline void CppShapeInferenceInputsNeeded::set_input_tensors_needed(int index, ::google::protobuf::int32 value) {
  input_tensors_needed_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.CppShapeInferenceInputsNeeded.input_tensors_needed)
}
inline void CppShapeInferenceInputsNeeded::add_input_tensors_needed(::google::protobuf::int32 value) {
  input_tensors_needed_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.CppShapeInferenceInputsNeeded.input_tensors_needed)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CppShapeInferenceInputsNeeded::input_tensors_needed() const {
  // @@protoc_insertion_point(field_list:tensorflow.CppShapeInferenceInputsNeeded.input_tensors_needed)
  return input_tensors_needed_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CppShapeInferenceInputsNeeded::mutable_input_tensors_needed() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CppShapeInferenceInputsNeeded.input_tensors_needed)
  return &input_tensors_needed_;
}

// repeated int32 input_tensors_as_shapes_needed = 2;
inline int CppShapeInferenceInputsNeeded::input_tensors_as_shapes_needed_size() const {
  return input_tensors_as_shapes_needed_.size();
}
inline void CppShapeInferenceInputsNeeded::clear_input_tensors_as_shapes_needed() {
  input_tensors_as_shapes_needed_.Clear();
}
inline ::google::protobuf::int32 CppShapeInferenceInputsNeeded::input_tensors_as_shapes_needed(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.CppShapeInferenceInputsNeeded.input_tensors_as_shapes_needed)
  return input_tensors_as_shapes_needed_.Get(index);
}
inline void CppShapeInferenceInputsNeeded::set_input_tensors_as_shapes_needed(int index, ::google::protobuf::int32 value) {
  input_tensors_as_shapes_needed_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.CppShapeInferenceInputsNeeded.input_tensors_as_shapes_needed)
}
inline void CppShapeInferenceInputsNeeded::add_input_tensors_as_shapes_needed(::google::protobuf::int32 value) {
  input_tensors_as_shapes_needed_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.CppShapeInferenceInputsNeeded.input_tensors_as_shapes_needed)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CppShapeInferenceInputsNeeded::input_tensors_as_shapes_needed() const {
  // @@protoc_insertion_point(field_list:tensorflow.CppShapeInferenceInputsNeeded.input_tensors_as_shapes_needed)
  return input_tensors_as_shapes_needed_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CppShapeInferenceInputsNeeded::mutable_input_tensors_as_shapes_needed() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.CppShapeInferenceInputsNeeded.input_tensors_as_shapes_needed)
  return &input_tensors_as_shapes_needed_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tensorflow_2fpython_2fframework_2fcpp_5fshape_5finference_2eproto__INCLUDED
