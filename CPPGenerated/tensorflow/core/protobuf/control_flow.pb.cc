// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/control_flow.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow/core/protobuf/control_flow.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {
class ValuesDefDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ValuesDef> {
} _ValuesDef_default_instance_;
class CondContextDefDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CondContextDef> {
} _CondContextDef_default_instance_;
class WhileContextDefDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<WhileContextDef> {
} _WhileContextDef_default_instance_;

namespace protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValuesDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValuesDef, values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValuesDef, external_values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, context_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, pred_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, pivot_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, branch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CondContextDef, values_def_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, context_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, parallel_iterations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, back_prop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, swap_memory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, pivot_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, pivot_for_pred_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, pivot_for_body_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, loop_exit_names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WhileContextDef, values_def_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ValuesDef)},
  { 6, -1, sizeof(CondContextDef)},
  { 15, -1, sizeof(WhileContextDef)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ValuesDef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CondContextDef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WhileContextDef_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tensorflow/core/protobuf/control_flow.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
  const ::google::protobuf::Descriptor* ValuesDef_ExternalValuesEntry_descriptor = protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_level_metadata[0].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        ValuesDef_ExternalValuesEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                ValuesDef_ExternalValuesEntry_descriptor));
}

}  // namespace

void TableStruct::Shutdown() {
  _ValuesDef_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CondContextDef_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _WhileContextDef_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ValuesDef_default_instance_.DefaultConstruct();
  _CondContextDef_default_instance_.DefaultConstruct();
  _WhileContextDef_default_instance_.DefaultConstruct();
  _CondContextDef_default_instance_.get_mutable()->values_def_ = const_cast< ::tensorflow::ValuesDef*>(
      ::tensorflow::ValuesDef::internal_default_instance());
  _WhileContextDef_default_instance_.get_mutable()->values_def_ = const_cast< ::tensorflow::ValuesDef*>(
      ::tensorflow::ValuesDef::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n+tensorflow/core/protobuf/control_flow."
      "proto\022\ntensorflow\"\226\001\n\tValuesDef\022\016\n\006value"
      "s\030\001 \003(\t\022B\n\017external_values\030\002 \003(\0132).tenso"
      "rflow.ValuesDef.ExternalValuesEntry\0325\n\023E"
      "xternalValuesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
      "\030\002 \001(\t:\0028\001\"\210\001\n\016CondContextDef\022\024\n\014context"
      "_name\030\001 \001(\t\022\021\n\tpred_name\030\002 \001(\t\022\022\n\npivot_"
      "name\030\003 \001(\t\022\016\n\006branch\030\004 \001(\005\022)\n\nvalues_def"
      "\030\005 \001(\0132\025.tensorflow.ValuesDef\"\376\001\n\017WhileC"
      "ontextDef\022\024\n\014context_name\030\001 \001(\t\022\033\n\023paral"
      "lel_iterations\030\002 \001(\005\022\021\n\tback_prop\030\003 \001(\010\022"
      "\023\n\013swap_memory\030\004 \001(\010\022\022\n\npivot_name\030\005 \001(\t"
      "\022\033\n\023pivot_for_pred_name\030\006 \001(\t\022\033\n\023pivot_f"
      "or_body_name\030\007 \001(\t\022\027\n\017loop_exit_names\030\010 "
      "\003(\t\022)\n\nvalues_def\030\t \001(\0132\025.tensorflow.Val"
      "uesDefB2\n\030org.tensorflow.frameworkB\021Cont"
      "rolFlowProtosP\001\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 666);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/control_flow.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto


// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValuesDef::kValuesFieldNumber;
const int ValuesDef::kExternalValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValuesDef::ValuesDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.ValuesDef)
}
ValuesDef::ValuesDef(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  values_(arena),
  external_values_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ValuesDef)
}
ValuesDef::ValuesDef(const ValuesDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& ValuesDef_ExternalValuesEntry_descriptor = protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_level_metadata[0].descriptor;
  external_values_.SetAssignDescriptorCallback(
      protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::protobuf_AssignDescriptorsOnce);
  external_values_.SetEntryDescriptor(
      &ValuesDef_ExternalValuesEntry_descriptor);
  external_values_.MergeFrom(from.external_values_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.ValuesDef)
}

void ValuesDef::SharedCtor() {
  const ::google::protobuf::Descriptor*& ValuesDef_ExternalValuesEntry_descriptor = protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_level_metadata[0].descriptor;
  external_values_.SetAssignDescriptorCallback(
      protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::protobuf_AssignDescriptorsOnce);
  external_values_.SetEntryDescriptor(
      &ValuesDef_ExternalValuesEntry_descriptor);
  _cached_size_ = 0;
}

ValuesDef::~ValuesDef() {
  // @@protoc_insertion_point(destructor:tensorflow.ValuesDef)
  SharedDtor();
}

void ValuesDef::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

}

void ValuesDef::ArenaDtor(void* object) {
  ValuesDef* _this = reinterpret_cast< ValuesDef* >(object);
  (void)_this;
}
void ValuesDef::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ValuesDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValuesDef::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_level_metadata[1].descriptor;
}

const ValuesDef& ValuesDef::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
  return *internal_default_instance();
}

ValuesDef* ValuesDef::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ValuesDef>(arena);
}

void ValuesDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ValuesDef)
  values_.Clear();
  external_values_.Clear();
}

bool ValuesDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.ValuesDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string values = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_values()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->values(this->values_size() - 1).data(),
            this->values(this->values_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.ValuesDef.values"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> external_values = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          ValuesDef_ExternalValuesEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&external_values_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.ValuesDef.ExternalValuesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.ValuesDef.ExternalValuesEntry.value"));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.ValuesDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.ValuesDef)
  return false;
#undef DO_
}

void ValuesDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.ValuesDef)
  // repeated string values = 1;
  for (int i = 0; i < this->values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), this->values(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ValuesDef.values");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->values(i), output);
  }

  // map<string, string> external_values = 2;
  if (!this->external_values().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.ValuesDef.ExternalValuesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.ValuesDef.ExternalValuesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->external_values().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->external_values().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->external_values().begin();
          it != this->external_values().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<ValuesDef_ExternalValuesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(external_values_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ValuesDef_ExternalValuesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->external_values().begin();
          it != this->external_values().end(); ++it) {
        entry.reset(external_values_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.ValuesDef)
}

::google::protobuf::uint8* ValuesDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ValuesDef)
  // repeated string values = 1;
  for (int i = 0; i < this->values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), this->values(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.ValuesDef.values");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->values(i), target);
  }

  // map<string, string> external_values = 2;
  if (!this->external_values().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.ValuesDef.ExternalValuesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "tensorflow.ValuesDef.ExternalValuesEntry.value");
      }
    };

    if (deterministic &&
        this->external_values().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->external_values().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->external_values().begin();
          it != this->external_values().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<ValuesDef_ExternalValuesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(external_values_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ValuesDef_ExternalValuesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->external_values().begin();
          it != this->external_values().end(); ++it) {
        entry.reset(external_values_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ValuesDef)
  return target;
}

size_t ValuesDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ValuesDef)
  size_t total_size = 0;

  // repeated string values = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  for (int i = 0; i < this->values_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->values(i));
  }

  // map<string, string> external_values = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->external_values_size());
  {
    ::google::protobuf::scoped_ptr<ValuesDef_ExternalValuesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->external_values().begin();
        it != this->external_values().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(external_values_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValuesDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ValuesDef)
  GOOGLE_DCHECK_NE(&from, this);
  const ValuesDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValuesDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ValuesDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ValuesDef)
    MergeFrom(*source);
  }
}

void ValuesDef::MergeFrom(const ValuesDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ValuesDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  values_.MergeFrom(from.values_);
  external_values_.MergeFrom(from.external_values_);
}

void ValuesDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ValuesDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValuesDef::CopyFrom(const ValuesDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ValuesDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValuesDef::IsInitialized() const {
  return true;
}

void ValuesDef::Swap(ValuesDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ValuesDef* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ValuesDef::UnsafeArenaSwap(ValuesDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ValuesDef::InternalSwap(ValuesDef* other) {
  values_.UnsafeArenaSwap(&other->values_);
  external_values_.Swap(&other->external_values_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValuesDef::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ValuesDef

// repeated string values = 1;
int ValuesDef::values_size() const {
  return values_.size();
}
void ValuesDef::clear_values() {
  values_.Clear();
}
const ::std::string& ValuesDef::values(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.ValuesDef.values)
  return values_.Get(index);
}
::std::string* ValuesDef::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.ValuesDef.values)
  return values_.Mutable(index);
}
void ValuesDef::set_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.ValuesDef.values)
  values_.Mutable(index)->assign(value);
}
void ValuesDef::set_values(int index, const char* value) {
  values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.ValuesDef.values)
}
void ValuesDef::set_values(int index, const char* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.ValuesDef.values)
}
::std::string* ValuesDef::add_values() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.ValuesDef.values)
  return values_.Add();
}
void ValuesDef::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.ValuesDef.values)
}
void ValuesDef::add_values(const char* value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.ValuesDef.values)
}
void ValuesDef::add_values(const char* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.ValuesDef.values)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ValuesDef::values() const {
  // @@protoc_insertion_point(field_list:tensorflow.ValuesDef.values)
  return values_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ValuesDef::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.ValuesDef.values)
  return &values_;
}

// map<string, string> external_values = 2;
int ValuesDef::external_values_size() const {
  return external_values_.size();
}
void ValuesDef::clear_external_values() {
  external_values_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
ValuesDef::external_values() const {
  // @@protoc_insertion_point(field_map:tensorflow.ValuesDef.external_values)
  return external_values_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
ValuesDef::mutable_external_values() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.ValuesDef.external_values)
  return external_values_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void CondContextDef::_slow_mutable_values_def() {
  values_def_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::ValuesDef >(
      GetArenaNoVirtual());
}
::tensorflow::ValuesDef* CondContextDef::_slow_release_values_def() {
  if (values_def_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::ValuesDef* temp = new ::tensorflow::ValuesDef(*values_def_);
    values_def_ = NULL;
    return temp;
  }
}
::tensorflow::ValuesDef* CondContextDef::unsafe_arena_release_values_def() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CondContextDef.values_def)
  
  ::tensorflow::ValuesDef* temp = values_def_;
  values_def_ = NULL;
  return temp;
}
void CondContextDef::_slow_set_allocated_values_def(
    ::google::protobuf::Arena* message_arena, ::tensorflow::ValuesDef** values_def) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*values_def) == NULL) {
      message_arena->Own(*values_def);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*values_def)) {
      ::tensorflow::ValuesDef* new_values_def = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::ValuesDef >(
            message_arena);
      new_values_def->CopyFrom(**values_def);
      *values_def = new_values_def;
    }
}
void CondContextDef::unsafe_arena_set_allocated_values_def(
    ::tensorflow::ValuesDef* values_def) {
  if (GetArenaNoVirtual() == NULL) {
    delete values_def_;
  }
  values_def_ = values_def;
  if (values_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CondContextDef.values_def)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CondContextDef::kContextNameFieldNumber;
const int CondContextDef::kPredNameFieldNumber;
const int CondContextDef::kPivotNameFieldNumber;
const int CondContextDef::kBranchFieldNumber;
const int CondContextDef::kValuesDefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CondContextDef::CondContextDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.CondContextDef)
}
CondContextDef::CondContextDef(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CondContextDef)
}
CondContextDef::CondContextDef(const CondContextDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  context_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.context_name().size() > 0) {
    context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_name(),
      GetArenaNoVirtual());
  }
  pred_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pred_name().size() > 0) {
    pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pred_name(),
      GetArenaNoVirtual());
  }
  pivot_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pivot_name().size() > 0) {
    pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pivot_name(),
      GetArenaNoVirtual());
  }
  if (from.has_values_def()) {
    values_def_ = new ::tensorflow::ValuesDef(*from.values_def_);
  } else {
    values_def_ = NULL;
  }
  branch_ = from.branch_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.CondContextDef)
}

void CondContextDef::SharedCtor() {
  context_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pred_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pivot_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&values_def_, 0, reinterpret_cast<char*>(&branch_) -
    reinterpret_cast<char*>(&values_def_) + sizeof(branch_));
  _cached_size_ = 0;
}

CondContextDef::~CondContextDef() {
  // @@protoc_insertion_point(destructor:tensorflow.CondContextDef)
  SharedDtor();
}

void CondContextDef::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  context_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  pred_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  pivot_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != internal_default_instance()) {
    delete values_def_;
  }
}

void CondContextDef::ArenaDtor(void* object) {
  CondContextDef* _this = reinterpret_cast< CondContextDef* >(object);
  (void)_this;
}
void CondContextDef::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CondContextDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CondContextDef::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_level_metadata[2].descriptor;
}

const CondContextDef& CondContextDef::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
  return *internal_default_instance();
}

CondContextDef* CondContextDef::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<CondContextDef>(arena);
}

void CondContextDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CondContextDef)
  context_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  pred_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  pivot_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && values_def_ != NULL) {
    delete values_def_;
  }
  values_def_ = NULL;
  branch_ = 0;
}

bool CondContextDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.CondContextDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string context_name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_context_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->context_name().data(), this->context_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CondContextDef.context_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pred_name = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pred_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pred_name().data(), this->pred_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CondContextDef.pred_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pivot_name = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pivot_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pivot_name().data(), this->pivot_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.CondContextDef.pivot_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 branch = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &branch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.ValuesDef values_def = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_values_def()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.CondContextDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.CondContextDef)
  return false;
#undef DO_
}

void CondContextDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.CondContextDef)
  // string context_name = 1;
  if (this->context_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->context_name().data(), this->context_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CondContextDef.context_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->context_name(), output);
  }

  // string pred_name = 2;
  if (this->pred_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pred_name().data(), this->pred_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CondContextDef.pred_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pred_name(), output);
  }

  // string pivot_name = 3;
  if (this->pivot_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_name().data(), this->pivot_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CondContextDef.pivot_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pivot_name(), output);
  }

  // int32 branch = 4;
  if (this->branch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->branch(), output);
  }

  // .tensorflow.ValuesDef values_def = 5;
  if (this->has_values_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->values_def_, output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.CondContextDef)
}

::google::protobuf::uint8* CondContextDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CondContextDef)
  // string context_name = 1;
  if (this->context_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->context_name().data(), this->context_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CondContextDef.context_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->context_name(), target);
  }

  // string pred_name = 2;
  if (this->pred_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pred_name().data(), this->pred_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CondContextDef.pred_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pred_name(), target);
  }

  // string pivot_name = 3;
  if (this->pivot_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_name().data(), this->pivot_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CondContextDef.pivot_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pivot_name(), target);
  }

  // int32 branch = 4;
  if (this->branch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->branch(), target);
  }

  // .tensorflow.ValuesDef values_def = 5;
  if (this->has_values_def()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->values_def_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CondContextDef)
  return target;
}

size_t CondContextDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CondContextDef)
  size_t total_size = 0;

  // string context_name = 1;
  if (this->context_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->context_name());
  }

  // string pred_name = 2;
  if (this->pred_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pred_name());
  }

  // string pivot_name = 3;
  if (this->pivot_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pivot_name());
  }

  // .tensorflow.ValuesDef values_def = 5;
  if (this->has_values_def()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->values_def_);
  }

  // int32 branch = 4;
  if (this->branch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->branch());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CondContextDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.CondContextDef)
  GOOGLE_DCHECK_NE(&from, this);
  const CondContextDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CondContextDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.CondContextDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.CondContextDef)
    MergeFrom(*source);
  }
}

void CondContextDef::MergeFrom(const CondContextDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CondContextDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.context_name().size() > 0) {
    set_context_name(from.context_name());
  }
  if (from.pred_name().size() > 0) {
    set_pred_name(from.pred_name());
  }
  if (from.pivot_name().size() > 0) {
    set_pivot_name(from.pivot_name());
  }
  if (from.has_values_def()) {
    mutable_values_def()->::tensorflow::ValuesDef::MergeFrom(from.values_def());
  }
  if (from.branch() != 0) {
    set_branch(from.branch());
  }
}

void CondContextDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.CondContextDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CondContextDef::CopyFrom(const CondContextDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CondContextDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CondContextDef::IsInitialized() const {
  return true;
}

void CondContextDef::Swap(CondContextDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CondContextDef* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CondContextDef::UnsafeArenaSwap(CondContextDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CondContextDef::InternalSwap(CondContextDef* other) {
  context_name_.Swap(&other->context_name_);
  pred_name_.Swap(&other->pred_name_);
  pivot_name_.Swap(&other->pivot_name_);
  std::swap(values_def_, other->values_def_);
  std::swap(branch_, other->branch_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CondContextDef::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CondContextDef

// string context_name = 1;
void CondContextDef::clear_context_name() {
  context_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CondContextDef::context_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.context_name)
  return context_name_.Get();
}
void CondContextDef::set_context_name(const ::std::string& value) {
  
  context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CondContextDef.context_name)
}
void CondContextDef::set_context_name(const char* value) {
  
  context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CondContextDef.context_name)
}
void CondContextDef::set_context_name(const char* value,
    size_t size) {
  
  context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CondContextDef.context_name)
}
::std::string* CondContextDef::mutable_context_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CondContextDef.context_name)
  return context_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CondContextDef::release_context_name() {
  // @@protoc_insertion_point(field_release:tensorflow.CondContextDef.context_name)
  
  return context_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CondContextDef::unsafe_arena_release_context_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CondContextDef.context_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return context_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CondContextDef::set_allocated_context_name(::std::string* context_name) {
  if (context_name != NULL) {
    
  } else {
    
  }
  context_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CondContextDef.context_name)
}
void CondContextDef::unsafe_arena_set_allocated_context_name(
    ::std::string* context_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (context_name != NULL) {
    
  } else {
    
  }
  context_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      context_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CondContextDef.context_name)
}

// string pred_name = 2;
void CondContextDef::clear_pred_name() {
  pred_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CondContextDef::pred_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.pred_name)
  return pred_name_.Get();
}
void CondContextDef::set_pred_name(const ::std::string& value) {
  
  pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CondContextDef.pred_name)
}
void CondContextDef::set_pred_name(const char* value) {
  
  pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CondContextDef.pred_name)
}
void CondContextDef::set_pred_name(const char* value,
    size_t size) {
  
  pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CondContextDef.pred_name)
}
::std::string* CondContextDef::mutable_pred_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CondContextDef.pred_name)
  return pred_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CondContextDef::release_pred_name() {
  // @@protoc_insertion_point(field_release:tensorflow.CondContextDef.pred_name)
  
  return pred_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CondContextDef::unsafe_arena_release_pred_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CondContextDef.pred_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return pred_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CondContextDef::set_allocated_pred_name(::std::string* pred_name) {
  if (pred_name != NULL) {
    
  } else {
    
  }
  pred_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pred_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CondContextDef.pred_name)
}
void CondContextDef::unsafe_arena_set_allocated_pred_name(
    ::std::string* pred_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (pred_name != NULL) {
    
  } else {
    
  }
  pred_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      pred_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CondContextDef.pred_name)
}

// string pivot_name = 3;
void CondContextDef::clear_pivot_name() {
  pivot_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& CondContextDef::pivot_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.pivot_name)
  return pivot_name_.Get();
}
void CondContextDef::set_pivot_name(const ::std::string& value) {
  
  pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.CondContextDef.pivot_name)
}
void CondContextDef::set_pivot_name(const char* value) {
  
  pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.CondContextDef.pivot_name)
}
void CondContextDef::set_pivot_name(const char* value,
    size_t size) {
  
  pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.CondContextDef.pivot_name)
}
::std::string* CondContextDef::mutable_pivot_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.CondContextDef.pivot_name)
  return pivot_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CondContextDef::release_pivot_name() {
  // @@protoc_insertion_point(field_release:tensorflow.CondContextDef.pivot_name)
  
  return pivot_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* CondContextDef::unsafe_arena_release_pivot_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.CondContextDef.pivot_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return pivot_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void CondContextDef::set_allocated_pivot_name(::std::string* pivot_name) {
  if (pivot_name != NULL) {
    
  } else {
    
  }
  pivot_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pivot_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CondContextDef.pivot_name)
}
void CondContextDef::unsafe_arena_set_allocated_pivot_name(
    ::std::string* pivot_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (pivot_name != NULL) {
    
  } else {
    
  }
  pivot_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      pivot_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.CondContextDef.pivot_name)
}

// int32 branch = 4;
void CondContextDef::clear_branch() {
  branch_ = 0;
}
::google::protobuf::int32 CondContextDef::branch() const {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.branch)
  return branch_;
}
void CondContextDef::set_branch(::google::protobuf::int32 value) {
  
  branch_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.CondContextDef.branch)
}

// .tensorflow.ValuesDef values_def = 5;
bool CondContextDef::has_values_def() const {
  return this != internal_default_instance() && values_def_ != NULL;
}
void CondContextDef::clear_values_def() {
  if (GetArenaNoVirtual() == NULL && values_def_ != NULL) delete values_def_;
  values_def_ = NULL;
}
const ::tensorflow::ValuesDef& CondContextDef::values_def() const {
  // @@protoc_insertion_point(field_get:tensorflow.CondContextDef.values_def)
  return values_def_ != NULL ? *values_def_
                         : *::tensorflow::ValuesDef::internal_default_instance();
}
::tensorflow::ValuesDef* CondContextDef::mutable_values_def() {
  
  if (values_def_ == NULL) {
    _slow_mutable_values_def();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.CondContextDef.values_def)
  return values_def_;
}
::tensorflow::ValuesDef* CondContextDef::release_values_def() {
  // @@protoc_insertion_point(field_release:tensorflow.CondContextDef.values_def)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_values_def();
  } else {
    ::tensorflow::ValuesDef* temp = values_def_;
    values_def_ = NULL;
    return temp;
  }
}
 void CondContextDef::set_allocated_values_def(::tensorflow::ValuesDef* values_def) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete values_def_;
  }
  if (values_def != NULL) {
    _slow_set_allocated_values_def(message_arena, &values_def);
  }
  values_def_ = values_def;
  if (values_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.CondContextDef.values_def)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void WhileContextDef::_slow_mutable_values_def() {
  values_def_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::ValuesDef >(
      GetArenaNoVirtual());
}
::tensorflow::ValuesDef* WhileContextDef::_slow_release_values_def() {
  if (values_def_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::ValuesDef* temp = new ::tensorflow::ValuesDef(*values_def_);
    values_def_ = NULL;
    return temp;
  }
}
::tensorflow::ValuesDef* WhileContextDef::unsafe_arena_release_values_def() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.WhileContextDef.values_def)
  
  ::tensorflow::ValuesDef* temp = values_def_;
  values_def_ = NULL;
  return temp;
}
void WhileContextDef::_slow_set_allocated_values_def(
    ::google::protobuf::Arena* message_arena, ::tensorflow::ValuesDef** values_def) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*values_def) == NULL) {
      message_arena->Own(*values_def);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*values_def)) {
      ::tensorflow::ValuesDef* new_values_def = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::ValuesDef >(
            message_arena);
      new_values_def->CopyFrom(**values_def);
      *values_def = new_values_def;
    }
}
void WhileContextDef::unsafe_arena_set_allocated_values_def(
    ::tensorflow::ValuesDef* values_def) {
  if (GetArenaNoVirtual() == NULL) {
    delete values_def_;
  }
  values_def_ = values_def;
  if (values_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.WhileContextDef.values_def)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WhileContextDef::kContextNameFieldNumber;
const int WhileContextDef::kParallelIterationsFieldNumber;
const int WhileContextDef::kBackPropFieldNumber;
const int WhileContextDef::kSwapMemoryFieldNumber;
const int WhileContextDef::kPivotNameFieldNumber;
const int WhileContextDef::kPivotForPredNameFieldNumber;
const int WhileContextDef::kPivotForBodyNameFieldNumber;
const int WhileContextDef::kLoopExitNamesFieldNumber;
const int WhileContextDef::kValuesDefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WhileContextDef::WhileContextDef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.WhileContextDef)
}
WhileContextDef::WhileContextDef(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  loop_exit_names_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.WhileContextDef)
}
WhileContextDef::WhileContextDef(const WhileContextDef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      loop_exit_names_(from.loop_exit_names_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  context_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.context_name().size() > 0) {
    context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.context_name(),
      GetArenaNoVirtual());
  }
  pivot_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pivot_name().size() > 0) {
    pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pivot_name(),
      GetArenaNoVirtual());
  }
  pivot_for_pred_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pivot_for_pred_name().size() > 0) {
    pivot_for_pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pivot_for_pred_name(),
      GetArenaNoVirtual());
  }
  pivot_for_body_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pivot_for_body_name().size() > 0) {
    pivot_for_body_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pivot_for_body_name(),
      GetArenaNoVirtual());
  }
  if (from.has_values_def()) {
    values_def_ = new ::tensorflow::ValuesDef(*from.values_def_);
  } else {
    values_def_ = NULL;
  }
  ::memcpy(&parallel_iterations_, &from.parallel_iterations_,
    reinterpret_cast<char*>(&swap_memory_) -
    reinterpret_cast<char*>(&parallel_iterations_) + sizeof(swap_memory_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.WhileContextDef)
}

void WhileContextDef::SharedCtor() {
  context_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pivot_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pivot_for_pred_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pivot_for_body_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&values_def_, 0, reinterpret_cast<char*>(&swap_memory_) -
    reinterpret_cast<char*>(&values_def_) + sizeof(swap_memory_));
  _cached_size_ = 0;
}

WhileContextDef::~WhileContextDef() {
  // @@protoc_insertion_point(destructor:tensorflow.WhileContextDef)
  SharedDtor();
}

void WhileContextDef::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  context_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  pivot_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  pivot_for_pred_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  pivot_for_body_name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != internal_default_instance()) {
    delete values_def_;
  }
}

void WhileContextDef::ArenaDtor(void* object) {
  WhileContextDef* _this = reinterpret_cast< WhileContextDef* >(object);
  (void)_this;
}
void WhileContextDef::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void WhileContextDef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WhileContextDef::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_level_metadata[3].descriptor;
}

const WhileContextDef& WhileContextDef::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults();
  return *internal_default_instance();
}

WhileContextDef* WhileContextDef::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<WhileContextDef>(arena);
}

void WhileContextDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.WhileContextDef)
  loop_exit_names_.Clear();
  context_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  pivot_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  pivot_for_pred_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  pivot_for_body_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && values_def_ != NULL) {
    delete values_def_;
  }
  values_def_ = NULL;
  ::memset(&parallel_iterations_, 0, reinterpret_cast<char*>(&swap_memory_) -
    reinterpret_cast<char*>(&parallel_iterations_) + sizeof(swap_memory_));
}

bool WhileContextDef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.WhileContextDef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string context_name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_context_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->context_name().data(), this->context_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.WhileContextDef.context_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 parallel_iterations = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parallel_iterations_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool back_prop = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &back_prop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool swap_memory = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &swap_memory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pivot_name = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pivot_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pivot_name().data(), this->pivot_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.WhileContextDef.pivot_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pivot_for_pred_name = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pivot_for_pred_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pivot_for_pred_name().data(), this->pivot_for_pred_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.WhileContextDef.pivot_for_pred_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pivot_for_body_name = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pivot_for_body_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pivot_for_body_name().data(), this->pivot_for_body_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.WhileContextDef.pivot_for_body_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string loop_exit_names = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_loop_exit_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->loop_exit_names(this->loop_exit_names_size() - 1).data(),
            this->loop_exit_names(this->loop_exit_names_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.WhileContextDef.loop_exit_names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.ValuesDef values_def = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_values_def()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.WhileContextDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.WhileContextDef)
  return false;
#undef DO_
}

void WhileContextDef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.WhileContextDef)
  // string context_name = 1;
  if (this->context_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->context_name().data(), this->context_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.context_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->context_name(), output);
  }

  // int32 parallel_iterations = 2;
  if (this->parallel_iterations() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->parallel_iterations(), output);
  }

  // bool back_prop = 3;
  if (this->back_prop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->back_prop(), output);
  }

  // bool swap_memory = 4;
  if (this->swap_memory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->swap_memory(), output);
  }

  // string pivot_name = 5;
  if (this->pivot_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_name().data(), this->pivot_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.pivot_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->pivot_name(), output);
  }

  // string pivot_for_pred_name = 6;
  if (this->pivot_for_pred_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_for_pred_name().data(), this->pivot_for_pred_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.pivot_for_pred_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->pivot_for_pred_name(), output);
  }

  // string pivot_for_body_name = 7;
  if (this->pivot_for_body_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_for_body_name().data(), this->pivot_for_body_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.pivot_for_body_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->pivot_for_body_name(), output);
  }

  // repeated string loop_exit_names = 8;
  for (int i = 0; i < this->loop_exit_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loop_exit_names(i).data(), this->loop_exit_names(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.loop_exit_names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->loop_exit_names(i), output);
  }

  // .tensorflow.ValuesDef values_def = 9;
  if (this->has_values_def()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->values_def_, output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.WhileContextDef)
}

::google::protobuf::uint8* WhileContextDef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.WhileContextDef)
  // string context_name = 1;
  if (this->context_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->context_name().data(), this->context_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.context_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->context_name(), target);
  }

  // int32 parallel_iterations = 2;
  if (this->parallel_iterations() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->parallel_iterations(), target);
  }

  // bool back_prop = 3;
  if (this->back_prop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->back_prop(), target);
  }

  // bool swap_memory = 4;
  if (this->swap_memory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->swap_memory(), target);
  }

  // string pivot_name = 5;
  if (this->pivot_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_name().data(), this->pivot_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.pivot_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->pivot_name(), target);
  }

  // string pivot_for_pred_name = 6;
  if (this->pivot_for_pred_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_for_pred_name().data(), this->pivot_for_pred_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.pivot_for_pred_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->pivot_for_pred_name(), target);
  }

  // string pivot_for_body_name = 7;
  if (this->pivot_for_body_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pivot_for_body_name().data(), this->pivot_for_body_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.pivot_for_body_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->pivot_for_body_name(), target);
  }

  // repeated string loop_exit_names = 8;
  for (int i = 0; i < this->loop_exit_names_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loop_exit_names(i).data(), this->loop_exit_names(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.WhileContextDef.loop_exit_names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->loop_exit_names(i), target);
  }

  // .tensorflow.ValuesDef values_def = 9;
  if (this->has_values_def()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->values_def_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.WhileContextDef)
  return target;
}

size_t WhileContextDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.WhileContextDef)
  size_t total_size = 0;

  // repeated string loop_exit_names = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->loop_exit_names_size());
  for (int i = 0; i < this->loop_exit_names_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->loop_exit_names(i));
  }

  // string context_name = 1;
  if (this->context_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->context_name());
  }

  // string pivot_name = 5;
  if (this->pivot_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pivot_name());
  }

  // string pivot_for_pred_name = 6;
  if (this->pivot_for_pred_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pivot_for_pred_name());
  }

  // string pivot_for_body_name = 7;
  if (this->pivot_for_body_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pivot_for_body_name());
  }

  // .tensorflow.ValuesDef values_def = 9;
  if (this->has_values_def()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->values_def_);
  }

  // int32 parallel_iterations = 2;
  if (this->parallel_iterations() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parallel_iterations());
  }

  // bool back_prop = 3;
  if (this->back_prop() != 0) {
    total_size += 1 + 1;
  }

  // bool swap_memory = 4;
  if (this->swap_memory() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WhileContextDef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.WhileContextDef)
  GOOGLE_DCHECK_NE(&from, this);
  const WhileContextDef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WhileContextDef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.WhileContextDef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.WhileContextDef)
    MergeFrom(*source);
  }
}

void WhileContextDef::MergeFrom(const WhileContextDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.WhileContextDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  loop_exit_names_.MergeFrom(from.loop_exit_names_);
  if (from.context_name().size() > 0) {
    set_context_name(from.context_name());
  }
  if (from.pivot_name().size() > 0) {
    set_pivot_name(from.pivot_name());
  }
  if (from.pivot_for_pred_name().size() > 0) {
    set_pivot_for_pred_name(from.pivot_for_pred_name());
  }
  if (from.pivot_for_body_name().size() > 0) {
    set_pivot_for_body_name(from.pivot_for_body_name());
  }
  if (from.has_values_def()) {
    mutable_values_def()->::tensorflow::ValuesDef::MergeFrom(from.values_def());
  }
  if (from.parallel_iterations() != 0) {
    set_parallel_iterations(from.parallel_iterations());
  }
  if (from.back_prop() != 0) {
    set_back_prop(from.back_prop());
  }
  if (from.swap_memory() != 0) {
    set_swap_memory(from.swap_memory());
  }
}

void WhileContextDef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.WhileContextDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WhileContextDef::CopyFrom(const WhileContextDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.WhileContextDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhileContextDef::IsInitialized() const {
  return true;
}

void WhileContextDef::Swap(WhileContextDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    WhileContextDef* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void WhileContextDef::UnsafeArenaSwap(WhileContextDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void WhileContextDef::InternalSwap(WhileContextDef* other) {
  loop_exit_names_.UnsafeArenaSwap(&other->loop_exit_names_);
  context_name_.Swap(&other->context_name_);
  pivot_name_.Swap(&other->pivot_name_);
  pivot_for_pred_name_.Swap(&other->pivot_for_pred_name_);
  pivot_for_body_name_.Swap(&other->pivot_for_body_name_);
  std::swap(values_def_, other->values_def_);
  std::swap(parallel_iterations_, other->parallel_iterations_);
  std::swap(back_prop_, other->back_prop_);
  std::swap(swap_memory_, other->swap_memory_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WhileContextDef::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WhileContextDef

// string context_name = 1;
void WhileContextDef::clear_context_name() {
  context_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& WhileContextDef::context_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.context_name)
  return context_name_.Get();
}
void WhileContextDef::set_context_name(const ::std::string& value) {
  
  context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.context_name)
}
void WhileContextDef::set_context_name(const char* value) {
  
  context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.WhileContextDef.context_name)
}
void WhileContextDef::set_context_name(const char* value,
    size_t size) {
  
  context_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.WhileContextDef.context_name)
}
::std::string* WhileContextDef::mutable_context_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.context_name)
  return context_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::release_context_name() {
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.context_name)
  
  return context_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::unsafe_arena_release_context_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.WhileContextDef.context_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return context_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void WhileContextDef::set_allocated_context_name(::std::string* context_name) {
  if (context_name != NULL) {
    
  } else {
    
  }
  context_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.context_name)
}
void WhileContextDef::unsafe_arena_set_allocated_context_name(
    ::std::string* context_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (context_name != NULL) {
    
  } else {
    
  }
  context_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      context_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.WhileContextDef.context_name)
}

// int32 parallel_iterations = 2;
void WhileContextDef::clear_parallel_iterations() {
  parallel_iterations_ = 0;
}
::google::protobuf::int32 WhileContextDef::parallel_iterations() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.parallel_iterations)
  return parallel_iterations_;
}
void WhileContextDef::set_parallel_iterations(::google::protobuf::int32 value) {
  
  parallel_iterations_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.parallel_iterations)
}

// bool back_prop = 3;
void WhileContextDef::clear_back_prop() {
  back_prop_ = false;
}
bool WhileContextDef::back_prop() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.back_prop)
  return back_prop_;
}
void WhileContextDef::set_back_prop(bool value) {
  
  back_prop_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.back_prop)
}

// bool swap_memory = 4;
void WhileContextDef::clear_swap_memory() {
  swap_memory_ = false;
}
bool WhileContextDef::swap_memory() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.swap_memory)
  return swap_memory_;
}
void WhileContextDef::set_swap_memory(bool value) {
  
  swap_memory_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.swap_memory)
}

// string pivot_name = 5;
void WhileContextDef::clear_pivot_name() {
  pivot_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& WhileContextDef::pivot_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.pivot_name)
  return pivot_name_.Get();
}
void WhileContextDef::set_pivot_name(const ::std::string& value) {
  
  pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.pivot_name)
}
void WhileContextDef::set_pivot_name(const char* value) {
  
  pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.WhileContextDef.pivot_name)
}
void WhileContextDef::set_pivot_name(const char* value,
    size_t size) {
  
  pivot_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.WhileContextDef.pivot_name)
}
::std::string* WhileContextDef::mutable_pivot_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.pivot_name)
  return pivot_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::release_pivot_name() {
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.pivot_name)
  
  return pivot_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::unsafe_arena_release_pivot_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.WhileContextDef.pivot_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return pivot_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void WhileContextDef::set_allocated_pivot_name(::std::string* pivot_name) {
  if (pivot_name != NULL) {
    
  } else {
    
  }
  pivot_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pivot_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.pivot_name)
}
void WhileContextDef::unsafe_arena_set_allocated_pivot_name(
    ::std::string* pivot_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (pivot_name != NULL) {
    
  } else {
    
  }
  pivot_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      pivot_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.WhileContextDef.pivot_name)
}

// string pivot_for_pred_name = 6;
void WhileContextDef::clear_pivot_for_pred_name() {
  pivot_for_pred_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& WhileContextDef::pivot_for_pred_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.pivot_for_pred_name)
  return pivot_for_pred_name_.Get();
}
void WhileContextDef::set_pivot_for_pred_name(const ::std::string& value) {
  
  pivot_for_pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.pivot_for_pred_name)
}
void WhileContextDef::set_pivot_for_pred_name(const char* value) {
  
  pivot_for_pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.WhileContextDef.pivot_for_pred_name)
}
void WhileContextDef::set_pivot_for_pred_name(const char* value,
    size_t size) {
  
  pivot_for_pred_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.WhileContextDef.pivot_for_pred_name)
}
::std::string* WhileContextDef::mutable_pivot_for_pred_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.pivot_for_pred_name)
  return pivot_for_pred_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::release_pivot_for_pred_name() {
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.pivot_for_pred_name)
  
  return pivot_for_pred_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::unsafe_arena_release_pivot_for_pred_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.WhileContextDef.pivot_for_pred_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return pivot_for_pred_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void WhileContextDef::set_allocated_pivot_for_pred_name(::std::string* pivot_for_pred_name) {
  if (pivot_for_pred_name != NULL) {
    
  } else {
    
  }
  pivot_for_pred_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pivot_for_pred_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.pivot_for_pred_name)
}
void WhileContextDef::unsafe_arena_set_allocated_pivot_for_pred_name(
    ::std::string* pivot_for_pred_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (pivot_for_pred_name != NULL) {
    
  } else {
    
  }
  pivot_for_pred_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      pivot_for_pred_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.WhileContextDef.pivot_for_pred_name)
}

// string pivot_for_body_name = 7;
void WhileContextDef::clear_pivot_for_body_name() {
  pivot_for_body_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& WhileContextDef::pivot_for_body_name() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.pivot_for_body_name)
  return pivot_for_body_name_.Get();
}
void WhileContextDef::set_pivot_for_body_name(const ::std::string& value) {
  
  pivot_for_body_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.pivot_for_body_name)
}
void WhileContextDef::set_pivot_for_body_name(const char* value) {
  
  pivot_for_body_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.WhileContextDef.pivot_for_body_name)
}
void WhileContextDef::set_pivot_for_body_name(const char* value,
    size_t size) {
  
  pivot_for_body_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.WhileContextDef.pivot_for_body_name)
}
::std::string* WhileContextDef::mutable_pivot_for_body_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.pivot_for_body_name)
  return pivot_for_body_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::release_pivot_for_body_name() {
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.pivot_for_body_name)
  
  return pivot_for_body_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* WhileContextDef::unsafe_arena_release_pivot_for_body_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.WhileContextDef.pivot_for_body_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return pivot_for_body_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void WhileContextDef::set_allocated_pivot_for_body_name(::std::string* pivot_for_body_name) {
  if (pivot_for_body_name != NULL) {
    
  } else {
    
  }
  pivot_for_body_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pivot_for_body_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.pivot_for_body_name)
}
void WhileContextDef::unsafe_arena_set_allocated_pivot_for_body_name(
    ::std::string* pivot_for_body_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (pivot_for_body_name != NULL) {
    
  } else {
    
  }
  pivot_for_body_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      pivot_for_body_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.WhileContextDef.pivot_for_body_name)
}

// repeated string loop_exit_names = 8;
int WhileContextDef::loop_exit_names_size() const {
  return loop_exit_names_.size();
}
void WhileContextDef::clear_loop_exit_names() {
  loop_exit_names_.Clear();
}
const ::std::string& WhileContextDef::loop_exit_names(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.loop_exit_names)
  return loop_exit_names_.Get(index);
}
::std::string* WhileContextDef::mutable_loop_exit_names(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.loop_exit_names)
  return loop_exit_names_.Mutable(index);
}
void WhileContextDef::set_loop_exit_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.WhileContextDef.loop_exit_names)
  loop_exit_names_.Mutable(index)->assign(value);
}
void WhileContextDef::set_loop_exit_names(int index, const char* value) {
  loop_exit_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.WhileContextDef.loop_exit_names)
}
void WhileContextDef::set_loop_exit_names(int index, const char* value, size_t size) {
  loop_exit_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.WhileContextDef.loop_exit_names)
}
::std::string* WhileContextDef::add_loop_exit_names() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.WhileContextDef.loop_exit_names)
  return loop_exit_names_.Add();
}
void WhileContextDef::add_loop_exit_names(const ::std::string& value) {
  loop_exit_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.WhileContextDef.loop_exit_names)
}
void WhileContextDef::add_loop_exit_names(const char* value) {
  loop_exit_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.WhileContextDef.loop_exit_names)
}
void WhileContextDef::add_loop_exit_names(const char* value, size_t size) {
  loop_exit_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.WhileContextDef.loop_exit_names)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
WhileContextDef::loop_exit_names() const {
  // @@protoc_insertion_point(field_list:tensorflow.WhileContextDef.loop_exit_names)
  return loop_exit_names_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
WhileContextDef::mutable_loop_exit_names() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.WhileContextDef.loop_exit_names)
  return &loop_exit_names_;
}

// .tensorflow.ValuesDef values_def = 9;
bool WhileContextDef::has_values_def() const {
  return this != internal_default_instance() && values_def_ != NULL;
}
void WhileContextDef::clear_values_def() {
  if (GetArenaNoVirtual() == NULL && values_def_ != NULL) delete values_def_;
  values_def_ = NULL;
}
const ::tensorflow::ValuesDef& WhileContextDef::values_def() const {
  // @@protoc_insertion_point(field_get:tensorflow.WhileContextDef.values_def)
  return values_def_ != NULL ? *values_def_
                         : *::tensorflow::ValuesDef::internal_default_instance();
}
::tensorflow::ValuesDef* WhileContextDef::mutable_values_def() {
  
  if (values_def_ == NULL) {
    _slow_mutable_values_def();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.WhileContextDef.values_def)
  return values_def_;
}
::tensorflow::ValuesDef* WhileContextDef::release_values_def() {
  // @@protoc_insertion_point(field_release:tensorflow.WhileContextDef.values_def)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_values_def();
  } else {
    ::tensorflow::ValuesDef* temp = values_def_;
    values_def_ = NULL;
    return temp;
  }
}
 void WhileContextDef::set_allocated_values_def(::tensorflow::ValuesDef* values_def) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete values_def_;
  }
  if (values_def != NULL) {
    _slow_set_allocated_values_def(message_arena, &values_def);
  }
  values_def_ = values_def;
  if (values_def) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.WhileContextDef.values_def)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
