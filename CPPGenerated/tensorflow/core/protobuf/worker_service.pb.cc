// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/worker_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow/core/protobuf/worker_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {
namespace grpc {

namespace protobuf_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto {


namespace {


}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = { ~0u };
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;
namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tensorflow/core/protobuf/worker_service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      NULL, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void TableStruct::Shutdown() {
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::InitDefaults();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n-tensorflow/core/protobuf/worker_servic"
      "e.proto\022\017tensorflow.grpc\032%tensorflow/cor"
      "e/protobuf/worker.proto2\261\006\n\rWorkerServic"
      "e\022H\n\tGetStatus\022\034.tensorflow.GetStatusReq"
      "uest\032\035.tensorflow.GetStatusResponse\022f\n\023C"
      "reateWorkerSession\022&.tensorflow.CreateWo"
      "rkerSessionRequest\032\'.tensorflow.CreateWo"
      "rkerSessionResponse\022T\n\rRegisterGraph\022 .t"
      "ensorflow.RegisterGraphRequest\032!.tensorf"
      "low.RegisterGraphResponse\022Z\n\017DeregisterG"
      "raph\022\".tensorflow.DeregisterGraphRequest"
      "\032#.tensorflow.DeregisterGraphResponse\022E\n"
      "\010RunGraph\022\033.tensorflow.RunGraphRequest\032\034"
      ".tensorflow.RunGraphResponse\022Q\n\014CleanupG"
      "raph\022\037.tensorflow.CleanupGraphRequest\032 ."
      "tensorflow.CleanupGraphResponse\022K\n\nClean"
      "upAll\022\035.tensorflow.CleanupAllRequest\032\036.t"
      "ensorflow.CleanupAllResponse\022M\n\nRecvTens"
      "or\022\035.tensorflow.RecvTensorRequest\032\036.tens"
      "orflow.RecvTensorResponse\"\000\022B\n\007Logging\022\032"
      ".tensorflow.LoggingRequest\032\033.tensorflow."
      "LoggingResponse\022B\n\007Tracing\022\032.tensorflow."
      "TracingRequest\032\033.tensorflow.TracingRespo"
      "nseB3\n\032org.tensorflow.distruntimeB\023Worke"
      "rServiceProtosP\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 984);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/worker_service.proto", &protobuf_RegisterTypes);
  ::tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fworker_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2fworker_5fservice_2eproto


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpc
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
