// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/tensor_bundle.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tensorflow/core/protobuf/tensor_bundle.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tensorflow {
class BundleHeaderProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BundleHeaderProto> {
} _BundleHeaderProto_default_instance_;
class BundleEntryProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BundleEntryProto> {
} _BundleEntryProto_default_instance_;

namespace protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BundleHeaderProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BundleHeaderProto, num_shards_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BundleHeaderProto, endianness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BundleHeaderProto, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BundleEntryProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BundleEntryProto, dtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BundleEntryProto, shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BundleEntryProto, shard_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BundleEntryProto, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BundleEntryProto, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BundleEntryProto, crc32c_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BundleEntryProto, slices_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(BundleHeaderProto)},
  { 7, -1, sizeof(BundleEntryProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_BundleHeaderProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BundleEntryProto_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tensorflow/core/protobuf/tensor_bundle.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _BundleHeaderProto_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _BundleEntryProto_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::InitDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::InitDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::InitDefaults();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::InitDefaults();
  _BundleHeaderProto_default_instance_.DefaultConstruct();
  _BundleEntryProto_default_instance_.DefaultConstruct();
  _BundleHeaderProto_default_instance_.get_mutable()->version_ = const_cast< ::tensorflow::VersionDef*>(
      ::tensorflow::VersionDef::internal_default_instance());
  _BundleEntryProto_default_instance_.get_mutable()->shape_ = const_cast< ::tensorflow::TensorShapeProto*>(
      ::tensorflow::TensorShapeProto::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n,tensorflow/core/protobuf/tensor_bundle"
      ".proto\022\ntensorflow\032,tensorflow/core/fram"
      "ework/tensor_shape.proto\032,tensorflow/cor"
      "e/framework/tensor_slice.proto\032%tensorfl"
      "ow/core/framework/types.proto\032(tensorflo"
      "w/core/framework/versions.proto\"\261\001\n\021Bund"
      "leHeaderProto\022\022\n\nnum_shards\030\001 \001(\005\022<\n\nend"
      "ianness\030\002 \001(\0162(.tensorflow.BundleHeaderP"
      "roto.Endianness\022\'\n\007version\030\003 \001(\0132\026.tenso"
      "rflow.VersionDef\"!\n\nEndianness\022\n\n\006LITTLE"
      "\020\000\022\007\n\003BIG\020\001\"\322\001\n\020BundleEntryProto\022#\n\005dtyp"
      "e\030\001 \001(\0162\024.tensorflow.DataType\022+\n\005shape\030\002"
      " \001(\0132\034.tensorflow.TensorShapeProto\022\020\n\010sh"
      "ard_id\030\003 \001(\005\022\016\n\006offset\030\004 \001(\003\022\014\n\004size\030\005 \001"
      "(\003\022\016\n\006crc32c\030\006 \001(\007\022,\n\006slices\030\007 \003(\0132\034.ten"
      "sorflow.TensorSliceProtoB.\n\023org.tensorfl"
      "ow.utilB\022TensorBundleProtosP\001\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 680);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/core/protobuf/tensor_bundle.proto", &protobuf_RegisterTypes);
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::AddDescriptors();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::AddDescriptors();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::AddDescriptors();
  ::tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto

const ::google::protobuf::EnumDescriptor* BundleHeaderProto_Endianness_descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::file_level_enum_descriptors[0];
}
bool BundleHeaderProto_Endianness_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BundleHeaderProto_Endianness BundleHeaderProto::LITTLE;
const BundleHeaderProto_Endianness BundleHeaderProto::BIG;
const BundleHeaderProto_Endianness BundleHeaderProto::Endianness_MIN;
const BundleHeaderProto_Endianness BundleHeaderProto::Endianness_MAX;
const int BundleHeaderProto::Endianness_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void BundleHeaderProto::_slow_mutable_version() {
  version_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::VersionDef >(
      GetArenaNoVirtual());
}
::tensorflow::VersionDef* BundleHeaderProto::_slow_release_version() {
  if (version_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::VersionDef* temp = new ::tensorflow::VersionDef(*version_);
    version_ = NULL;
    return temp;
  }
}
::tensorflow::VersionDef* BundleHeaderProto::unsafe_arena_release_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.BundleHeaderProto.version)
  
  ::tensorflow::VersionDef* temp = version_;
  version_ = NULL;
  return temp;
}
void BundleHeaderProto::_slow_set_allocated_version(
    ::google::protobuf::Arena* message_arena, ::tensorflow::VersionDef** version) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*version) == NULL) {
      message_arena->Own(*version);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*version)) {
      ::tensorflow::VersionDef* new_version = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::VersionDef >(
            message_arena);
      new_version->CopyFrom(**version);
      *version = new_version;
    }
}
void BundleHeaderProto::unsafe_arena_set_allocated_version(
    ::tensorflow::VersionDef* version) {
  if (GetArenaNoVirtual() == NULL) {
    delete version_;
  }
  version_ = version;
  if (version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.BundleHeaderProto.version)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BundleHeaderProto::kNumShardsFieldNumber;
const int BundleHeaderProto::kEndiannessFieldNumber;
const int BundleHeaderProto::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BundleHeaderProto::BundleHeaderProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.BundleHeaderProto)
}
BundleHeaderProto::BundleHeaderProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.BundleHeaderProto)
}
BundleHeaderProto::BundleHeaderProto(const BundleHeaderProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_version()) {
    version_ = new ::tensorflow::VersionDef(*from.version_);
  } else {
    version_ = NULL;
  }
  ::memcpy(&num_shards_, &from.num_shards_,
    reinterpret_cast<char*>(&endianness_) -
    reinterpret_cast<char*>(&num_shards_) + sizeof(endianness_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.BundleHeaderProto)
}

void BundleHeaderProto::SharedCtor() {
  ::memset(&version_, 0, reinterpret_cast<char*>(&endianness_) -
    reinterpret_cast<char*>(&version_) + sizeof(endianness_));
  _cached_size_ = 0;
}

BundleHeaderProto::~BundleHeaderProto() {
  // @@protoc_insertion_point(destructor:tensorflow.BundleHeaderProto)
  SharedDtor();
}

void BundleHeaderProto::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) {
    delete version_;
  }
}

void BundleHeaderProto::ArenaDtor(void* object) {
  BundleHeaderProto* _this = reinterpret_cast< BundleHeaderProto* >(object);
  (void)_this;
}
void BundleHeaderProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BundleHeaderProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BundleHeaderProto::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::file_level_metadata[0].descriptor;
}

const BundleHeaderProto& BundleHeaderProto::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::InitDefaults();
  return *internal_default_instance();
}

BundleHeaderProto* BundleHeaderProto::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<BundleHeaderProto>(arena);
}

void BundleHeaderProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.BundleHeaderProto)
  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
  ::memset(&num_shards_, 0, reinterpret_cast<char*>(&endianness_) -
    reinterpret_cast<char*>(&num_shards_) + sizeof(endianness_));
}

bool BundleHeaderProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.BundleHeaderProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 num_shards = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_shards_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.BundleHeaderProto.Endianness endianness = 2;
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_endianness(static_cast< ::tensorflow::BundleHeaderProto_Endianness >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.VersionDef version = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.BundleHeaderProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.BundleHeaderProto)
  return false;
#undef DO_
}

void BundleHeaderProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.BundleHeaderProto)
  // int32 num_shards = 1;
  if (this->num_shards() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_shards(), output);
  }

  // .tensorflow.BundleHeaderProto.Endianness endianness = 2;
  if (this->endianness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->endianness(), output);
  }

  // .tensorflow.VersionDef version = 3;
  if (this->has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->version_, output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.BundleHeaderProto)
}

::google::protobuf::uint8* BundleHeaderProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.BundleHeaderProto)
  // int32 num_shards = 1;
  if (this->num_shards() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_shards(), target);
  }

  // .tensorflow.BundleHeaderProto.Endianness endianness = 2;
  if (this->endianness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->endianness(), target);
  }

  // .tensorflow.VersionDef version = 3;
  if (this->has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->version_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.BundleHeaderProto)
  return target;
}

size_t BundleHeaderProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.BundleHeaderProto)
  size_t total_size = 0;

  // .tensorflow.VersionDef version = 3;
  if (this->has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->version_);
  }

  // int32 num_shards = 1;
  if (this->num_shards() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_shards());
  }

  // .tensorflow.BundleHeaderProto.Endianness endianness = 2;
  if (this->endianness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->endianness());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BundleHeaderProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.BundleHeaderProto)
  GOOGLE_DCHECK_NE(&from, this);
  const BundleHeaderProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BundleHeaderProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.BundleHeaderProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.BundleHeaderProto)
    MergeFrom(*source);
  }
}

void BundleHeaderProto::MergeFrom(const BundleHeaderProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.BundleHeaderProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_version()) {
    mutable_version()->::tensorflow::VersionDef::MergeFrom(from.version());
  }
  if (from.num_shards() != 0) {
    set_num_shards(from.num_shards());
  }
  if (from.endianness() != 0) {
    set_endianness(from.endianness());
  }
}

void BundleHeaderProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.BundleHeaderProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BundleHeaderProto::CopyFrom(const BundleHeaderProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.BundleHeaderProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BundleHeaderProto::IsInitialized() const {
  return true;
}

void BundleHeaderProto::Swap(BundleHeaderProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BundleHeaderProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BundleHeaderProto::UnsafeArenaSwap(BundleHeaderProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BundleHeaderProto::InternalSwap(BundleHeaderProto* other) {
  std::swap(version_, other->version_);
  std::swap(num_shards_, other->num_shards_);
  std::swap(endianness_, other->endianness_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BundleHeaderProto::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BundleHeaderProto

// int32 num_shards = 1;
void BundleHeaderProto::clear_num_shards() {
  num_shards_ = 0;
}
::google::protobuf::int32 BundleHeaderProto::num_shards() const {
  // @@protoc_insertion_point(field_get:tensorflow.BundleHeaderProto.num_shards)
  return num_shards_;
}
void BundleHeaderProto::set_num_shards(::google::protobuf::int32 value) {
  
  num_shards_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.BundleHeaderProto.num_shards)
}

// .tensorflow.BundleHeaderProto.Endianness endianness = 2;
void BundleHeaderProto::clear_endianness() {
  endianness_ = 0;
}
::tensorflow::BundleHeaderProto_Endianness BundleHeaderProto::endianness() const {
  // @@protoc_insertion_point(field_get:tensorflow.BundleHeaderProto.endianness)
  return static_cast< ::tensorflow::BundleHeaderProto_Endianness >(endianness_);
}
void BundleHeaderProto::set_endianness(::tensorflow::BundleHeaderProto_Endianness value) {
  
  endianness_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.BundleHeaderProto.endianness)
}

// .tensorflow.VersionDef version = 3;
bool BundleHeaderProto::has_version() const {
  return this != internal_default_instance() && version_ != NULL;
}
void BundleHeaderProto::clear_version() {
  if (GetArenaNoVirtual() == NULL && version_ != NULL) delete version_;
  version_ = NULL;
}
const ::tensorflow::VersionDef& BundleHeaderProto::version() const {
  // @@protoc_insertion_point(field_get:tensorflow.BundleHeaderProto.version)
  return version_ != NULL ? *version_
                         : *::tensorflow::VersionDef::internal_default_instance();
}
::tensorflow::VersionDef* BundleHeaderProto::mutable_version() {
  
  if (version_ == NULL) {
    _slow_mutable_version();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.BundleHeaderProto.version)
  return version_;
}
::tensorflow::VersionDef* BundleHeaderProto::release_version() {
  // @@protoc_insertion_point(field_release:tensorflow.BundleHeaderProto.version)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_version();
  } else {
    ::tensorflow::VersionDef* temp = version_;
    version_ = NULL;
    return temp;
  }
}
 void BundleHeaderProto::set_allocated_version(::tensorflow::VersionDef* version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete version_;
  }
  if (version != NULL) {
    _slow_set_allocated_version(message_arena, &version);
  }
  version_ = version;
  if (version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.BundleHeaderProto.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void BundleEntryProto::_slow_mutable_shape() {
  shape_ = ::google::protobuf::Arena::CreateMessage< ::tensorflow::TensorShapeProto >(
      GetArenaNoVirtual());
}
::tensorflow::TensorShapeProto* BundleEntryProto::_slow_release_shape() {
  if (shape_ == NULL) {
    return NULL;
  } else {
    ::tensorflow::TensorShapeProto* temp = new ::tensorflow::TensorShapeProto(*shape_);
    shape_ = NULL;
    return temp;
  }
}
::tensorflow::TensorShapeProto* BundleEntryProto::unsafe_arena_release_shape() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.BundleEntryProto.shape)
  
  ::tensorflow::TensorShapeProto* temp = shape_;
  shape_ = NULL;
  return temp;
}
void BundleEntryProto::_slow_set_allocated_shape(
    ::google::protobuf::Arena* message_arena, ::tensorflow::TensorShapeProto** shape) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*shape) == NULL) {
      message_arena->Own(*shape);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*shape)) {
      ::tensorflow::TensorShapeProto* new_shape = 
            ::google::protobuf::Arena::CreateMessage< ::tensorflow::TensorShapeProto >(
            message_arena);
      new_shape->CopyFrom(**shape);
      *shape = new_shape;
    }
}
void BundleEntryProto::unsafe_arena_set_allocated_shape(
    ::tensorflow::TensorShapeProto* shape) {
  if (GetArenaNoVirtual() == NULL) {
    delete shape_;
  }
  shape_ = shape;
  if (shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.BundleEntryProto.shape)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BundleEntryProto::kDtypeFieldNumber;
const int BundleEntryProto::kShapeFieldNumber;
const int BundleEntryProto::kShardIdFieldNumber;
const int BundleEntryProto::kOffsetFieldNumber;
const int BundleEntryProto::kSizeFieldNumber;
const int BundleEntryProto::kCrc32CFieldNumber;
const int BundleEntryProto::kSlicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BundleEntryProto::BundleEntryProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.BundleEntryProto)
}
BundleEntryProto::BundleEntryProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  slices_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.BundleEntryProto)
}
BundleEntryProto::BundleEntryProto(const BundleEntryProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      slices_(from.slices_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_shape()) {
    shape_ = new ::tensorflow::TensorShapeProto(*from.shape_);
  } else {
    shape_ = NULL;
  }
  ::memcpy(&dtype_, &from.dtype_,
    reinterpret_cast<char*>(&crc32c_) -
    reinterpret_cast<char*>(&dtype_) + sizeof(crc32c_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.BundleEntryProto)
}

void BundleEntryProto::SharedCtor() {
  ::memset(&shape_, 0, reinterpret_cast<char*>(&crc32c_) -
    reinterpret_cast<char*>(&shape_) + sizeof(crc32c_));
  _cached_size_ = 0;
}

BundleEntryProto::~BundleEntryProto() {
  // @@protoc_insertion_point(destructor:tensorflow.BundleEntryProto)
  SharedDtor();
}

void BundleEntryProto::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  if (this != internal_default_instance()) {
    delete shape_;
  }
}

void BundleEntryProto::ArenaDtor(void* object) {
  BundleEntryProto* _this = reinterpret_cast< BundleEntryProto* >(object);
  (void)_this;
}
void BundleEntryProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void BundleEntryProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BundleEntryProto::descriptor() {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::file_level_metadata[1].descriptor;
}

const BundleEntryProto& BundleEntryProto::default_instance() {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::InitDefaults();
  return *internal_default_instance();
}

BundleEntryProto* BundleEntryProto::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<BundleEntryProto>(arena);
}

void BundleEntryProto::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.BundleEntryProto)
  slices_.Clear();
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) {
    delete shape_;
  }
  shape_ = NULL;
  ::memset(&dtype_, 0, reinterpret_cast<char*>(&crc32c_) -
    reinterpret_cast<char*>(&dtype_) + sizeof(crc32c_));
}

bool BundleEntryProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.BundleEntryProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.DataType dtype = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_dtype(static_cast< ::tensorflow::DataType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.TensorShapeProto shape = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 shard_id = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shard_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 offset = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 crc32c = 6;
      case 6: {
        if (tag == 53u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &crc32c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.TensorSliceProto slices = 7;
      case 7: {
        if (tag == 58u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_slices()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.BundleEntryProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.BundleEntryProto)
  return false;
#undef DO_
}

void BundleEntryProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.BundleEntryProto)
  // .tensorflow.DataType dtype = 1;
  if (this->dtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->dtype(), output);
  }

  // .tensorflow.TensorShapeProto shape = 2;
  if (this->has_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->shape_, output);
  }

  // int32 shard_id = 3;
  if (this->shard_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->shard_id(), output);
  }

  // int64 offset = 4;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->offset(), output);
  }

  // int64 size = 5;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->size(), output);
  }

  // fixed32 crc32c = 6;
  if (this->crc32c() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(6, this->crc32c(), output);
  }

  // repeated .tensorflow.TensorSliceProto slices = 7;
  for (unsigned int i = 0, n = this->slices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->slices(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tensorflow.BundleEntryProto)
}

::google::protobuf::uint8* BundleEntryProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.BundleEntryProto)
  // .tensorflow.DataType dtype = 1;
  if (this->dtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->dtype(), target);
  }

  // .tensorflow.TensorShapeProto shape = 2;
  if (this->has_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->shape_, false, target);
  }

  // int32 shard_id = 3;
  if (this->shard_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->shard_id(), target);
  }

  // int64 offset = 4;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->offset(), target);
  }

  // int64 size = 5;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->size(), target);
  }

  // fixed32 crc32c = 6;
  if (this->crc32c() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(6, this->crc32c(), target);
  }

  // repeated .tensorflow.TensorSliceProto slices = 7;
  for (unsigned int i = 0, n = this->slices_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->slices(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.BundleEntryProto)
  return target;
}

size_t BundleEntryProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.BundleEntryProto)
  size_t total_size = 0;

  // repeated .tensorflow.TensorSliceProto slices = 7;
  {
    unsigned int count = this->slices_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->slices(i));
    }
  }

  // .tensorflow.TensorShapeProto shape = 2;
  if (this->has_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->shape_);
  }

  // .tensorflow.DataType dtype = 1;
  if (this->dtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->dtype());
  }

  // int32 shard_id = 3;
  if (this->shard_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shard_id());
  }

  // int64 offset = 4;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->offset());
  }

  // int64 size = 5;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  // fixed32 crc32c = 6;
  if (this->crc32c() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BundleEntryProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.BundleEntryProto)
  GOOGLE_DCHECK_NE(&from, this);
  const BundleEntryProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BundleEntryProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.BundleEntryProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.BundleEntryProto)
    MergeFrom(*source);
  }
}

void BundleEntryProto::MergeFrom(const BundleEntryProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.BundleEntryProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  slices_.MergeFrom(from.slices_);
  if (from.has_shape()) {
    mutable_shape()->::tensorflow::TensorShapeProto::MergeFrom(from.shape());
  }
  if (from.dtype() != 0) {
    set_dtype(from.dtype());
  }
  if (from.shard_id() != 0) {
    set_shard_id(from.shard_id());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.crc32c() != 0) {
    set_crc32c(from.crc32c());
  }
}

void BundleEntryProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.BundleEntryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BundleEntryProto::CopyFrom(const BundleEntryProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.BundleEntryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BundleEntryProto::IsInitialized() const {
  return true;
}

void BundleEntryProto::Swap(BundleEntryProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    BundleEntryProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void BundleEntryProto::UnsafeArenaSwap(BundleEntryProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void BundleEntryProto::InternalSwap(BundleEntryProto* other) {
  slices_.UnsafeArenaSwap(&other->slices_);
  std::swap(shape_, other->shape_);
  std::swap(dtype_, other->dtype_);
  std::swap(shard_id_, other->shard_id_);
  std::swap(offset_, other->offset_);
  std::swap(size_, other->size_);
  std::swap(crc32c_, other->crc32c_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BundleEntryProto::GetMetadata() const {
  protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BundleEntryProto

// .tensorflow.DataType dtype = 1;
void BundleEntryProto::clear_dtype() {
  dtype_ = 0;
}
::tensorflow::DataType BundleEntryProto::dtype() const {
  // @@protoc_insertion_point(field_get:tensorflow.BundleEntryProto.dtype)
  return static_cast< ::tensorflow::DataType >(dtype_);
}
void BundleEntryProto::set_dtype(::tensorflow::DataType value) {
  
  dtype_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.BundleEntryProto.dtype)
}

// .tensorflow.TensorShapeProto shape = 2;
bool BundleEntryProto::has_shape() const {
  return this != internal_default_instance() && shape_ != NULL;
}
void BundleEntryProto::clear_shape() {
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) delete shape_;
  shape_ = NULL;
}
const ::tensorflow::TensorShapeProto& BundleEntryProto::shape() const {
  // @@protoc_insertion_point(field_get:tensorflow.BundleEntryProto.shape)
  return shape_ != NULL ? *shape_
                         : *::tensorflow::TensorShapeProto::internal_default_instance();
}
::tensorflow::TensorShapeProto* BundleEntryProto::mutable_shape() {
  
  if (shape_ == NULL) {
    _slow_mutable_shape();
  }
  // @@protoc_insertion_point(field_mutable:tensorflow.BundleEntryProto.shape)
  return shape_;
}
::tensorflow::TensorShapeProto* BundleEntryProto::release_shape() {
  // @@protoc_insertion_point(field_release:tensorflow.BundleEntryProto.shape)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_shape();
  } else {
    ::tensorflow::TensorShapeProto* temp = shape_;
    shape_ = NULL;
    return temp;
  }
}
 void BundleEntryProto::set_allocated_shape(::tensorflow::TensorShapeProto* shape) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete shape_;
  }
  if (shape != NULL) {
    _slow_set_allocated_shape(message_arena, &shape);
  }
  shape_ = shape;
  if (shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.BundleEntryProto.shape)
}

// int32 shard_id = 3;
void BundleEntryProto::clear_shard_id() {
  shard_id_ = 0;
}
::google::protobuf::int32 BundleEntryProto::shard_id() const {
  // @@protoc_insertion_point(field_get:tensorflow.BundleEntryProto.shard_id)
  return shard_id_;
}
void BundleEntryProto::set_shard_id(::google::protobuf::int32 value) {
  
  shard_id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.BundleEntryProto.shard_id)
}

// int64 offset = 4;
void BundleEntryProto::clear_offset() {
  offset_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BundleEntryProto::offset() const {
  // @@protoc_insertion_point(field_get:tensorflow.BundleEntryProto.offset)
  return offset_;
}
void BundleEntryProto::set_offset(::google::protobuf::int64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.BundleEntryProto.offset)
}

// int64 size = 5;
void BundleEntryProto::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BundleEntryProto::size() const {
  // @@protoc_insertion_point(field_get:tensorflow.BundleEntryProto.size)
  return size_;
}
void BundleEntryProto::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.BundleEntryProto.size)
}

// fixed32 crc32c = 6;
void BundleEntryProto::clear_crc32c() {
  crc32c_ = 0u;
}
::google::protobuf::uint32 BundleEntryProto::crc32c() const {
  // @@protoc_insertion_point(field_get:tensorflow.BundleEntryProto.crc32c)
  return crc32c_;
}
void BundleEntryProto::set_crc32c(::google::protobuf::uint32 value) {
  
  crc32c_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.BundleEntryProto.crc32c)
}

// repeated .tensorflow.TensorSliceProto slices = 7;
int BundleEntryProto::slices_size() const {
  return slices_.size();
}
void BundleEntryProto::clear_slices() {
  slices_.Clear();
}
const ::tensorflow::TensorSliceProto& BundleEntryProto::slices(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.BundleEntryProto.slices)
  return slices_.Get(index);
}
::tensorflow::TensorSliceProto* BundleEntryProto::mutable_slices(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.BundleEntryProto.slices)
  return slices_.Mutable(index);
}
::tensorflow::TensorSliceProto* BundleEntryProto::add_slices() {
  // @@protoc_insertion_point(field_add:tensorflow.BundleEntryProto.slices)
  return slices_.Add();
}
::google::protobuf::RepeatedPtrField< ::tensorflow::TensorSliceProto >*
BundleEntryProto::mutable_slices() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.BundleEntryProto.slices)
  return &slices_;
}
const ::google::protobuf::RepeatedPtrField< ::tensorflow::TensorSliceProto >&
BundleEntryProto::slices() const {
  // @@protoc_insertion_point(field_list:tensorflow.BundleEntryProto.slices)
  return slices_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)
